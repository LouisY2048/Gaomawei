{"id":"f3605fc801102775411393093728b54e","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in ERC-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Validate that a timepoint is in the past, and return it as a uint48.\n     */\n    function _validateTimepoint(uint256 timepoint) internal view returns (uint48) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        return SafeCast.toUint48(timepoint);\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].upperLookupRecent(_validateTimepoint(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        return _totalCheckpoints.upperLookupRecent(_validateTimepoint(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) internal virtual {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n * power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace224 storage self,\n        uint32 key,\n        uint224 value\n    ) internal returns (uint224 oldValue, uint224 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint224 value\n    ) private returns (uint224 oldValue, uint224 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint224 storage last = _unsafeAccess(self, pos - 1);\n            uint32 lastKey = last._key;\n            uint224 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace208 storage self,\n        uint48 key,\n        uint208 value\n    ) internal returns (uint208 oldValue, uint208 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint208 value\n    ) private returns (uint208 oldValue, uint208 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint208 storage last = _unsafeAccess(self, pos - 1);\n            uint48 lastKey = last._key;\n            uint208 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(\n        Trace160 storage self,\n        uint96 key,\n        uint160 value\n    ) internal returns (uint160 oldValue, uint160 newValue) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 storage ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint160 value\n    ) private returns (uint160 oldValue, uint160 newValue) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            Checkpoint160 storage last = _unsafeAccess(self, pos - 1);\n            uint96 lastKey = last._key;\n            uint160 lastValue = last._value;\n\n            // Checkpoint keys must be non-decreasing.\n            if (lastKey > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (lastKey == key) {\n                last._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (lastValue, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(\n        Delay self,\n        uint48 timepoint\n    ) private pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        (valueBefore, valueAfter, effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/CustomERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract CustomERC20 is ERC20 {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\r\n\r\n    function mint(address to, uint256 amount) public virtual {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(uint256 amount) public virtual {\r\n        _burn(msg.sender, amount);\r\n    }\r\n} "},"contracts/NewToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./CustomERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\n\r\ncontract NewToken is CustomERC20, ERC20Burnable, ERC20Pausable, Ownable, ERC20Permit, ERC20Votes {\r\n    // 代币元数据\r\n    string private _tokenMetadataURI;\r\n    uint256 public constant MAX_SUPPLY = 1000000 * 10**18; // 最大供应量\r\n    uint256 public constant MIN_BALANCE = 1 * 10**18; // 最小余额要求\r\n    \r\n    // 转账限制\r\n    uint256 public maxTransferAmount;\r\n    bool public transferRestricted;\r\n    \r\n    // 事件定义\r\n    event TokenMinted(address indexed to, uint256 amount);\r\n    event TokenBurned(address indexed from, uint256 amount);\r\n    event MaxTransferAmountUpdated(uint256 oldAmount, uint256 newAmount);\r\n    event TransferRestrictionUpdated(bool oldStatus, bool newStatus);\r\n    event TokenURISet(string newTokenURI);\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory metadataURI\r\n    ) CustomERC20(name, symbol) ERC20Permit(name) Ownable(msg.sender) {\r\n        _tokenMetadataURI = metadataURI;\r\n        maxTransferAmount = MAX_SUPPLY / 100; // 默认最大转账额为总供应量的1%\r\n        transferRestricted = true; // 默认开启转账限制\r\n    }\r\n\r\n    /**\r\n     * @dev 铸造代币\r\n     * @param to 接收地址\r\n     * @param amount 铸造数量\r\n     */\r\n    function mint(address to, uint256 amount) public onlyOwner override {\r\n        require(totalSupply() + amount <= MAX_SUPPLY, \"Exceeds max supply\");\r\n        super.mint(to, amount);\r\n        emit TokenMinted(to, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev 销毁代币\r\n     * @param amount 销毁数量\r\n     */\r\n    function burn(uint256 amount) public override(CustomERC20, ERC20Burnable) {\r\n        uint256 senderBalance = balanceOf(msg.sender);\r\n        require(senderBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        require(senderBalance - amount >= MIN_BALANCE, \"Balance would fall below minimum\");\r\n        super.burn(amount);\r\n        emit TokenBurned(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev 设置最大转账金额\r\n     * @param newAmount 新的最大转账金额\r\n     */\r\n    function setMaxTransferAmount(uint256 newAmount) public onlyOwner {\r\n        require(newAmount > 0, \"Amount must be greater than 0\");\r\n        uint256 oldAmount = maxTransferAmount;\r\n        maxTransferAmount = newAmount;\r\n        emit MaxTransferAmountUpdated(oldAmount, newAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev 更新转账限制状态\r\n     * @param newStatus 新的限制状态\r\n     */\r\n    function setTransferRestriction(bool newStatus) public onlyOwner {\r\n        bool oldStatus = transferRestricted;\r\n        transferRestricted = newStatus;\r\n        emit TransferRestrictionUpdated(oldStatus, newStatus);\r\n    }\r\n\r\n    /**\r\n     * @dev 设置代币URI\r\n     * @param newTokenURI 新的URI\r\n     */\r\n    function setTokenURI(string memory newTokenURI) public onlyOwner {\r\n        require(bytes(newTokenURI).length > 0, \"URI cannot be empty\");\r\n        _tokenMetadataURI = newTokenURI;\r\n        emit TokenURISet(newTokenURI);\r\n    }\r\n\r\n    /**\r\n     * @dev 暂停合约\r\n     */\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev 恢复合约\r\n     */\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev 获取代币URI\r\n     */\r\n    function tokenURI() public view returns (string memory) {\r\n        return _tokenMetadataURI;\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _update(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal virtual override(ERC20, ERC20Pausable, ERC20Votes) {\r\n        require(!paused(), \"Token transfer while paused\");\r\n        require(from != to, \"Self transfers not allowed\");\r\n        \r\n        if (from != address(0) && to != address(0)) { // 只在转账时检查，不在铸造和销毁时检查\r\n            require(value > 0, \"Amount must be greater than 0\");\r\n            \r\n            if (transferRestricted) {\r\n                require(value <= maxTransferAmount, \"Exceeds max transfer amount\");\r\n            }\r\n            \r\n            // 检查发送者余额\r\n            uint256 fromBalance = balanceOf(from);\r\n            require(fromBalance >= value, \"Insufficient balance\");\r\n            require(fromBalance - value >= MIN_BALANCE, \"Balance would fall below minimum\");\r\n            \r\n            uint256 toBalance = balanceOf(to);\r\n            if (toBalance > 0) {\r\n                // 如果接收者已经有余额，那么转账后的余额必须大于等于最小余额\r\n                require(toBalance >= MIN_BALANCE, \"Recipient balance too low\");\r\n            } else {\r\n                // 如果接收者是新用户，那么转账金额必须大于等于最小余额\r\n                require(value >= MIN_BALANCE, \"Transfer amount too low for new recipient\");\r\n            }\r\n        }\r\n        \r\n        super._update(from, to, value);\r\n    }\r\n\r\n    function nonces(address owner)\r\n        public\r\n        view\r\n        override(ERC20Permit, Nonces)\r\n        returns (uint256)\r\n    {\r\n        return super.nonces(owner);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2012],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2013,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2012,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2012],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[230]},"id":231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"136:102:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":230,"linearizedBaseContracts":[230],"name":"IVotes","nameLocation":"249:6:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"262:55:1","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":155,"name":"VotesExpiredSignature","nameLocation":"328:21:1","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"expiry","nameLocation":"358:6:1","nodeType":"VariableDeclaration","scope":155,"src":"350:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:1"},"src":"322:44:1"},{"anonymous":false,"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"372:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":164,"name":"DelegateChanged","nameLocation":"454:15:1","nodeType":"EventDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:1","nodeType":"VariableDeclaration","scope":164,"src":"470:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:1","nodeType":"VariableDeclaration","scope":164,"src":"497:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:1","nodeType":"VariableDeclaration","scope":164,"src":"527:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:1"},"src":"448:107:1"},{"anonymous":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"561:131:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":173,"name":"DelegateVotesChanged","nameLocation":"703:20:1","nodeType":"EventDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:1","nodeType":"VariableDeclaration","scope":173,"src":"724:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:1","nodeType":"VariableDeclaration","scope":173,"src":"750:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:1","nodeType":"VariableDeclaration","scope":173,"src":"773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:1"},"src":"697:94:1"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"797:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"account","nameLocation":"907:7:1","nodeType":"VariableDeclaration","scope":181,"src":"899:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:1"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"939:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:1"},"scope":230,"src":"881:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"954:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"account","nameLocation":"1219:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1211:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1228:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":191,"src":"1270:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:1"},"scope":230,"src":"1189:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"1285:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:1","nodeType":"VariableDeclaration","scope":199,"src":"1799:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:1"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"1841:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:1"},"scope":230,"src":"1771:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1856:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":207,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:1","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"account","nameLocation":"1959:7:1","nodeType":"VariableDeclaration","scope":207,"src":"1951:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:1"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":207,"src":"1991:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:1"},"scope":230,"src":"1932:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"2006:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":213,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:1","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2100:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:1"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2127:0:1"},"scope":230,"src":"2082:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2134:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:1","nodeType":"VariableDeclaration","scope":229,"src":"2229:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:1","nodeType":"VariableDeclaration","scope":229,"src":"2248:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:1","nodeType":"VariableDeclaration","scope":229,"src":"2263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"v","nameLocation":"2285:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2279:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":221,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"r","nameLocation":"2296:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2288:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"s","nameLocation":"2307:1:1","nodeType":"VariableDeclaration","scope":229,"src":"2299:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:1"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2318:0:1"},"scope":230,"src":"2206:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":231,"src":"239:2082:1","usedErrors":[155],"usedEvents":[164,173]}],"src":"110:2212:1"},"id":1},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[9535],"Context":[2012],"ECDSA":[4138],"EIP712":[4365],"IERC5805":[809],"Nonces":[2080],"SafeCast":[7810],"Time":[9809],"Votes":[773]},"id":774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":810,"src":"135:55:2","symbolAliases":[{"foreign":{"id":233,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":2013,"src":"191:48:2","symbolAliases":[{"foreign":{"id":235,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"199:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":2081,"src":"240:46:2","symbolAliases":[{"foreign":{"id":237,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"248:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":4366,"src":"287:59:2","symbolAliases":[{"foreign":{"id":239,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"295:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":9536,"src":"347:64:2","symbolAliases":[{"foreign":{"id":241,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"355:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":7811,"src":"412:55:2","symbolAliases":[{"foreign":{"id":243,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"420:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":4139,"src":"468:57:2","symbolAliases":[{"foreign":{"id":245,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"476:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":774,"sourceUnit":9810,"src":"526:48:2","symbolAliases":[{"foreign":{"id":247,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"534:4:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":250,"name":"Context","nameLocations":["1919:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2012,"src":"1919:7:2"},"id":251,"nodeType":"InheritanceSpecifier","src":"1919:7:2"},{"baseName":{"id":252,"name":"EIP712","nameLocations":["1928:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4365,"src":"1928:6:2"},"id":253,"nodeType":"InheritanceSpecifier","src":"1928:6:2"},{"baseName":{"id":254,"name":"Nonces","nameLocations":["1936:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"1936:6:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"1936:6:2"},{"baseName":{"id":256,"name":"IERC5805","nameLocations":["1944:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"1944:8:2"},"id":257,"nodeType":"InheritanceSpecifier","src":"1944:8:2"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"576:1315:2","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":773,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[773,809,230,824,2080,4365,798,2012],"name":"Votes","nameLocation":"1910:5:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":261,"libraryName":{"id":258,"name":"Checkpoints","nameLocations":["1965:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":9535,"src":"1965:11:2"},"nodeType":"UsingForDirective","src":"1959:43:2","typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"Checkpoints.Trace208","nameLocations":["1981:11:2","1993:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"1981:20:2"},"referencedDeclaration":8491,"src":"1981:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":266,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:2","nodeType":"VariableDeclaration","scope":773,"src":"2008:126:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":262,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":270,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:2","nodeType":"VariableDeclaration","scope":773,"src":"2141:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":269,"keyName":"account","keyNameLocation":"2157:7:2","keyType":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:2","nodeType":"VariableDeclaration","scope":773,"src":"2202:79:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":274,"keyName":"delegatee","keyNameLocation":"2218:9:2","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"Checkpoints.Trace208","nameLocations":["2231:11:2","2243:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"2231:20:2"},"referencedDeclaration":8491,"src":"2231:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":278,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:2","nodeType":"VariableDeclaration","scope":773,"src":"2288:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":277,"nodeType":"UserDefinedTypeName","pathNode":{"id":276,"name":"Checkpoints.Trace208","nameLocations":["2288:11:2","2300:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"2288:20:2"},"referencedDeclaration":8491,"src":"2288:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2341:59:2","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":281,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:2","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2435:2:2"},"src":"2405:33:2"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2444:64:2","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":288,"name":"ERC5805FutureLookup","nameLocation":"2519:19:2","nodeType":"ErrorDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:2","nodeType":"VariableDeclaration","scope":288,"src":"2539:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"clock","nameLocation":"2565:5:2","nodeType":"VariableDeclaration","scope":288,"src":"2558:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":285,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:2"},"src":"2513:59:2"},{"baseFunctions":[817],"body":{"id":298,"nodeType":"Block","src":"2843:42:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":294,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"2860:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9809_$","typeString":"type(library Time)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9570,"src":"2860:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":293,"id":297,"nodeType":"Return","src":"2853:25:2"}]},"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"2578:206:2","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:2","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"2803:2:2"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"2835:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":291,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:2"},"scope":773,"src":"2789:96:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[823],"body":{"id":318,"nodeType":"Block","src":"3106:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3169:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":307,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9809,"src":"3180:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$9809_$","typeString":"type(library Time)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:2","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":9570,"src":"3180:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"3165:93:2","trueBody":{"id":314,"nodeType":"Block","src":"3200:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3221:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"3214:33:2"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":304,"id":317,"nodeType":"Return","src":"3267:38:2"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"2891:91:2","text":" @dev Machine-readable description of the clock as specified in ERC-6372."},"functionSelector":"4bf5d7e9","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:2","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3059:2:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3091:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":302,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:2"},"scope":773,"src":"3040:272:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":346,"nodeType":"Block","src":"3493:195:2","statements":[{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"currentTimepoint","nameLocation":"3510:16:2","nodeType":"VariableDeclaration","scope":346,"src":"3503:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":327,"name":"uint48","nodeType":"ElementaryTypeName","src":"3503:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":329,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3529:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3529:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"3503:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3550:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":333,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3563:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3550:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":340,"nodeType":"IfStatement","src":"3546:90:2","trueBody":{"errorCall":{"arguments":[{"id":336,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3608:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":337,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3619:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":335,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3588:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3588:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":339,"nodeType":"RevertStatement","src":"3581:55:2"}},{"expression":{"arguments":[{"id":343,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3671:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":341,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"3653:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3662:8:2","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6800,"src":"3653:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":326,"id":345,"nodeType":"Return","src":"3646:35:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3318:92:2","text":" @dev Validate that a timepoint is in the past, and return it as a uint48."},"id":347,"implemented":true,"kind":"function","modifiers":[],"name":"_validateTimepoint","nameLocation":"3424:18:2","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"timepoint","nameLocation":"3451:9:2","nodeType":"VariableDeclaration","scope":347,"src":"3443:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3443:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3442:19:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"3485:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":324,"name":"uint48","nodeType":"ElementaryTypeName","src":"3485:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3484:8:2"},"scope":773,"src":"3415:273:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[181],"body":{"id":361,"nodeType":"Block","src":"3851:62:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":355,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3868:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":357,"indexExpression":{"id":356,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3889:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3868:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3898:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8716,"src":"3868:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":354,"id":360,"nodeType":"Return","src":"3861:45:2"}]},"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"3694:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":362,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3787:8:2","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"3804:7:2","nodeType":"VariableDeclaration","scope":362,"src":"3796:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"3796:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3795:17:2"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"3842:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:9:2"},"scope":773,"src":"3778:135:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[191],"body":{"id":381,"nodeType":"Block","src":"4394:102:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":377,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4478:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":376,"name":"_validateTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4459:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) view returns (uint48)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":372,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"4411:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":374,"indexExpression":{"id":373,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4432:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4411:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4441:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8686,"src":"4411:47:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":371,"id":380,"nodeType":"Return","src":"4404:85:2"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"3919:374:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"4307:12:2","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"account","nameLocation":"4328:7:2","nodeType":"VariableDeclaration","scope":382,"src":"4320:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"4320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"timepoint","nameLocation":"4345:9:2","nodeType":"VariableDeclaration","scope":382,"src":"4337:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4319:36:2"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"4385:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4384:9:2"},"scope":773,"src":"4298:198:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[199],"body":{"id":397,"nodeType":"Block","src":"5217:90:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":393,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"5289:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":392,"name":"_validateTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"5270:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) view returns (uint48)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":390,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5234:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5252:17:2","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":8686,"src":"5234:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5234:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":389,"id":396,"nodeType":"Return","src":"5227:73:2"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"4502:625:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":398,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"5141:18:2","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"timepoint","nameLocation":"5168:9:2","nodeType":"VariableDeclaration","scope":398,"src":"5160:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"5160:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5159:19:2"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":398,"src":"5208:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5208:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:9:2"},"scope":773,"src":"5132:175:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":408,"nodeType":"Block","src":"5451:50:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":404,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5468:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5486:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8716,"src":"5468:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":403,"id":407,"nodeType":"Return","src":"5461:33:2"}]},"documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"5313:66:2","text":" @dev Returns the current total supply of votes."},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5393:15:2","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"5408:2:2"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"5442:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5442:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5441:9:2"},"scope":773,"src":"5384:117:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[207],"body":{"id":421,"nodeType":"Block","src":"5657:43:2","statements":[{"expression":{"baseExpression":{"id":417,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"5674:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":419,"indexExpression":{"id":418,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"5685:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5674:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":416,"id":420,"nodeType":"Return","src":"5667:26:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"5507:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5592:9:2","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"account","nameLocation":"5610:7:2","nodeType":"VariableDeclaration","scope":422,"src":"5602:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"5602:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5601:17:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"5648:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"5648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5647:9:2"},"scope":773,"src":"5583:117:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[213],"body":{"id":438,"nodeType":"Block","src":"5834:86:2","statements":[{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"account","nameLocation":"5852:7:2","nodeType":"VariableDeclaration","scope":438,"src":"5844:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"5844:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":432,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"5862:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5844:30:2"},{"expression":{"arguments":[{"id":434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5903:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":433,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"5884:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5884:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"5884:29:2"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"5706:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":439,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5791:8:2","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"delegatee","nameLocation":"5808:9:2","nodeType":"VariableDeclaration","scope":439,"src":"5800:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5799:19:2"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"5834:0:2"},"scope":773,"src":"5782:138:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[229],"body":{"id":495,"nodeType":"Block","src":"6171:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":455,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6185:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"6185:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":457,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6203:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6185:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"IfStatement","src":"6181:91:2","trueBody":{"id":463,"nodeType":"Block","src":"6211:61:2","statements":[{"errorCall":{"arguments":[{"id":460,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6254:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"6232:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"RevertStatement","src":"6225:36:2"}]}},{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"signer","nameLocation":"6289:6:2","nodeType":"VariableDeclaration","scope":495,"src":"6281:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":484,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":473,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6363:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":474,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6384:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6395:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":476,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6402:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":471,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6352:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6356:6:2","memberName":"encode","nodeType":"MemberAccess","src":"6352:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6352:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":470,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6342:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":469,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"6325:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:86:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":480,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6425:1:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":481,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"6440:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":482,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6455:1:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":467,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"6298:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4138_$","typeString":"type(library ECDSA)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:2","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"6298:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:168:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6281:185:2"},{"expression":{"arguments":[{"id":486,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6493:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"6501:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":485,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"6476:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"6476:31:2"},{"expression":{"arguments":[{"id":491,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6527:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6535:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":490,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6517:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6517:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"6517:28:2"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"5926:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6007:13:2","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"delegatee","nameLocation":"6038:9:2","nodeType":"VariableDeclaration","scope":496,"src":"6030:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"6030:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"nonce","nameLocation":"6065:5:2","nodeType":"VariableDeclaration","scope":496,"src":"6057:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6057:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"expiry","nameLocation":"6088:6:2","nodeType":"VariableDeclaration","scope":496,"src":"6080:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"v","nameLocation":"6110:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6104:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"6104:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"r","nameLocation":"6129:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6121:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6121:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"s","nameLocation":"6148:1:2","nodeType":"VariableDeclaration","scope":496,"src":"6140:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6140:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6020:135:2"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"6171:0:2"},"scope":773,"src":"5998:554:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":530,"nodeType":"Block","src":"6802:240:2","statements":[{"assignments":[505],"declarations":[{"constant":false,"id":505,"mutability":"mutable","name":"oldDelegate","nameLocation":"6820:11:2","nodeType":"VariableDeclaration","scope":530,"src":"6812:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"6812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":509,"initialValue":{"arguments":[{"id":507,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6844:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":506,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6812:40:2"},{"expression":{"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":510,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6862:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":512,"indexExpression":{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6873:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6862:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":513,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6884:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6862:31:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":515,"nodeType":"ExpressionStatement","src":"6862:31:2"},{"eventCall":{"arguments":[{"id":517,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"6925:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6934:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6947:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":516,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6909:15:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6909:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"EmitStatement","src":"6904:53:2"},{"expression":{"arguments":[{"id":523,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"6986:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6999:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"7026:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":525,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"7010:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7010:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6967:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":529,"nodeType":"ExpressionStatement","src":"6967:68:2"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"6558:167:2","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":531,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6739:9:2","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"account","nameLocation":"6757:7:2","nodeType":"VariableDeclaration","scope":531,"src":"6749:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"6749:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"delegatee","nameLocation":"6774:9:2","nodeType":"VariableDeclaration","scope":531,"src":"6766:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"6766:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6748:36:2"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"6802:0:2"},"scope":773,"src":"6730:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7365:310:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":541,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7379:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7387:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"7387:7:2","typeDescriptions":{}}},"id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7387:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7379:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":557,"nodeType":"IfStatement","src":"7375:107:2","trueBody":{"id":556,"nodeType":"Block","src":"7399:83:2","statements":[{"expression":{"arguments":[{"id":548,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7419:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":549,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7438:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7463:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"7444:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7453:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6240,"src":"7444:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":547,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7413:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8491_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7413:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":555,"nodeType":"ExpressionStatement","src":"7413:58:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7495:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7501:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:2","typeDescriptions":{}}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7501:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7495:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":574,"nodeType":"IfStatement","src":"7491:110:2","trueBody":{"id":573,"nodeType":"Block","src":"7513:88:2","statements":[{"expression":{"arguments":[{"id":565,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7533:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":566,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7552:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":569,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7582:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":567,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"7563:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7572:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6240,"src":"7563:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7563:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":564,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7527:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8491_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7527:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":572,"nodeType":"ExpressionStatement","src":"7527:63:2"}]}},{"expression":{"arguments":[{"arguments":[{"id":577,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7639:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":576,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7629:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7656:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":579,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7646:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7646:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7661:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":575,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"7610:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7610:58:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"7610:58:2"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"7048:223:2","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7285:20:2","nodeType":"FunctionDefinition","parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"from","nameLocation":"7314:4:2","nodeType":"VariableDeclaration","scope":586,"src":"7306:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"7306:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"to","nameLocation":"7328:2:2","nodeType":"VariableDeclaration","scope":586,"src":"7320:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"7320:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"amount","nameLocation":"7340:6:2","nodeType":"VariableDeclaration","scope":586,"src":"7332:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7305:42:2"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"7365:0:2"},"scope":773,"src":"7276:399:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"7848:702:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":596,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7862:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7870:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7862:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"7876:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7885:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7862:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":662,"nodeType":"IfStatement","src":"7858:686:2","trueBody":{"id":661,"nodeType":"Block","src":"7888:656:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7906:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"7914:7:2","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7906:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"IfStatement","src":"7902:315:2","trueBody":{"id":630,"nodeType":"Block","src":"7926:291:2","statements":[{"assignments":[610,612],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"oldValue","nameLocation":"7953:8:2","nodeType":"VariableDeclaration","scope":630,"src":"7945:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"7945:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"newValue","nameLocation":"7971:8:2","nodeType":"VariableDeclaration","scope":630,"src":"7963:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"7963:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":623,"initialValue":{"arguments":[{"baseExpression":{"id":614,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8010:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":616,"indexExpression":{"id":615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8031:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8010:26:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":617,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8058:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8108:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":618,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"8089:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8098:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6240,"src":"8089:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8089:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":613,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7983:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8491_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:150:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7944:189:2"},{"eventCall":{"arguments":[{"id":625,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"8177:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":626,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8183:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8193:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8156:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8156:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"EmitStatement","src":"8151:51:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8234:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"8240:7:2","typeDescriptions":{}}},"id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8234:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"8230:304:2","trueBody":{"id":659,"nodeType":"Block","src":"8252:282:2","statements":[{"assignments":[639,641],"declarations":[{"constant":false,"id":639,"mutability":"mutable","name":"oldValue","nameLocation":"8279:8:2","nodeType":"VariableDeclaration","scope":659,"src":"8271:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"8271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"newValue","nameLocation":"8297:8:2","nodeType":"VariableDeclaration","scope":659,"src":"8289:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"8289:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":652,"initialValue":{"arguments":[{"baseExpression":{"id":643,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8336:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":645,"indexExpression":{"id":644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8357:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8336:24:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":646,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8382:4:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":649,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"8427:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":647,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"8408:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8417:9:2","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":6240,"src":"8408:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8408:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":642,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"8309:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8491_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8309:143:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8270:182:2"},{"eventCall":{"arguments":[{"id":654,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8496:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":655,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8500:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":656,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"8510:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"8475:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8475:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"EmitStatement","src":"8470:49:2"}]}}]}}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"7681:75:2","text":" @dev Moves delegated votes from one delegate to another."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7770:18:2","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"from","nameLocation":"7797:4:2","nodeType":"VariableDeclaration","scope":664,"src":"7789:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"7789:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"to","nameLocation":"7811:2:2","nodeType":"VariableDeclaration","scope":664,"src":"7803:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"amount","nameLocation":"7823:6:2","nodeType":"VariableDeclaration","scope":664,"src":"7815:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7788:42:2"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"7848:0:2"},"scope":773,"src":"7761:789:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"8706:81:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":674,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"8741:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":676,"indexExpression":{"id":675,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"8762:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8741:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8771:6:2","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":8779,"src":"8741:36:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8741:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"8723:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8732:8:2","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":6856,"src":"8723:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8723:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":671,"id":680,"nodeType":"Return","src":"8716:64:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"8556:64:2","text":" @dev Get number of checkpoints for `account`."},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8634:15:2","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"account","nameLocation":"8658:7:2","nodeType":"VariableDeclaration","scope":682,"src":"8650:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8650:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:17:2"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"8698:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":669,"name":"uint32","nodeType":"ElementaryTypeName","src":"8698:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8697:8:2"},"scope":773,"src":"8625:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":700,"nodeType":"Block","src":"9002:61:2","statements":[{"expression":{"arguments":[{"id":697,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9052:3:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":693,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"9019:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$8491_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":695,"indexExpression":{"id":694,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"9040:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9019:29:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9049:2:2","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":8797,"src":"9019:32:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8496_memory_ptr_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9019:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":692,"id":699,"nodeType":"Return","src":"9012:44:2"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"8793:66:2","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":701,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8873:12:2","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"account","nameLocation":"8903:7:2","nodeType":"VariableDeclaration","scope":701,"src":"8895:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"8895:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"pos","nameLocation":"8927:3:2","nodeType":"VariableDeclaration","scope":701,"src":"8920:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":686,"name":"uint32","nodeType":"ElementaryTypeName","src":"8920:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8885:51:2"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"8968:32:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"Checkpoints.Checkpoint208","nameLocations":["8968:11:2","8980:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"8968:25:2"},"referencedDeclaration":8496,"src":"8968:25:2","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8967:34:2"},"scope":773,"src":"8864:199:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"9272:70:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":725,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"9300:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":728,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9312:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9318:6:2","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":8716,"src":"9312:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$8491_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9312:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":731,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"9328:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":727,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9309:2:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":723,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"9289:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9295:4:2","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":8519,"src":"9289:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$8491_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$8491_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9289:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":722,"id":734,"nodeType":"Return","src":"9282:53:2"}]},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9078:5:2","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"store","nameLocation":"9122:5:2","nodeType":"VariableDeclaration","scope":736,"src":"9093:34:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":703,"nodeType":"UserDefinedTypeName","pathNode":{"id":702,"name":"Checkpoints.Trace208","nameLocations":["9093:11:2","9105:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"9093:20:2"},"referencedDeclaration":8491,"src":"9093:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"op","nameLocation":"9187:2:2","nodeType":"VariableDeclaration","scope":736,"src":"9137:52:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":713,"nodeType":"FunctionTypeName","parameterTypes":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9146:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":705,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9155:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":707,"name":"uint208","nodeType":"ElementaryTypeName","src":"9155:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9145:18:2"},"returnParameterTypes":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"9178:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":710,"name":"uint208","nodeType":"ElementaryTypeName","src":"9178:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9177:9:2"},"src":"9137:52:2","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"delta","nameLocation":"9207:5:2","nodeType":"VariableDeclaration","scope":736,"src":"9199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":715,"name":"uint208","nodeType":"ElementaryTypeName","src":"9199:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9083:135:2"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"oldValue","nameLocation":"9244:8:2","nodeType":"VariableDeclaration","scope":736,"src":"9236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":718,"name":"uint208","nodeType":"ElementaryTypeName","src":"9236:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"newValue","nameLocation":"9262:8:2","nodeType":"VariableDeclaration","scope":736,"src":"9254:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":720,"name":"uint208","nodeType":"ElementaryTypeName","src":"9254:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9235:36:2"},"scope":773,"src":"9069:273:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":749,"nodeType":"Block","src":"9415:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"9432:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":746,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"9436:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9432:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":744,"id":748,"nodeType":"Return","src":"9425:12:2"}]},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9357:4:2","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"a","nameLocation":"9370:1:2","nodeType":"VariableDeclaration","scope":750,"src":"9362:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":737,"name":"uint208","nodeType":"ElementaryTypeName","src":"9362:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"b","nameLocation":"9381:1:2","nodeType":"VariableDeclaration","scope":750,"src":"9373:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":739,"name":"uint208","nodeType":"ElementaryTypeName","src":"9373:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9361:22:2"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"9406:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":742,"name":"uint208","nodeType":"ElementaryTypeName","src":"9406:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9405:9:2"},"scope":773,"src":"9348:96:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":763,"nodeType":"Block","src":"9522:29:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9539:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"9543:1:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9539:5:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":758,"id":762,"nodeType":"Return","src":"9532:12:2"}]},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9459:9:2","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"a","nameLocation":"9477:1:2","nodeType":"VariableDeclaration","scope":764,"src":"9469:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":751,"name":"uint208","nodeType":"ElementaryTypeName","src":"9469:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"b","nameLocation":"9488:1:2","nodeType":"VariableDeclaration","scope":764,"src":"9480:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":753,"name":"uint208","nodeType":"ElementaryTypeName","src":"9480:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9468:22:2"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"9513:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":756,"name":"uint208","nodeType":"ElementaryTypeName","src":"9513:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9512:9:2"},"scope":773,"src":"9450:101:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"9557:72:2","text":" @dev Must return the voting units held by an account."},"id":772,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9643:15:2","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"9659:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"9659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9658:9:2"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"9699:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"9699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9698:9:2"},"scope":773,"src":"9634:74:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":774,"src":"1892:7818:2","usedErrors":[155,281,288,2022,2263,2265,3801,3806,3811,6055,7962],"usedEvents":[164,173,778]}],"src":"109:9602:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[798]},"id":799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":775,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":798,"linearizedBaseContracts":[798],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":778,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":797,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":797,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":781,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":797,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":783,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":797,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":797,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":797,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":797,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":797,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":798,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":799,"src":"133:605:3","usedErrors":[],"usedEvents":[778]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[809],"IERC6372":[824],"IVotes":[230]},"id":810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":800,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":802,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":810,"sourceUnit":231,"src":"133:54:4","symbolAliases":[{"foreign":{"id":801,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"141:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":810,"sourceUnit":825,"src":"188:40:4","symbolAliases":[{"foreign":{"id":803,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"196:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":805,"name":"IERC6372","nameLocations":["252:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":824,"src":"252:8:4"},"id":806,"nodeType":"InheritanceSpecifier","src":"252:8:4"},{"baseName":{"id":807,"name":"IVotes","nameLocations":["262:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":230,"src":"262:6:4"},"id":808,"nodeType":"InheritanceSpecifier","src":"262:6:4"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":809,"linearizedBaseContracts":[809,230,824],"name":"IERC5805","nameLocation":"240:8:4","nodeType":"ContractDefinition","nodes":[],"scope":810,"src":"230:41:4","usedErrors":[155],"usedEvents":[164,173]}],"src":"107:165:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[824]},"id":825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":824,"linearizedBaseContracts":[824],"name":"IERC6372","nameLocation":"143:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"158:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":817,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:5","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[],"src":"310:2:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":817,"src":"336:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":814,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:5"},"scope":824,"src":"296:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"350:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":823,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:5","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"475:2:5"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"501:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":820,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:5"},"scope":824,"src":"456:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":825,"src":"133:385:5","usedErrors":[],"usedEvents":[]}],"src":"107:412:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[961],"IERC20Errors":[866],"IERC721Errors":[914]},"id":962,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":866,"linearizedBaseContracts":[866],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":836,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":836,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":836,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":836,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":841,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":841,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":846,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":846,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":847,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":855,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":855,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":855,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":855,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":860,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":860,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":865,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":865,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":962,"src":"280:1764:6","usedErrors":[836,841,846,855,860,865],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":872,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":872,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":877,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":877,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":886,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":886,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":886,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":886,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":891,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":891,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":896,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":896,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":903,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":903,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":903,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":908,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":908,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":913,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":913,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":962,"src":"2190:2092:6","usedErrors":[872,877,886,891,896,903,908,913],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":961,"linearizedBaseContracts":[961],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":926,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":926,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":926,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":926,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":926,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":931,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":931,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":936,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":936,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":943,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":943,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":943,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":948,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":948,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":953,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":953,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":960,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":960,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":960,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":962,"src":"4430:2107:6","usedErrors":[926,931,936,943,948,953,960],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2012],"ERC20":[1476],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1946]},"id":1477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":963,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1555,"src":"131:36:7","symbolAliases":[{"foreign":{"id":964,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"139:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":1947,"src":"168:63:7","symbolAliases":[{"foreign":{"id":966,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"176:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":2013,"src":"232:48:7","symbolAliases":[{"foreign":{"id":968,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"240:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1477,"sourceUnit":962,"src":"281:65:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"289:12:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":973,"name":"Context","nameLocations":["1133:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2012,"src":"1133:7:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"1133:7:7"},{"baseName":{"id":975,"name":"IERC20","nameLocations":["1142:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1554,"src":"1142:6:7"},"id":976,"nodeType":"InheritanceSpecifier","src":"1142:6:7"},{"baseName":{"id":977,"name":"IERC20Metadata","nameLocations":["1150:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1946,"src":"1150:14:7"},"id":978,"nodeType":"InheritanceSpecifier","src":"1150:14:7"},{"baseName":{"id":979,"name":"IERC20Errors","nameLocations":["1166:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":866,"src":"1166:12:7"},"id":980,"nodeType":"InheritanceSpecifier","src":"1166:12:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"348:757:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1476,"linearizedBaseContracts":[1476,866,1946,1554,2012],"name":"ERC20","nameLocation":"1124:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":984,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:7","nodeType":"VariableDeclaration","scope":1476,"src":"1185:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":983,"keyName":"account","keyNameLocation":"1201:7:7","keyType":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":990,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:7","nodeType":"VariableDeclaration","scope":1476,"src":"1245:83:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":989,"keyName":"account","keyNameLocation":"1261:7:7","keyType":{"id":985,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":988,"keyName":"spender","keyNameLocation":"1288:7:7","keyType":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":992,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:7","nodeType":"VariableDeclaration","scope":1476,"src":"1335:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":994,"mutability":"mutable","name":"_name","nameLocation":"1385:5:7","nodeType":"VariableDeclaration","scope":1476,"src":"1370:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":993,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":996,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:7","nodeType":"VariableDeclaration","scope":1476,"src":"1396:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":995,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1012,"nodeType":"Block","src":"1657:57:7","statements":[{"expression":{"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1004,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1005,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"1675:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1007,"nodeType":"ExpressionStatement","src":"1667:13:7"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1008,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"1690:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1009,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"1700:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1011,"nodeType":"ExpressionStatement","src":"1690:17:7"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"1425:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1013,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"name_","nameLocation":"1627:5:7","nodeType":"VariableDeclaration","scope":1013,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":998,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:7","nodeType":"VariableDeclaration","scope":1013,"src":"1634:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1000,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:7"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"1657:0:7"},"scope":1476,"src":"1601:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1933],"body":{"id":1021,"nodeType":"Block","src":"1839:29:7","statements":[{"expression":{"id":1019,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"1856:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1018,"id":1020,"nodeType":"Return","src":"1849:12:7"}]},"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"1720:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:7","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"1792:2:7"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1022,"src":"1824:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1016,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:7"},"scope":1476,"src":"1779:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1939],"body":{"id":1030,"nodeType":"Block","src":"2043:31:7","statements":[{"expression":{"id":1028,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2060:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1027,"id":1029,"nodeType":"Return","src":"2053:14:7"}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"1874:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:7","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1996:2:7"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"2028:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1025,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:7"},"scope":1476,"src":"1981:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1945],"body":{"id":1039,"nodeType":"Block","src":"2763:26:7","statements":[{"expression":{"hexValue":"3138","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1036,"id":1038,"nodeType":"Return","src":"2773:9:7"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"2080:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:7","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"2724:2:7"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1040,"src":"2756:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1034,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:7"},"scope":1476,"src":"2707:82:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1503],"body":{"id":1048,"nodeType":"Block","src":"2910:36:7","statements":[{"expression":{"id":1046,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2927:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1045,"id":1047,"nodeType":"Return","src":"2920:19:7"}]},"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"2795:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:7","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"2869:2:7"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"2901:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:7"},"scope":1476,"src":"2849:97:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1511],"body":{"id":1061,"nodeType":"Block","src":"3078:42:7","statements":[{"expression":{"baseExpression":{"id":1057,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3095:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1059,"indexExpression":{"id":1058,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"3105:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1056,"id":1060,"nodeType":"Return","src":"3088:25:7"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"2952:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1062,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:7","nodeType":"FunctionDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"account","nameLocation":"3031:7:7","nodeType":"VariableDeclaration","scope":1062,"src":"3023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:7"},"returnParameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1062,"src":"3069:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:7"},"scope":1476,"src":"3004:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1521],"body":{"id":1085,"nodeType":"Block","src":"3390:103:7","statements":[{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"owner","nameLocation":"3408:5:7","nodeType":"VariableDeclaration","scope":1085,"src":"3400:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"3416:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:7"},{"expression":{"arguments":[{"id":1078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"3448:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3455:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"3459:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1077,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3438:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"3438:27:7"},{"expression":{"hexValue":"74727565","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1071,"id":1084,"nodeType":"Return","src":"3475:11:7"}]},"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"3126:184:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:7","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"3341:2:7","nodeType":"VariableDeclaration","scope":1086,"src":"3333:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"value","nameLocation":"3353:5:7","nodeType":"VariableDeclaration","scope":1086,"src":"3345:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:7"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"3384:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1069,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:7"},"scope":1476,"src":"3315:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1531],"body":{"id":1102,"nodeType":"Block","src":"3640:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1096,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"3657:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1098,"indexExpression":{"id":1097,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3669:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1100,"indexExpression":{"id":1099,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3676:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1095,"id":1101,"nodeType":"Return","src":"3650:34:7"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"3499:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:7","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"owner","nameLocation":"3578:5:7","nodeType":"VariableDeclaration","scope":1103,"src":"3570:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"spender","nameLocation":"3593:7:7","nodeType":"VariableDeclaration","scope":1103,"src":"3585:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:7"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"3631:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:7"},"scope":1476,"src":"3551:140:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1541],"body":{"id":1126,"nodeType":"Block","src":"4077:107:7","statements":[{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"owner","nameLocation":"4095:5:7","nodeType":"VariableDeclaration","scope":1126,"src":"4087:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1117,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"4103:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:7"},{"expression":{"arguments":[{"id":1119,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"4134:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4141:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"4150:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1367,"src":"4125:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"4125:31:7"},{"expression":{"hexValue":"74727565","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1112,"id":1125,"nodeType":"Return","src":"4166:11:7"}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3697:296:7","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:7","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"spender","nameLocation":"4023:7:7","nodeType":"VariableDeclaration","scope":1127,"src":"4015:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"value","nameLocation":"4040:5:7","nodeType":"VariableDeclaration","scope":1127,"src":"4032:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:7"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1127,"src":"4071:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:7"},"scope":1476,"src":"3998:186:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1553],"body":{"id":1158,"nodeType":"Block","src":"4869:151:7","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"spender","nameLocation":"4887:7:7","nodeType":"VariableDeclaration","scope":1158,"src":"4879:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1143,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1141,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"4897:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:7"},{"expression":{"arguments":[{"id":1145,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4935:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"4941:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4950:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1144,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"4919:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"4919:37:7"},{"expression":{"arguments":[{"id":1151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"4976:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"4982:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4986:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1150,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"4966:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"4966:26:7"},{"expression":{"hexValue":"74727565","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1138,"id":1157,"nodeType":"Return","src":"5002:11:7"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"4190:581:7","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1159,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:7","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"from","nameLocation":"4806:4:7","nodeType":"VariableDeclaration","scope":1159,"src":"4798:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"to","nameLocation":"4820:2:7","nodeType":"VariableDeclaration","scope":1159,"src":"4812:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"value","nameLocation":"4832:5:7","nodeType":"VariableDeclaration","scope":1159,"src":"4824:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:7"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"4863:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:7"},"scope":1476,"src":"4776:244:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1205,"nodeType":"Block","src":"5462:231:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"5476:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:7","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"5472:86:7","trueBody":{"id":1182,"nodeType":"Block","src":"5496:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:7","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5517:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"5510:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5571:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:7","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"5567:86:7","trueBody":{"id":1197,"nodeType":"Block","src":"5589:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:7","typeDescriptions":{}}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"5610:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"RevertStatement","src":"5603:39:7"}]}},{"expression":{"arguments":[{"id":1200,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"5670:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1201,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"5676:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5680:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1199,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5662:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"5662:24:7"}]},"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"5026:362:7","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:7","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"from","nameLocation":"5420:4:7","nodeType":"VariableDeclaration","scope":1206,"src":"5412:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"to","nameLocation":"5434:2:7","nodeType":"VariableDeclaration","scope":1206,"src":"5426:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"value","nameLocation":"5446:5:7","nodeType":"VariableDeclaration","scope":1206,"src":"5438:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:7"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"5462:0:7"},"scope":1476,"src":"5393:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1282,"nodeType":"Block","src":"6083:1032:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6097:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:7","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1253,"nodeType":"Block","src":"6271:362:7","statements":[{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:7","nodeType":"VariableDeclaration","scope":1253,"src":"6285:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"baseExpression":{"id":1229,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6307:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1231,"indexExpression":{"id":1230,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6317:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6340:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6354:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1243,"nodeType":"IfStatement","src":"6336:115:7","trueBody":{"id":1242,"nodeType":"Block","src":"6361:90:7","statements":[{"errorCall":{"arguments":[{"id":1237,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6411:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1238,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6417:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6430:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6386:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"RevertStatement","src":"6379:57:7"}]}},{"id":1252,"nodeType":"UncheckedBlock","src":"6464:159:7","statements":[{"expression":{"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6571:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1246,"indexExpression":{"id":1245,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"6581:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1247,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"6589:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6603:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1251,"nodeType":"ExpressionStatement","src":"6571:37:7"}]}]},"id":1254,"nodeType":"IfStatement","src":"6093:540:7","trueBody":{"id":1226,"nodeType":"Block","src":"6117:148:7","statements":[{"expression":{"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6233:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6249:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1225,"nodeType":"ExpressionStatement","src":"6233:21:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1255,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"6647:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:7","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1274,"nodeType":"Block","src":"6862:206:7","statements":[{"id":1273,"nodeType":"UncheckedBlock","src":"6876:182:7","statements":[{"expression":{"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1267,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7021:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1269,"indexExpression":{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7031:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7038:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ExpressionStatement","src":"7021:22:7"}]}]},"id":1275,"nodeType":"IfStatement","src":"6643:425:7","trueBody":{"id":1266,"nodeType":"Block","src":"6665:191:7","statements":[{"id":1265,"nodeType":"UncheckedBlock","src":"6679:167:7","statements":[{"expression":{"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1261,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"6810:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ExpressionStatement","src":"6810:21:7"}]}]}},{"eventCall":{"arguments":[{"id":1277,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"7092:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7102:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1276,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"7083:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1281,"nodeType":"EmitStatement","src":"7078:30:7"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"5699:304:7","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1283,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:7","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"6033:4:7","nodeType":"VariableDeclaration","scope":1283,"src":"6025:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"6047:2:7","nodeType":"VariableDeclaration","scope":1283,"src":"6039:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"value","nameLocation":"6059:5:7","nodeType":"VariableDeclaration","scope":1283,"src":"6051:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:7"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"6083:0:7"},"scope":1476,"src":"6008:1107:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"7514:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7528:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:7","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"nodeType":"IfStatement","src":"7524:91:7","trueBody":{"id":1304,"nodeType":"Block","src":"7551:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:7","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7572:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"RevertStatement","src":"7565:39:7"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:7","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7644:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"7653:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"7624:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"7624:35:7"}]},"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"7121:332:7","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:7","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"7481:7:7","nodeType":"VariableDeclaration","scope":1316,"src":"7473:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"7498:5:7","nodeType":"VariableDeclaration","scope":1316,"src":"7490:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:7"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"7514:0:7"},"scope":1476,"src":"7458:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1348,"nodeType":"Block","src":"8040:150:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8054:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:7","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1338,"nodeType":"IfStatement","src":"8050:89:7","trueBody":{"id":1337,"nodeType":"Block","src":"8077:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:7","typeDescriptions":{}}},"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1330,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8098:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"RevertStatement","src":"8091:37:7"}]}},{"expression":{"arguments":[{"id":1340,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8156:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:7","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"8177:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1339,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"8148:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"8148:35:7"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"7672:307:7","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1349,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:7","nodeType":"FunctionDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"account","nameLocation":"8007:7:7","nodeType":"VariableDeclaration","scope":1349,"src":"7999:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"value","nameLocation":"8024:5:7","nodeType":"VariableDeclaration","scope":1349,"src":"8016:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:7"},"returnParameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"8040:0:7"},"scope":1476,"src":"7984:206:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"8800:54:7","statements":[{"expression":{"arguments":[{"id":1360,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"8819:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1361,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8826:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"8835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1359,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1427,"src":"8810:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"8810:37:7"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"8196:525:7","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:7","nodeType":"FunctionDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"owner","nameLocation":"8752:5:7","nodeType":"VariableDeclaration","scope":1367,"src":"8744:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"spender","nameLocation":"8767:7:7","nodeType":"VariableDeclaration","scope":1367,"src":"8759:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"value","nameLocation":"8784:5:7","nodeType":"VariableDeclaration","scope":1367,"src":"8776:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:7"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"8800:0:7"},"scope":1476,"src":"8726:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1426,"nodeType":"Block","src":"9799:334:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"9813:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:7","typeDescriptions":{}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1393,"nodeType":"IfStatement","src":"9809:89:7","trueBody":{"id":1392,"nodeType":"Block","src":"9834:64:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:7","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1385,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"9855:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"RevertStatement","src":"9848:39:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9911:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:7","typeDescriptions":{}}},"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1408,"nodeType":"IfStatement","src":"9907:90:7","trueBody":{"id":1407,"nodeType":"Block","src":"9934:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:7","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9955:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"RevertStatement","src":"9948:38:7"}]}},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1409,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10006:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1412,"indexExpression":{"id":1410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"10018:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1413,"indexExpression":{"id":1411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10025:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"10006:35:7"},{"condition":{"id":1417,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10055:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"10051:76:7","trueBody":{"id":1424,"nodeType":"Block","src":"10066:61:7","statements":[{"eventCall":{"arguments":[{"id":1419,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"10094:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10101:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"10110:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"10085:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"EmitStatement","src":"10080:36:7"}]}}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"8860:836:7","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:7","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"owner","nameLocation":"9727:5:7","nodeType":"VariableDeclaration","scope":1427,"src":"9719:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"spender","nameLocation":"9742:7:7","nodeType":"VariableDeclaration","scope":1427,"src":"9734:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"value","nameLocation":"9759:5:7","nodeType":"VariableDeclaration","scope":1427,"src":"9751:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:7","nodeType":"VariableDeclaration","scope":1427,"src":"9766:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1375,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:7"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"9799:0:7"},"scope":1476,"src":"9701:432:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1474,"nodeType":"Block","src":"10504:387:7","statements":[{"assignments":[1438],"declarations":[{"constant":false,"id":1438,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:7","nodeType":"VariableDeclaration","scope":1474,"src":"10514:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[{"id":1440,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"10551:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10558:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1439,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"10541:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10580:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:7","memberName":"max","nodeType":"MemberAccess","src":"10599:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1473,"nodeType":"IfStatement","src":"10576:309:7","trueBody":{"id":1472,"nodeType":"Block","src":"10618:267:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10636:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10655:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"IfStatement","src":"10632:130:7","trueBody":{"id":1460,"nodeType":"Block","src":"10662:100:7","statements":[{"errorCall":{"arguments":[{"id":1455,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10714:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10723:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10741:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"10687:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"RevertStatement","src":"10680:67:7"}]}},{"id":1471,"nodeType":"UncheckedBlock","src":"10775:100:7","statements":[{"expression":{"arguments":[{"id":1463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"10812:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1464,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"10819:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"10828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"10847:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1462,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1427,"src":"10803:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"10803:57:7"}]}]}}]},"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"10139:271:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1475,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:7","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"owner","nameLocation":"10448:5:7","nodeType":"VariableDeclaration","scope":1475,"src":"10440:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"spender","nameLocation":"10463:7:7","nodeType":"VariableDeclaration","scope":1475,"src":"10455:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"value","nameLocation":"10480:5:7","nodeType":"VariableDeclaration","scope":1475,"src":"10472:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:7"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"10504:0:7"},"scope":1476,"src":"10415:476:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1477,"src":"1106:9787:7","usedErrors":[836,841,846,855,860,865],"usedEvents":[1488,1497]}],"src":"105:10789:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1554]},"id":1555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1478,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"132:71:8","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1554,"linearizedBaseContracts":[1554],"name":"IERC20","nameLocation":"214:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"227:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1488,"name":"Transfer","nameLocation":"396:8:8","nodeType":"EventDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:8","nodeType":"VariableDeclaration","scope":1488,"src":"405:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1484,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:8","nodeType":"VariableDeclaration","scope":1488,"src":"427:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:8","nodeType":"VariableDeclaration","scope":1488,"src":"447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:8"},"src":"390:72:8"},{"anonymous":false,"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"468:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1497,"name":"Approval","nameLocation":"627:8:8","nodeType":"EventDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:8","nodeType":"VariableDeclaration","scope":1497,"src":"636:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:8","nodeType":"VariableDeclaration","scope":1497,"src":"659:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:8","nodeType":"VariableDeclaration","scope":1497,"src":"684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:8"},"src":"621:78:8"},{"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"705:65:8","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1503,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:8","nodeType":"FunctionDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"795:2:8"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"821:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:8"},"scope":1554,"src":"775:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"836:71:8","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1511,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1554,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"986:213:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1521,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:8","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"to","nameLocation":"1230:2:8","nodeType":"VariableDeclaration","scope":1521,"src":"1222:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"value","nameLocation":"1242:5:8","nodeType":"VariableDeclaration","scope":1521,"src":"1234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:8"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"1267:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1518,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:8"},"scope":1554,"src":"1204:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1279:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:8","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"owner","nameLocation":"1575:5:8","nodeType":"VariableDeclaration","scope":1531,"src":"1567:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"spender","nameLocation":"1590:7:8","nodeType":"VariableDeclaration","scope":1531,"src":"1582:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:8"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"1622:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:8"},"scope":1554,"src":"1548:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"1637:667:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1541,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:8","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"spender","nameLocation":"2334:7:8","nodeType":"VariableDeclaration","scope":1541,"src":"2326:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"value","nameLocation":"2351:5:8","nodeType":"VariableDeclaration","scope":1541,"src":"2343:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:8"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"2376:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1538,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:8"},"scope":1554,"src":"2309:73:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"2388:297:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1553,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:8","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"from","nameLocation":"2720:4:8","nodeType":"VariableDeclaration","scope":1553,"src":"2712:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"to","nameLocation":"2734:2:8","nodeType":"VariableDeclaration","scope":1553,"src":"2726:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"value","nameLocation":"2746:5:8","nodeType":"VariableDeclaration","scope":1553,"src":"2738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:8"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"2771:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:8"},"scope":1554,"src":"2690:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1555,"src":"204:2575:8","usedErrors":[],"usedEvents":[1488,1497]}],"src":"106:2674:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[2012],"ERC20":[1476],"ERC20Burnable":[1600]},"id":1601,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1556,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":1477,"src":"150:35:9","symbolAliases":[{"foreign":{"id":1557,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"158:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1560,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":2013,"src":"186:51:9","symbolAliases":[{"foreign":{"id":1559,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"194:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1562,"name":"Context","nameLocations":["483:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2012,"src":"483:7:9"},"id":1563,"nodeType":"InheritanceSpecifier","src":"483:7:9"},{"baseName":{"id":1564,"name":"ERC20","nameLocations":["492:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"492:5:9"},"id":1565,"nodeType":"InheritanceSpecifier","src":"492:5:9"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"239:208:9","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1600,"linearizedBaseContracts":[1600,1476,866,1946,1554,2012],"name":"ERC20Burnable","nameLocation":"466:13:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1577,"nodeType":"Block","src":"662:43:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1572,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"678:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"692:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1571,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1576,"nodeType":"ExpressionStatement","src":"672:26:9"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"504:109:9","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:9","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"value","nameLocation":"640:5:9","nodeType":"VariableDeclaration","scope":1578,"src":"632:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:9"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[],"src":"662:0:9"},"scope":1600,"src":"618:87:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1598,"nodeType":"Block","src":"1086:93:9","statements":[{"expression":{"arguments":[{"id":1587,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1112:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"1121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1135:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"1096:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"1096:45:9"},{"expression":{"arguments":[{"id":1594,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1157:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"1166:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"1151:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"1151:21:9"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"711:305:9","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:9","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"account","nameLocation":"1047:7:9","nodeType":"VariableDeclaration","scope":1599,"src":"1039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"1064:5:9","nodeType":"VariableDeclaration","scope":1599,"src":"1056:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:9"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"1086:0:9"},"scope":1600,"src":"1021:158:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1601,"src":"448:733:9","usedErrors":[836,841,846,855,860,865],"usedEvents":[1488,1497]}],"src":"124:1058:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1476],"ERC20Pausable":[1634],"Pausable":[2249]},"id":1635,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1602,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":1477,"src":"150:35:10","symbolAliases":[{"foreign":{"id":1603,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"158:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1635,"sourceUnit":2250,"src":"186:53:10","symbolAliases":[{"foreign":{"id":1605,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"194:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1608,"name":"ERC20","nameLocations":["965:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"965:5:10"},"id":1609,"nodeType":"InheritanceSpecifier","src":"965:5:10"},{"baseName":{"id":1610,"name":"Pausable","nameLocations":["972:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":2249,"src":"972:8:10"},"id":1611,"nodeType":"InheritanceSpecifier","src":"972:8:10"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"241:688:10","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1634,"linearizedBaseContracts":[1634,2249,1476,866,1946,1554,2012],"name":"ERC20Pausable","nameLocation":"948:13:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1283],"body":{"id":1632,"nodeType":"Block","src":"1211:47:10","statements":[{"expression":{"arguments":[{"id":1627,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1235:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1628,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1241:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"1245:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1624,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1634_$","typeString":"type(contract super ERC20Pausable)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:10","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"1221:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"1221:30:10"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"987:121:10","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1633,"implemented":true,"kind":"function","modifiers":[{"id":1622,"kind":"modifierInvocation","modifierName":{"id":1621,"name":"whenNotPaused","nameLocations":["1197:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":2174,"src":"1197:13:10"},"nodeType":"ModifierInvocation","src":"1197:13:10"}],"name":"_update","nameLocation":"1122:7:10","nodeType":"FunctionDefinition","overrides":{"id":1620,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:10"},"parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"from","nameLocation":"1138:4:10","nodeType":"VariableDeclaration","scope":1633,"src":"1130:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"to","nameLocation":"1152:2:10","nodeType":"VariableDeclaration","scope":1633,"src":"1144:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"value","nameLocation":"1164:5:10","nodeType":"VariableDeclaration","scope":1633,"src":"1156:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:10"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"1211:0:10"},"scope":1634,"src":"1113:145:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1635,"src":"930:330:10","usedErrors":[836,841,846,855,860,865,2154,2157],"usedEvents":[1488,1497,2146,2151]}],"src":"124:1137:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4138],"EIP712":[4365],"ERC20":[1476],"ERC20Permit":[1788],"IERC20Permit":[1982],"Nonces":[2080]},"id":1789,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1636,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1789,"sourceUnit":1983,"src":"148:48:11","symbolAliases":[{"foreign":{"id":1637,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"156:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1789,"sourceUnit":1477,"src":"197:35:11","symbolAliases":[{"foreign":{"id":1639,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"205:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1789,"sourceUnit":4139,"src":"233:60:11","symbolAliases":[{"foreign":{"id":1641,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"241:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1789,"sourceUnit":4366,"src":"294:62:11","symbolAliases":[{"foreign":{"id":1643,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"302:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1789,"sourceUnit":2081,"src":"357:49:11","symbolAliases":[{"foreign":{"id":1645,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"365:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1648,"name":"ERC20","nameLocations":["931:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"931:5:11"},"id":1649,"nodeType":"InheritanceSpecifier","src":"931:5:11"},{"baseName":{"id":1650,"name":"IERC20Permit","nameLocations":["938:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"938:12:11"},"id":1651,"nodeType":"InheritanceSpecifier","src":"938:12:11"},{"baseName":{"id":1652,"name":"EIP712","nameLocations":["952:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4365,"src":"952:6:11"},"id":1653,"nodeType":"InheritanceSpecifier","src":"952:6:11"},{"baseName":{"id":1654,"name":"Nonces","nameLocations":["960:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"960:6:11"},"id":1655,"nodeType":"InheritanceSpecifier","src":"960:6:11"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"408:489:11","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1788,"linearizedBaseContracts":[1788,2080,4365,798,1982,1476,866,1946,1554,2012],"name":"ERC20Permit","nameLocation":"916:11:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1660,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:11","nodeType":"VariableDeclaration","scope":1788,"src":"973:146:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1657,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"1126:52:11","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1665,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:11","nodeType":"ErrorDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:11","nodeType":"VariableDeclaration","scope":1665,"src":"1213:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:11"},"src":"1183:48:11"},{"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1237:45:11","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1672,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:11","nodeType":"ErrorDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"signer","nameLocation":"1322:6:11","nodeType":"VariableDeclaration","scope":1672,"src":"1314:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"owner","nameLocation":"1338:5:11","nodeType":"VariableDeclaration","scope":1672,"src":"1330:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:11"},"src":"1287:58:11"},{"body":{"id":1682,"nodeType":"Block","src":"1627:2:11","statements":[]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"1351:221:11","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1683,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1678,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1616:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1680,"kind":"baseConstructorSpecifier","modifierName":{"id":1677,"name":"EIP712","nameLocations":["1609:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4365,"src":"1609:6:11"},"nodeType":"ModifierInvocation","src":"1609:17:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"name","nameLocation":"1603:4:11","nodeType":"VariableDeclaration","scope":1683,"src":"1589:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1674,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:11"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"1627:0:11"},"scope":1788,"src":"1577:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1967],"body":{"id":1759,"nodeType":"Block","src":"1872:483:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1701,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1703,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1904:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"1882:97:11","trueBody":{"id":1709,"nodeType":"Block","src":"1914:65:11","statements":[{"errorCall":{"arguments":[{"id":1706,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1959:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1705,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"1935:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"RevertStatement","src":"1928:40:11"}]}},{"assignments":[1712],"declarations":[{"constant":false,"id":1712,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:11","nodeType":"VariableDeclaration","scope":1759,"src":"1989:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1726,"initialValue":{"arguments":[{"arguments":[{"id":1716,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2031:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2048:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"2055:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2064:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1721,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2081:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2071:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1723,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2089:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1714,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1713,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:11"},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"hash","nameLocation":"2118:4:11","nodeType":"VariableDeclaration","scope":1759,"src":"2110:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[{"id":1730,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2142:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1729,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"2125:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:11"},{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"signer","nameLocation":"2172:6:11","nodeType":"VariableDeclaration","scope":1759,"src":"2164:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1742,"initialValue":{"arguments":[{"id":1737,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2195:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1738,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2201:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1739,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2204:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1740,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2207:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1735,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"2181:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4138_$","typeString":"type(library ECDSA)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:11","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4088,"src":"2181:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1743,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2223:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1744,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2233:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1752,"nodeType":"IfStatement","src":"2219:88:11","trueBody":{"id":1751,"nodeType":"Block","src":"2240:67:11","statements":[{"errorCall":{"arguments":[{"id":1747,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2282:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2290:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1746,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2261:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"RevertStatement","src":"2254:42:11"}]}},{"expression":{"arguments":[{"id":1754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2326:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"2333:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2342:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1753,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1367,1427],"referencedDeclaration":1367,"src":"2317:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"2317:31:11"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"1635:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:11","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"owner","nameLocation":"1716:5:11","nodeType":"VariableDeclaration","scope":1760,"src":"1708:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"spender","nameLocation":"1739:7:11","nodeType":"VariableDeclaration","scope":1760,"src":"1731:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"1764:5:11","nodeType":"VariableDeclaration","scope":1760,"src":"1756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:11","nodeType":"VariableDeclaration","scope":1760,"src":"1779:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"v","nameLocation":"1811:1:11","nodeType":"VariableDeclaration","scope":1760,"src":"1805:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1693,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"r","nameLocation":"1830:1:11","nodeType":"VariableDeclaration","scope":1760,"src":"1822:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"s","nameLocation":"1849:1:11","nodeType":"VariableDeclaration","scope":1760,"src":"1841:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:11"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"1872:0:11"},"scope":1788,"src":"1683:672:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1975,2039],"body":{"id":1776,"nodeType":"Block","src":"2509:43:11","statements":[{"expression":{"arguments":[{"id":1773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"2539:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1771,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1788_$","typeString":"type(contract super ERC20Permit)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:11","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2039,"src":"2526:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1770,"id":1775,"nodeType":"Return","src":"2519:26:11"}]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"2361:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:11","nodeType":"FunctionDefinition","overrides":{"id":1767,"nodeType":"OverrideSpecifier","overrides":[{"id":1765,"name":"IERC20Permit","nameLocations":["2469:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"2469:12:11"},{"id":1766,"name":"Nonces","nameLocations":["2483:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"2483:6:11"}],"src":"2460:30:11"},"parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"owner","nameLocation":"2433:5:11","nodeType":"VariableDeclaration","scope":1777,"src":"2425:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:11"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"2500:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:11"},"scope":1788,"src":"2409:143:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1981],"body":{"id":1786,"nodeType":"Block","src":"2727:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1783,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"2744:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1782,"id":1785,"nodeType":"Return","src":"2737:27:11"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"2558:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:11","nodeType":"FunctionDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[],"src":"2684:2:11"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1787,"src":"2718:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:11"},"scope":1788,"src":"2659:112:11","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1789,"src":"898:1875:11","usedErrors":[836,841,846,855,860,865,1665,1672,2022,2263,2265,3801,3806,3811],"usedEvents":[778,1488,1497]}],"src":"122:2652:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[9535],"ERC20":[1476],"ERC20Votes":[1920],"Votes":[773]},"id":1921,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1790,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1921,"sourceUnit":1477,"src":"147:35:12","symbolAliases":[{"foreign":{"id":1791,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"155:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":1794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1921,"sourceUnit":774,"src":"183:58:12","symbolAliases":[{"foreign":{"id":1793,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"191:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":1796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1921,"sourceUnit":9536,"src":"242:67:12","symbolAliases":[{"foreign":{"id":1795,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9535,"src":"250:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1798,"name":"ERC20","nameLocations":["1226:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"1226:5:12"},"id":1799,"nodeType":"InheritanceSpecifier","src":"1226:5:12"},{"baseName":{"id":1800,"name":"Votes","nameLocations":["1233:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":773,"src":"1233:5:12"},"id":1801,"nodeType":"InheritanceSpecifier","src":"1233:5:12"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"311:882:12","text":" @dev Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting\n power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":1920,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[1920,773,809,230,824,2080,4365,798,1476,866,1946,1554,2012],"name":"ERC20Votes","nameLocation":"1212:10:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"1245:100:12","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":1808,"name":"ERC20ExceededSafeSupply","nameLocation":"1356:23:12","nodeType":"ErrorDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"increasedSupply","nameLocation":"1388:15:12","nodeType":"VariableDeclaration","scope":1808,"src":"1380:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"cap","nameLocation":"1413:3:12","nodeType":"VariableDeclaration","scope":1808,"src":"1405:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1379:38:12"},"src":"1350:68:12"},{"body":{"id":1820,"nodeType":"Block","src":"2175:41:12","statements":[{"expression":{"expression":{"arguments":[{"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2197:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1815,"name":"uint208","nodeType":"ElementaryTypeName","src":"2197:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1814,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2192:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2206:3:12","memberName":"max","nodeType":"MemberAccess","src":"2192:17:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1813,"id":1819,"nodeType":"Return","src":"2185:24:12"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"1424:684:12","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {Votes}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {Votes-_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2122:10:12","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"2132:2:12"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"2166:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2165:9:12"},"scope":1920,"src":"2113:103:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1283],"body":{"id":1874,"nodeType":"Block","src":"2440:329:12","statements":[{"expression":{"arguments":[{"id":1835,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2464:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2470:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2474:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1832,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2450:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1920_$","typeString":"type(contract super ERC20Votes)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:12","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1283,"src":"2450:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2450:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"ExpressionStatement","src":"2450:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1840,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2494:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2502:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"2502:7:12","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2494:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1867,"nodeType":"IfStatement","src":"2490:226:12","trueBody":{"id":1866,"nodeType":"Block","src":"2514:202:12","statements":[{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"supply","nameLocation":"2536:6:12","nodeType":"VariableDeclaration","scope":1866,"src":"2528:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1850,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1848,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"2545:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2528:30:12"},{"assignments":[1852],"declarations":[{"constant":false,"id":1852,"mutability":"mutable","name":"cap","nameLocation":"2580:3:12","nodeType":"VariableDeclaration","scope":1866,"src":"2572:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2572:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1853,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"2586:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2572:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2616:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1857,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"2625:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2616:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1865,"nodeType":"IfStatement","src":"2612:94:12","trueBody":{"id":1864,"nodeType":"Block","src":"2630:76:12","statements":[{"errorCall":{"arguments":[{"id":1860,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2679:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"2687:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1859,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2655:23:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"RevertStatement","src":"2648:43:12"}]}}]}},{"expression":{"arguments":[{"id":1869,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2746:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2752:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"2756:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1868,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2725:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"2725:37:12"}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"2222:129:12","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2365:7:12","nodeType":"FunctionDefinition","overrides":{"id":1830,"nodeType":"OverrideSpecifier","overrides":[],"src":"2431:8:12"},"parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"from","nameLocation":"2381:4:12","nodeType":"VariableDeclaration","scope":1875,"src":"2373:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"2373:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"to","nameLocation":"2395:2:12","nodeType":"VariableDeclaration","scope":1875,"src":"2387:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"2407:5:12","nodeType":"VariableDeclaration","scope":1875,"src":"2399:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2372:41:12"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[],"src":"2440:0:12"},"scope":1920,"src":"2356:413:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[772],"body":{"id":1888,"nodeType":"Block","src":"3120:42:12","statements":[{"expression":{"arguments":[{"id":1885,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3147:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1884,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"3137:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1883,"id":1887,"nodeType":"Return","src":"3130:25:12"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"2775:249:12","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3038:15:12","nodeType":"FunctionDefinition","overrides":{"id":1880,"nodeType":"OverrideSpecifier","overrides":[],"src":"3093:8:12"},"parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"account","nameLocation":"3062:7:12","nodeType":"VariableDeclaration","scope":1889,"src":"3054:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3054:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3053:17:12"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"3111:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3110:9:12"},"scope":1920,"src":"3029:133:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"3315:48:12","statements":[{"expression":{"arguments":[{"id":1898,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"3348:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1897,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3332:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1896,"id":1900,"nodeType":"Return","src":"3325:31:12"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"3168:64:12","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3246:14:12","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"account","nameLocation":"3269:7:12","nodeType":"VariableDeclaration","scope":1902,"src":"3261:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"3261:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3260:17:12"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"3307:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1894,"name":"uint32","nodeType":"ElementaryTypeName","src":"3307:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3306:8:12"},"scope":1920,"src":"3237:126:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1918,"nodeType":"Block","src":"3553:50:12","statements":[{"expression":{"arguments":[{"id":1914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"3583:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1915,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"3592:3:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1913,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"3570:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$8496_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":1912,"id":1917,"nodeType":"Return","src":"3563:33:12"}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"3369:66:12","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3449:11:12","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"account","nameLocation":"3469:7:12","nodeType":"VariableDeclaration","scope":1919,"src":"3461:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"pos","nameLocation":"3485:3:12","nodeType":"VariableDeclaration","scope":1919,"src":"3478:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1906,"name":"uint32","nodeType":"ElementaryTypeName","src":"3478:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3460:29:12"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"3519:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":1910,"nodeType":"UserDefinedTypeName","pathNode":{"id":1909,"name":"Checkpoints.Checkpoint208","nameLocations":["3519:11:12","3531:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"3519:25:12"},"referencedDeclaration":8496,"src":"3519:25:12","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3518:34:12"},"scope":1920,"src":"3440:163:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1921,"src":"1194:2411:12","usedErrors":[155,281,288,836,841,846,855,860,865,1808,2022,2263,2265,3801,3806,3811,6055,7962],"usedEvents":[164,173,778,1488,1497]}],"src":"121:3485:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1554],"IERC20Metadata":[1946]},"id":1947,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1922,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1947,"sourceUnit":1555,"src":"151:37:13","symbolAliases":[{"foreign":{"id":1923,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"159:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1926,"name":"IERC20","nameLocations":["306:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":1554,"src":"306:6:13"},"id":1927,"nodeType":"InheritanceSpecifier","src":"306:6:13"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"190:87:13","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1946,"linearizedBaseContracts":[1946,1554],"name":"IERC20Metadata","nameLocation":"288:14:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"319:54:13","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1933,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:13","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[],"src":"391:2:13"},"returnParameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"417:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:13"},"scope":1946,"src":"378:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"438:56:13","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1939,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:13","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"514:2:13"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"540:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1936,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:13"},"scope":1946,"src":"499:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"561:65:13","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1945,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:13","nodeType":"FunctionDefinition","parameters":{"id":1941,"nodeType":"ParameterList","parameters":[],"src":"648:2:13"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"674:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1942,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:13"},"scope":1946,"src":"631:50:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1947,"src":"278:405:13","usedErrors":[],"usedEvents":[1488,1497]}],"src":"125:559:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1982]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1948,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"149:1965:14","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1982,"linearizedBaseContracts":[1982],"name":"IERC20Permit","nameLocation":"2125:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"2144:850:14","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1967,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:14","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"owner","nameLocation":"3032:5:14","nodeType":"VariableDeclaration","scope":1967,"src":"3024:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"spender","nameLocation":"3055:7:14","nodeType":"VariableDeclaration","scope":1967,"src":"3047:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1953,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"value","nameLocation":"3080:5:14","nodeType":"VariableDeclaration","scope":1967,"src":"3072:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1958,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:14","nodeType":"VariableDeclaration","scope":1967,"src":"3095:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"v","nameLocation":"3127:1:14","nodeType":"VariableDeclaration","scope":1967,"src":"3121:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1959,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"r","nameLocation":"3146:1:14","nodeType":"VariableDeclaration","scope":1967,"src":"3138:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"s","nameLocation":"3165:1:14","nodeType":"VariableDeclaration","scope":1967,"src":"3157:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:14"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"3181:0:14"},"scope":1982,"src":"2999:183:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"3188:294:14","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1975,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:14","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"owner","nameLocation":"3511:5:14","nodeType":"VariableDeclaration","scope":1975,"src":"3503:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:14"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1975,"src":"3541:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:14"},"scope":1982,"src":"3487:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"3556:128:14","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1981,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:14","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[],"src":"3767:2:14"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"3793:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:14"},"scope":1982,"src":"3742:60:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1983,"src":"2115:1689:14","usedErrors":[],"usedEvents":[]}],"src":"123:3682:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2012]},"id":2013,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"127:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2012,"linearizedBaseContracts":[2012],"name":"Context","nameLocation":"642:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":1993,"nodeType":"Block","src":"718:34:15","statements":[{"expression":{"expression":{"id":1990,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:15","memberName":"sender","nodeType":"MemberAccess","src":"735:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1989,"id":1992,"nodeType":"Return","src":"728:17:15"}]},"id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:15","nodeType":"FunctionDefinition","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"675:2:15"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"709:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:15"},"scope":2012,"src":"656:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2002,"nodeType":"Block","src":"825:32:15","statements":[{"expression":{"expression":{"id":1999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:15","memberName":"data","nodeType":"MemberAccess","src":"842:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1998,"id":2001,"nodeType":"Return","src":"835:15:15"}]},"id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:15","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[],"src":"775:2:15"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2003,"src":"809:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1996,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:15"},"scope":2012,"src":"758:99:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"935:25:15","statements":[{"expression":{"hexValue":"30","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2007,"id":2009,"nodeType":"Return","src":"945:8:15"}]},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:15","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[],"src":"892:2:15"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"926:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:15"},"scope":2012,"src":"863:97:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2013,"src":"624:338:15","usedErrors":[],"usedEvents":[]}],"src":"101:862:15"},"id":15},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2080]},"id":2081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2014,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"125:83:16","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2080,"linearizedBaseContracts":[2080],"name":"Nonces","nameLocation":"227:6:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"240:90:16","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2022,"name":"InvalidAccountNonce","nameLocation":"341:19:16","nodeType":"ErrorDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"account","nameLocation":"369:7:16","nodeType":"VariableDeclaration","scope":2022,"src":"361:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:16","nodeType":"VariableDeclaration","scope":2022,"src":"378:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:16"},"src":"335:65:16"},{"constant":false,"id":2026,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:16","nodeType":"VariableDeclaration","scope":2080,"src":"406:51:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2025,"keyName":"account","keyNameLocation":"422:7:16","keyType":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2038,"nodeType":"Block","src":"607:38:16","statements":[{"expression":{"baseExpression":{"id":2034,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"624:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2036,"indexExpression":{"id":2035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"632:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2037,"nodeType":"Return","src":"617:21:16"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"464:69:16","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:16","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"owner","nameLocation":"562:5:16","nodeType":"VariableDeclaration","scope":2039,"src":"554:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:16"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2039,"src":"598:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:16"},"scope":2080,"src":"538:107:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2053,"nodeType":"Block","src":"828:326:16","statements":[{"id":2052,"nodeType":"UncheckedBlock","src":"1031:117:16","statements":[{"expression":{"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:16","subExpression":{"baseExpression":{"id":2047,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1121:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2049,"indexExpression":{"id":2048,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"1129:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2046,"id":2051,"nodeType":"Return","src":"1114:23:16"}]}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"651:103:16","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2054,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:16","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"owner","nameLocation":"786:5:16","nodeType":"VariableDeclaration","scope":2054,"src":"778:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:16"},"returnParameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2054,"src":"819:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:16"},"scope":2080,"src":"759:395:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2078,"nodeType":"Block","src":"1338:149:16","statements":[{"assignments":[2063],"declarations":[{"constant":false,"id":2063,"mutability":"mutable","name":"current","nameLocation":"1356:7:16","nodeType":"VariableDeclaration","scope":2078,"src":"1348:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2067,"initialValue":{"arguments":[{"id":2065,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1376:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2064,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"1366:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2068,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"1396:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2069,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2077,"nodeType":"IfStatement","src":"1392:89:16","trueBody":{"id":2076,"nodeType":"Block","src":"1414:67:16","statements":[{"errorCall":{"arguments":[{"id":2072,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"1455:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"1435:19:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2075,"nodeType":"RevertStatement","src":"1428:42:16"}]}}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"1160:100:16","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:16","nodeType":"FunctionDefinition","parameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"owner","nameLocation":"1299:5:16","nodeType":"VariableDeclaration","scope":2079,"src":"1291:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:16","nodeType":"VariableDeclaration","scope":2079,"src":"1306:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:16"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[],"src":"1338:0:16"},"scope":2080,"src":"1265:222:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2081,"src":"209:1280:16","usedErrors":[2022],"usedEvents":[]}],"src":"99:1391:16"},"id":16},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2132]},"id":2133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2082,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"125:489:17","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2132,"linearizedBaseContracts":[2132],"name":"Panic","nameLocation":"665:5:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"677:36:17","text":"@dev generic / unspecified error"},"id":2087,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":2132,"src":"718:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"764:37:17","text":"@dev used by the assert() builtin"},"id":2091,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:17","nodeType":"VariableDeclaration","scope":2132,"src":"806:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"851:41:17","text":"@dev arithmetic underflow or overflow"},"id":2095,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:17","nodeType":"VariableDeclaration","scope":2132,"src":"897:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:17","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"950:35:17","text":"@dev division or modulo by zero"},"id":2099,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:17","nodeType":"VariableDeclaration","scope":2132,"src":"990:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"1045:30:17","text":"@dev enum conversion error"},"id":2103,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:17","nodeType":"VariableDeclaration","scope":2132,"src":"1080:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:17","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"1140:36:17","text":"@dev invalid encoding in storage"},"id":2107,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:17","nodeType":"VariableDeclaration","scope":2132,"src":"1181:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"1242:24:17","text":"@dev empty array pop"},"id":2111,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:17","nodeType":"VariableDeclaration","scope":2132,"src":"1271:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:17","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"1325:35:17","text":"@dev array out of bounds access"},"id":2115,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:17","nodeType":"VariableDeclaration","scope":2132,"src":"1365:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"1423:65:17","text":"@dev resource error (too large allocation or too large array)"},"id":2119,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:17","nodeType":"VariableDeclaration","scope":2132,"src":"1493:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"1546:42:17","text":"@dev calling invalid internal function"},"id":2123,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:17","nodeType":"VariableDeclaration","scope":2132,"src":"1593:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:17","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2130,"nodeType":"Block","src":"1819:151:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:17"},"nodeType":"YulFunctionCall","src":"1868:24:17"},"nodeType":"YulExpressionStatement","src":"1868:24:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:17","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:17"},"nodeType":"YulFunctionCall","src":"1905:18:17"},"nodeType":"YulExpressionStatement","src":"1905:18:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:17","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:17"},"nodeType":"YulFunctionCall","src":"1936:18:17"},"nodeType":"YulExpressionStatement","src":"1936:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2126,"isOffset":false,"isSlot":false,"src":"1918:4:17","valueSize":1}],"flags":["memory-safe"],"id":2129,"nodeType":"InlineAssembly","src":"1829:135:17"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"1658:113:17","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2131,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:17","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"code","nameLocation":"1799:4:17","nodeType":"VariableDeclaration","scope":2131,"src":"1791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:17"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"1819:0:17"},"scope":2132,"src":"1776:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2133,"src":"657:1315:17","usedErrors":[],"usedEvents":[]}],"src":"99:1874:17"},"id":17},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2012],"Pausable":[2249]},"id":2250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2134,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2250,"sourceUnit":2013,"src":"128:45:18","symbolAliases":[{"foreign":{"id":2135,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"136:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2138,"name":"Context","nameLocations":["645:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2012,"src":"645:7:18"},"id":2139,"nodeType":"InheritanceSpecifier","src":"645:7:18"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"175:439:18","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2249,"linearizedBaseContracts":[2249,2012],"name":"Pausable","nameLocation":"633:8:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2141,"mutability":"mutable","name":"_paused","nameLocation":"672:7:18","nodeType":"VariableDeclaration","scope":2249,"src":"659:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2140,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"686:73:18","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2146,"name":"Paused","nameLocation":"770:6:18","nodeType":"EventDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:18","nodeType":"VariableDeclaration","scope":2146,"src":"777:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2143,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:18"},"src":"764:30:18"},{"anonymous":false,"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"800:70:18","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2151,"name":"Unpaused","nameLocation":"881:8:18","nodeType":"EventDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:18","nodeType":"VariableDeclaration","scope":2151,"src":"890:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:18"},"src":"875:32:18"},{"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"913:76:18","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2154,"name":"EnforcedPause","nameLocation":"1000:13:18","nodeType":"ErrorDefinition","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"1013:2:18"},"src":"994:22:18"},{"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"1022:80:18","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2157,"name":"ExpectedPause","nameLocation":"1113:13:18","nodeType":"ErrorDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"1126:2:18"},"src":"1107:22:18"},{"body":{"id":2165,"nodeType":"Block","src":"1221:32:18","statements":[{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1231:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"ExpressionStatement","src":"1231:15:18"}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"1135:67:18","text":" @dev Initializes the contract in unpaused state."},"id":2166,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"1218:2:18"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[],"src":"1221:0:18"},"scope":2249,"src":"1207:46:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"1464:47:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2169,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1474:17:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2171,"nodeType":"ExpressionStatement","src":"1474:19:18"},{"id":2172,"nodeType":"PlaceholderStatement","src":"1503:1:18"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"1259:175:18","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2174,"name":"whenNotPaused","nameLocation":"1448:13:18","nodeType":"ModifierDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"1461:2:18"},"src":"1439:72:18","virtual":false,"visibility":"internal"},{"body":{"id":2181,"nodeType":"Block","src":"1711:44:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2177,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"1721:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"1721:16:18"},{"id":2180,"nodeType":"PlaceholderStatement","src":"1747:1:18"}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"1517:167:18","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2182,"name":"whenPaused","nameLocation":"1698:10:18","nodeType":"ModifierDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[],"src":"1708:2:18"},"src":"1689:66:18","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"1903:31:18","statements":[{"expression":{"id":2188,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"1920:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2187,"id":2189,"nodeType":"Return","src":"1913:14:18"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"1761:84:18","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:18","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[],"src":"1865:2:18"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"1897:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2185,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:18"},"scope":2249,"src":"1850:84:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2202,"nodeType":"Block","src":"2053:77:18","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2195,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2067:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"2063:61:18","trueBody":{"id":2200,"nodeType":"Block","src":"2077:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2197,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"2098:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"RevertStatement","src":"2091:22:18"}]}}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"1940:57:18","text":" @dev Throws if the contract is paused."},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:18","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"2028:2:18"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"2053:0:18"},"scope":2249,"src":"2002:128:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"2250:78:18","statements":[{"condition":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:18","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2207,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2265:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"2260:62:18","trueBody":{"id":2213,"nodeType":"Block","src":"2275:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2210,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"2296:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"RevertStatement","src":"2289:22:18"}]}}]},"documentation":{"id":2204,"nodeType":"StructuredDocumentation","src":"2136:61:18","text":" @dev Throws if the contract is not paused."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:18","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[],"src":"2225:2:18"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"2250:0:18"},"scope":2249,"src":"2202:126:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"2512:66:18","statements":[{"expression":{"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2222,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"2522:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2225,"nodeType":"ExpressionStatement","src":"2522:14:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"2558:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2226,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2551:6:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"EmitStatement","src":"2546:25:18"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"2334:124:18","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2232,"implemented":true,"kind":"function","modifiers":[{"id":2220,"kind":"modifierInvocation","modifierName":{"id":2219,"name":"whenNotPaused","nameLocations":["2498:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2174,"src":"2498:13:18"},"nodeType":"ModifierInvocation","src":"2498:13:18"}],"name":"_pause","nameLocation":"2472:6:18","nodeType":"FunctionDefinition","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[],"src":"2478:2:18"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[],"src":"2512:0:18"},"scope":2249,"src":"2463:115:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"2758:69:18","statements":[{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2238,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"2768:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2241,"nodeType":"ExpressionStatement","src":"2768:15:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2243,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"2807:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2242,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2798:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"EmitStatement","src":"2793:27:18"}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"2584:121:18","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2248,"implemented":true,"kind":"function","modifiers":[{"id":2236,"kind":"modifierInvocation","modifierName":{"id":2235,"name":"whenPaused","nameLocations":["2747:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2182,"src":"2747:10:18"},"nodeType":"ModifierInvocation","src":"2747:10:18"}],"name":"_unpause","nameLocation":"2719:8:18","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[],"src":"2727:2:18"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[],"src":"2758:0:18"},"scope":2249,"src":"2710:117:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2250,"src":"615:2214:18","usedErrors":[2154,2157],"usedEvents":[2146,2151]}],"src":"102:2728:18"},"id":18},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2255],"ShortStrings":[2466],"StorageSlot":[2590]},"id":2467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2251,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2467,"sourceUnit":2591,"src":"132:46:19","symbolAliases":[{"foreign":{"id":2252,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"140:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2255,"name":"ShortString","nameLocation":"353:11:19","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:19","underlyingType":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"378:876:19","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2466,"linearizedBaseContracts":[2466],"name":"ShortStrings","nameLocation":"1263:12:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2259,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:19","nodeType":"VariableDeclaration","scope":2466,"src":"1345:111:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2263,"name":"StringTooLong","nameLocation":"1469:13:19","nodeType":"ErrorDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"str","nameLocation":"1490:3:19","nodeType":"VariableDeclaration","scope":2263,"src":"1483:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2260,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:19"},"src":"1463:32:19"},{"errorSelector":"b3512b0c","id":2265,"name":"InvalidShortString","nameLocation":"1506:18:19","nodeType":"ErrorDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"1524:2:19"},"src":"1500:27:19"},{"body":{"id":2308,"nodeType":"Block","src":"1786:208:19","statements":[{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:19","nodeType":"VariableDeclaration","scope":2308,"src":"1796:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2274,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2280,"initialValue":{"arguments":[{"id":2278,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1822:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:19","typeDescriptions":{}}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2281,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1840:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:19","memberName":"length","nodeType":"MemberAccess","src":"1840:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2290,"nodeType":"IfStatement","src":"1836:72:19","trueBody":{"id":2289,"nodeType":"Block","src":"1858:50:19","statements":[{"errorCall":{"arguments":[{"id":2286,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"1893:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2285,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1879:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2288,"nodeType":"RevertStatement","src":"1872:25:19"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2299,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1965:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:19","typeDescriptions":{}}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:19","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2302,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1974:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:19","memberName":"length","nodeType":"MemberAccess","src":"1974:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:19","typeDescriptions":{}}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2291,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"1924:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"type(ShortString)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"functionReturnParameters":2273,"id":2307,"nodeType":"Return","src":"1917:70:19"}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"1533:170:19","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:19","nodeType":"FunctionDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"str","nameLocation":"1745:3:19","nodeType":"VariableDeclaration","scope":2309,"src":"1731:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:19"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"1773:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2271,"nodeType":"UserDefinedTypeName","pathNode":{"id":2270,"name":"ShortString","nameLocations":["1773:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"1773:11:19"},"referencedDeclaration":2255,"src":"1773:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:19"},"scope":2466,"src":"1708:286:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2334,"nodeType":"Block","src":"2152:304:19","statements":[{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"len","nameLocation":"2170:3:19","nodeType":"VariableDeclaration","scope":2334,"src":"2162:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"arguments":[{"id":2321,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"2187:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"id":2320,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"2176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:19"},{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"str","nameLocation":"2294:3:19","nodeType":"VariableDeclaration","scope":2334,"src":"2280:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2324,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2330,"initialValue":{"arguments":[{"hexValue":"3332","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2326,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:19"},{"AST":{"nodeType":"YulBlock","src":"2349:81:19","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:19"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:19"},"nodeType":"YulFunctionCall","src":"2363:16:19"},"nodeType":"YulExpressionStatement","src":"2363:16:19"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:19"},"nodeType":"YulFunctionCall","src":"2399:14:19"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:19"},"nodeType":"YulFunctionCall","src":"2392:28:19"},"nodeType":"YulExpressionStatement","src":"2392:28:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2319,"isOffset":false,"isSlot":false,"src":"2375:3:19","valueSize":1},{"declaration":2313,"isOffset":false,"isSlot":false,"src":"2415:4:19","valueSize":1},{"declaration":2325,"isOffset":false,"isSlot":false,"src":"2370:3:19","valueSize":1},{"declaration":2325,"isOffset":false,"isSlot":false,"src":"2403:3:19","valueSize":1}],"flags":["memory-safe"],"id":2331,"nodeType":"InlineAssembly","src":"2324:106:19"},{"expression":{"id":2332,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2446:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2317,"id":2333,"nodeType":"Return","src":"2439:10:19"}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"2000:73:19","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2335,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:19","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:19","nodeType":"VariableDeclaration","scope":2335,"src":"2096:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"ShortString","nameLocations":["2096:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2096:11:19"},"referencedDeclaration":2255,"src":"2096:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:19"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2335,"src":"2137:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2315,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:19"},"scope":2466,"src":"2078:378:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2366,"nodeType":"Block","src":"2598:175:19","statements":[{"assignments":[2345],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"result","nameLocation":"2616:6:19","nodeType":"VariableDeclaration","scope":2366,"src":"2608:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2350,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"2652:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"expression":{"id":2348,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2633:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"type(ShortString)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:19","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2679:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2363,"nodeType":"IfStatement","src":"2675:69:19","trueBody":{"id":2362,"nodeType":"Block","src":"2692:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2359,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2713:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"RevertStatement","src":"2706:27:19"}]}},{"expression":{"id":2364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2760:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2343,"id":2365,"nodeType":"Return","src":"2753:13:19"}]},"documentation":{"id":2336,"nodeType":"StructuredDocumentation","src":"2462:61:19","text":" @dev Return the length of a `ShortString`."},"id":2367,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:19","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:19","nodeType":"VariableDeclaration","scope":2367,"src":"2548:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2338,"nodeType":"UserDefinedTypeName","pathNode":{"id":2337,"name":"ShortString","nameLocations":["2548:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2548:11:19"},"referencedDeclaration":2255,"src":"2548:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:19"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2367,"src":"2589:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:19"},"scope":2466,"src":"2528:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2406,"nodeType":"Block","src":"2996:231:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3016:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2378,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:19","typeDescriptions":{}}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:19","memberName":"length","nodeType":"MemberAccess","src":"3010:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2404,"nodeType":"Block","src":"3094:127:19","statements":[{"expression":{"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2393,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"3134:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2390,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"3108:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2590_$","typeString":"type(library StorageSlot)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2567,"src":"3108:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2487_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2487_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2486,"src":"3108:38:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3149:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2398,"nodeType":"ExpressionStatement","src":"3108:46:19"},{"expression":{"arguments":[{"id":2401,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3192:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2399,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3175:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"type(ShortString)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"functionReturnParameters":2377,"id":2403,"nodeType":"Return","src":"3168:42:19"}]},"id":2405,"nodeType":"IfStatement","src":"3006:215:19","trueBody":{"id":2389,"nodeType":"Block","src":"3036:52:19","statements":[{"expression":{"arguments":[{"id":2386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3071:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2385,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3057:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"functionReturnParameters":2377,"id":2388,"nodeType":"Return","src":"3050:27:19"}]}}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"2779:103:19","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:19","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"value","nameLocation":"2936:5:19","nodeType":"VariableDeclaration","scope":2407,"src":"2922:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2369,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"store","nameLocation":"2958:5:19","nodeType":"VariableDeclaration","scope":2407,"src":"2943:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:19"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2407,"src":"2983:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2375,"nodeType":"UserDefinedTypeName","pathNode":{"id":2374,"name":"ShortString","nameLocations":["2983:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2983:11:19"},"referencedDeclaration":2255,"src":"2983:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:19"},"scope":2466,"src":"2887:340:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"3467:158:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"3500:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"expression":{"id":2418,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3481:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"type(ShortString)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2422,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3510:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2431,"nodeType":"Block","src":"3582:37:19","statements":[{"expression":{"id":2429,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"3603:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2417,"id":2430,"nodeType":"Return","src":"3596:12:19"}]},"id":2432,"nodeType":"IfStatement","src":"3477:142:19","trueBody":{"id":2428,"nodeType":"Block","src":"3529:47:19","statements":[{"expression":{"arguments":[{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"3559:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"id":2424,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"3550:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2417,"id":2427,"nodeType":"Return","src":"3543:22:19"}]}}]},"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"3233:120:19","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:19","nodeType":"FunctionDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"value","nameLocation":"3400:5:19","nodeType":"VariableDeclaration","scope":2434,"src":"3388:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2410,"nodeType":"UserDefinedTypeName","pathNode":{"id":2409,"name":"ShortString","nameLocations":["3388:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"3388:11:19"},"referencedDeclaration":2255,"src":"3388:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"store","nameLocation":"3422:5:19","nodeType":"VariableDeclaration","scope":2434,"src":"3407:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2412,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:19"},"returnParameters":{"id":2417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"3452:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2415,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:19"},"scope":2466,"src":"3358:267:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2464,"nodeType":"Block","src":"4105:174:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4138:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"expression":{"id":2445,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4119:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"type(ShortString)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2449,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"4148:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2462,"nodeType":"Block","src":"4222:51:19","statements":[{"expression":{"expression":{"arguments":[{"id":2458,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"4249:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:19","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:19","memberName":"length","nodeType":"MemberAccess","src":"4243:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2461,"nodeType":"Return","src":"4236:26:19"}]},"id":2463,"nodeType":"IfStatement","src":"4115:158:19","trueBody":{"id":2455,"nodeType":"Block","src":"4167:49:19","statements":[{"expression":{"arguments":[{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4199:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}],"id":2451,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4188:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2255_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2444,"id":2454,"nodeType":"Return","src":"4181:24:19"}]}}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"3631:364:19","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2465,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:19","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"value","nameLocation":"4044:5:19","nodeType":"VariableDeclaration","scope":2465,"src":"4032:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":2437,"nodeType":"UserDefinedTypeName","pathNode":{"id":2436,"name":"ShortString","nameLocations":["4032:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"4032:11:19"},"referencedDeclaration":2255,"src":"4032:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"store","nameLocation":"4066:5:19","nodeType":"VariableDeclaration","scope":2465,"src":"4051:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:19"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2465,"src":"4096:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:19"},"scope":2466,"src":"4000:279:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2467,"src":"1255:3026:19","usedErrors":[2263,2265],"usedEvents":[]}],"src":"106:4176:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2590]},"id":2591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"219:1187:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2590,"linearizedBaseContracts":[2590],"name":"StorageSlot","nameLocation":"1415:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2472,"members":[{"constant":false,"id":2471,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":2472,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":2590,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2475,"members":[{"constant":false,"id":2474,"mutability":"mutable","name":"value","nameLocation":"1522:5:20","nodeType":"VariableDeclaration","scope":2475,"src":"1517:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2473,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:20","nodeType":"StructDefinition","scope":2590,"src":"1488:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2478,"members":[{"constant":false,"id":2477,"mutability":"mutable","name":"value","nameLocation":"1577:5:20","nodeType":"VariableDeclaration","scope":2478,"src":"1569:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:20","nodeType":"StructDefinition","scope":2590,"src":"1540:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2481,"members":[{"constant":false,"id":2480,"mutability":"mutable","name":"value","nameLocation":"1632:5:20","nodeType":"VariableDeclaration","scope":2481,"src":"1624:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:20","nodeType":"StructDefinition","scope":2590,"src":"1595:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2484,"members":[{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"1685:5:20","nodeType":"VariableDeclaration","scope":2484,"src":"1678:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2482,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:20","nodeType":"StructDefinition","scope":2590,"src":"1650:47:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2487,"members":[{"constant":false,"id":2486,"mutability":"mutable","name":"value","nameLocation":"1738:5:20","nodeType":"VariableDeclaration","scope":2487,"src":"1731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2485,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:20","nodeType":"StructDefinition","scope":2590,"src":"1703:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2490,"members":[{"constant":false,"id":2489,"mutability":"mutable","name":"value","nameLocation":"1789:5:20","nodeType":"VariableDeclaration","scope":2490,"src":"1783:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2488,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:20","nodeType":"StructDefinition","scope":2590,"src":"1756:45:20","visibility":"public"},{"body":{"id":2500,"nodeType":"Block","src":"1983:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:20","statements":[{"nodeType":"YulAssignment","src":"2032:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2497,"isOffset":false,"isSlot":true,"src":"2032:6:20","suffix":"slot","valueSize":1},{"declaration":2493,"isOffset":false,"isSlot":false,"src":"2042:4:20","valueSize":1}],"flags":["memory-safe"],"id":2499,"nodeType":"InlineAssembly","src":"1993:63:20"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"1807:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:20","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"slot","nameLocation":"1931:4:20","nodeType":"VariableDeclaration","scope":2501,"src":"1923:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:20"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"r","nameLocation":"1980:1:20","nodeType":"VariableDeclaration","scope":2501,"src":"1960:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2472_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2496,"nodeType":"UserDefinedTypeName","pathNode":{"id":2495,"name":"AddressSlot","nameLocations":["1960:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2472,"src":"1960:11:20"},"referencedDeclaration":2472,"src":"1960:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2472_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:20"},"scope":2590,"src":"1899:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"2243:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:20","statements":[{"nodeType":"YulAssignment","src":"2292:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2508,"isOffset":false,"isSlot":true,"src":"2292:6:20","suffix":"slot","valueSize":1},{"declaration":2504,"isOffset":false,"isSlot":false,"src":"2302:4:20","valueSize":1}],"flags":["memory-safe"],"id":2510,"nodeType":"InlineAssembly","src":"2253:63:20"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"2068:86:20","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:20","nodeType":"FunctionDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"slot","nameLocation":"2191:4:20","nodeType":"VariableDeclaration","scope":2512,"src":"2183:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:20"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"r","nameLocation":"2240:1:20","nodeType":"VariableDeclaration","scope":2512,"src":"2220:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2475_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2507,"nodeType":"UserDefinedTypeName","pathNode":{"id":2506,"name":"BooleanSlot","nameLocations":["2220:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2475,"src":"2220:11:20"},"referencedDeclaration":2475,"src":"2220:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2475_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:20"},"scope":2590,"src":"2159:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2522,"nodeType":"Block","src":"2503:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:20","statements":[{"nodeType":"YulAssignment","src":"2552:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2519,"isOffset":false,"isSlot":true,"src":"2552:6:20","suffix":"slot","valueSize":1},{"declaration":2515,"isOffset":false,"isSlot":false,"src":"2562:4:20","valueSize":1}],"flags":["memory-safe"],"id":2521,"nodeType":"InlineAssembly","src":"2513:63:20"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"2328:86:20","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:20","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"slot","nameLocation":"2451:4:20","nodeType":"VariableDeclaration","scope":2523,"src":"2443:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:20"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"r","nameLocation":"2500:1:20","nodeType":"VariableDeclaration","scope":2523,"src":"2480:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2478_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2518,"nodeType":"UserDefinedTypeName","pathNode":{"id":2517,"name":"Bytes32Slot","nameLocations":["2480:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2478,"src":"2480:11:20"},"referencedDeclaration":2478,"src":"2480:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2478_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:20"},"scope":2590,"src":"2419:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2533,"nodeType":"Block","src":"2763:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:20","statements":[{"nodeType":"YulAssignment","src":"2812:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2530,"isOffset":false,"isSlot":true,"src":"2812:6:20","suffix":"slot","valueSize":1},{"declaration":2526,"isOffset":false,"isSlot":false,"src":"2822:4:20","valueSize":1}],"flags":["memory-safe"],"id":2532,"nodeType":"InlineAssembly","src":"2773:63:20"}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"2588:86:20","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:20","nodeType":"FunctionDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"slot","nameLocation":"2711:4:20","nodeType":"VariableDeclaration","scope":2534,"src":"2703:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:20"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"r","nameLocation":"2760:1:20","nodeType":"VariableDeclaration","scope":2534,"src":"2740:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2481_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2529,"nodeType":"UserDefinedTypeName","pathNode":{"id":2528,"name":"Uint256Slot","nameLocations":["2740:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2481,"src":"2740:11:20"},"referencedDeclaration":2481,"src":"2740:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2481_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:20"},"scope":2590,"src":"2679:163:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2544,"nodeType":"Block","src":"3020:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:20","statements":[{"nodeType":"YulAssignment","src":"3069:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2541,"isOffset":false,"isSlot":true,"src":"3069:6:20","suffix":"slot","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"3079:4:20","valueSize":1}],"flags":["memory-safe"],"id":2543,"nodeType":"InlineAssembly","src":"3030:63:20"}]},"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"2848:85:20","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2545,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:20","nodeType":"FunctionDefinition","parameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"slot","nameLocation":"2969:4:20","nodeType":"VariableDeclaration","scope":2545,"src":"2961:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:20"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"r","nameLocation":"3017:1:20","nodeType":"VariableDeclaration","scope":2545,"src":"2998:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2484_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2540,"nodeType":"UserDefinedTypeName","pathNode":{"id":2539,"name":"Int256Slot","nameLocations":["2998:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2484,"src":"2998:10:20"},"referencedDeclaration":2484,"src":"2998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2484_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:20"},"scope":2590,"src":"2938:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2555,"nodeType":"Block","src":"3277:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:20","statements":[{"nodeType":"YulAssignment","src":"3326:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2552,"isOffset":false,"isSlot":true,"src":"3326:6:20","suffix":"slot","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"3336:4:20","valueSize":1}],"flags":["memory-safe"],"id":2554,"nodeType":"InlineAssembly","src":"3287:63:20"}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"3105:85:20","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2556,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:20","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"slot","nameLocation":"3226:4:20","nodeType":"VariableDeclaration","scope":2556,"src":"3218:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:20"},"returnParameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"r","nameLocation":"3274:1:20","nodeType":"VariableDeclaration","scope":2556,"src":"3255:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2487_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"StringSlot","nameLocations":["3255:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"3255:10:20"},"referencedDeclaration":2487,"src":"3255:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2487_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:20"},"scope":2590,"src":"3195:161:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"3558:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:20","statements":[{"nodeType":"YulAssignment","src":"3607:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2563,"isOffset":false,"isSlot":true,"src":"3607:6:20","suffix":"slot","valueSize":1},{"declaration":2559,"isOffset":false,"isSlot":true,"src":"3617:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2565,"nodeType":"InlineAssembly","src":"3568:69:20"}]},"documentation":{"id":2557,"nodeType":"StructuredDocumentation","src":"3362:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:20","nodeType":"FunctionDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2559,"mutability":"mutable","name":"store","nameLocation":"3506:5:20","nodeType":"VariableDeclaration","scope":2567,"src":"3491:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2558,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:20"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"r","nameLocation":"3555:1:20","nodeType":"VariableDeclaration","scope":2567,"src":"3536:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2487_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2562,"nodeType":"UserDefinedTypeName","pathNode":{"id":2561,"name":"StringSlot","nameLocations":["3536:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":2487,"src":"3536:10:20"},"referencedDeclaration":2487,"src":"3536:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2487_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:20"},"scope":2590,"src":"3468:175:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2577,"nodeType":"Block","src":"3818:79:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:20","statements":[{"nodeType":"YulAssignment","src":"3867:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2574,"isOffset":false,"isSlot":true,"src":"3867:6:20","suffix":"slot","valueSize":1},{"declaration":2570,"isOffset":false,"isSlot":false,"src":"3877:4:20","valueSize":1}],"flags":["memory-safe"],"id":2576,"nodeType":"InlineAssembly","src":"3828:63:20"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"3649:84:20","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:20","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"slot","nameLocation":"3768:4:20","nodeType":"VariableDeclaration","scope":2578,"src":"3760:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:20"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"r","nameLocation":"3815:1:20","nodeType":"VariableDeclaration","scope":2578,"src":"3797:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2490_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2573,"nodeType":"UserDefinedTypeName","pathNode":{"id":2572,"name":"BytesSlot","nameLocations":["3797:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"3797:9:20"},"referencedDeclaration":2490,"src":"3797:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2490_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:20"},"scope":2590,"src":"3738:159:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2588,"nodeType":"Block","src":"4094:85:20","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:20","statements":[{"nodeType":"YulAssignment","src":"4143:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2585,"isOffset":false,"isSlot":true,"src":"4143:6:20","suffix":"slot","valueSize":1},{"declaration":2581,"isOffset":false,"isSlot":true,"src":"4153:10:20","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2587,"nodeType":"InlineAssembly","src":"4104:69:20"}]},"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"3903:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2589,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:20","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"store","nameLocation":"4043:5:20","nodeType":"VariableDeclaration","scope":2589,"src":"4029:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2580,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:20"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"r","nameLocation":"4091:1:20","nodeType":"VariableDeclaration","scope":2589,"src":"4073:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2490_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2584,"nodeType":"UserDefinedTypeName","pathNode":{"id":2583,"name":"BytesSlot","nameLocations":["4073:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":2490,"src":"4073:9:20"},"referencedDeclaration":2490,"src":"4073:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2490_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:20"},"scope":2590,"src":"4007:172:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2591,"src":"1407:2774:20","usedErrors":[],"usedEvents":[]}],"src":"193:3989:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6045],"SafeCast":[7810],"SignedMath":[7954],"Strings":[3790]},"id":3791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2592,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3791,"sourceUnit":6046,"src":"127:37:21","symbolAliases":[{"foreign":{"id":2593,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2596,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3791,"sourceUnit":7811,"src":"165:45:21","symbolAliases":[{"foreign":{"id":2595,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3791,"sourceUnit":7955,"src":"211:49:21","symbolAliases":[{"foreign":{"id":2597,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"219:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"262:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":3790,"linearizedBaseContracts":[3790],"name":"Strings","nameLocation":"305:7:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2601,"libraryName":{"id":2600,"name":"SafeCast","nameLocations":["325:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":7810,"src":"325:8:21"},"nodeType":"UsingForDirective","src":"319:21:21"},{"constant":true,"id":2604,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:21","nodeType":"VariableDeclaration","scope":3790,"src":"346:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2602,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2607,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:21","nodeType":"VariableDeclaration","scope":3790,"src":"408:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2605,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"457:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2614,"name":"StringsInsufficientHexLength","nameLocation":"549:28:21","nodeType":"ErrorDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"value","nameLocation":"586:5:21","nodeType":"VariableDeclaration","scope":2614,"src":"578:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"length","nameLocation":"601:6:21","nodeType":"VariableDeclaration","scope":2614,"src":"593:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:21"},"src":"543:66:21"},{"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"615:108:21","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2617,"name":"StringsInvalidChar","nameLocation":"734:18:21","nodeType":"ErrorDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"752:2:21"},"src":"728:27:21"},{"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"761:84:21","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2620,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:21","nodeType":"ErrorDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"883:2:21"},"src":"850:36:21"},{"body":{"id":2667,"nodeType":"Block","src":"1058:561:21","statements":[{"id":2666,"nodeType":"UncheckedBlock","src":"1068:545:21","statements":[{"assignments":[2629],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"length","nameLocation":"1100:6:21","nodeType":"VariableDeclaration","scope":2666,"src":"1092:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2636,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1120:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2630,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"1109:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5817,"src":"1109:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:21"},{"assignments":[2638],"declarations":[{"constant":false,"id":2638,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:21","nodeType":"VariableDeclaration","scope":2666,"src":"1144:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2637,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2643,"initialValue":{"arguments":[{"id":2641,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"1178:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2639,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:21"},{"assignments":[2645],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:21","nodeType":"VariableDeclaration","scope":2666,"src":"1199:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"nodeType":"VariableDeclarationStatement","src":"1199:11:21"},{"AST":{"nodeType":"YulBlock","src":"1249:67:21","statements":[{"nodeType":"YulAssignment","src":"1267:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:21"},"nodeType":"YulFunctionCall","src":"1286:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:21"},"nodeType":"YulFunctionCall","src":"1274:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2638,"isOffset":false,"isSlot":false,"src":"1278:6:21","valueSize":1},{"declaration":2629,"isOffset":false,"isSlot":false,"src":"1294:6:21","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"1267:3:21","valueSize":1}],"flags":["memory-safe"],"id":2647,"nodeType":"InlineAssembly","src":"1224:92:21"},{"body":{"id":2662,"nodeType":"Block","src":"1342:234:21","statements":[{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:21","subExpression":{"id":2649,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"1360:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ExpressionStatement","src":"1360:5:21"},{"AST":{"nodeType":"YulBlock","src":"1408:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:21"},"nodeType":"YulFunctionCall","src":"1448:14:21"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:21"},"nodeType":"YulFunctionCall","src":"1443:32:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:21"},"nodeType":"YulFunctionCall","src":"1430:46:21"},"nodeType":"YulExpressionStatement","src":"1430:46:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":2604,"isOffset":false,"isSlot":false,"src":"1464:10:21","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"1438:3:21","valueSize":1},{"declaration":2623,"isOffset":false,"isSlot":false,"src":"1452:5:21","valueSize":1}],"flags":["memory-safe"],"id":2652,"nodeType":"InlineAssembly","src":"1383:111:21"},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1511:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2656,"nodeType":"ExpressionStatement","src":"1511:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"1544:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"nodeType":"IfStatement","src":"1540:21:21","trueBody":{"id":2660,"nodeType":"Break","src":"1556:5:21"}}]},"condition":{"hexValue":"74727565","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2663,"nodeType":"WhileStatement","src":"1329:247:21"},{"expression":{"id":2664,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"1596:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2627,"id":2665,"nodeType":"Return","src":"1589:13:21"}]}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"892:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:21","nodeType":"FunctionDefinition","parameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"1013:5:21","nodeType":"VariableDeclaration","scope":2668,"src":"1005:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:21"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2668,"src":"1043:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2625,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:21"},"scope":3790,"src":"987:632:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"1795:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1826:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:21","trueExpression":{"hexValue":"2d","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"1872:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2686,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"1857:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7954_$","typeString":"type(library SignedMath)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7953,"src":"1857:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2685,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"1848:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2676,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:21","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2675,"id":2692,"nodeType":"Return","src":"1805:75:21"}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"1625:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:21","nodeType":"FunctionDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"value","nameLocation":"1750:5:21","nodeType":"VariableDeclaration","scope":2694,"src":"1743:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2670,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:21"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2694,"src":"1780:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2673,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:21"},"scope":3790,"src":"1719:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"2066:100:21","statements":[{"id":2712,"nodeType":"UncheckedBlock","src":"2076:84:21","statements":[{"expression":{"arguments":[{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2119:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"2138:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2704,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"2126:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5988,"src":"2126:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2702,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2714,2797,2817],"referencedDeclaration":2797,"src":"2107:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2701,"id":2711,"nodeType":"Return","src":"2100:49:21"}]}]},"documentation":{"id":2695,"nodeType":"StructuredDocumentation","src":"1893:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:21","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2697,"mutability":"mutable","name":"value","nameLocation":"2021:5:21","nodeType":"VariableDeclaration","scope":2714,"src":"2013:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:21"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"2051:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:21"},"scope":3790,"src":"1992:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"2379:435:21","statements":[{"assignments":[2725],"declarations":[{"constant":false,"id":2725,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:21","nodeType":"VariableDeclaration","scope":2796,"src":"2389:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2727,"initialValue":{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2410:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:21"},{"assignments":[2729],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:21","nodeType":"VariableDeclaration","scope":2796,"src":"2425:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2728,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2738,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2733,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2461:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2730,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:21"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2739,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2482:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2741,"indexExpression":{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2744,"nodeType":"ExpressionStatement","src":"2482:15:21"},{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2745,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2507:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2747,"indexExpression":{"hexValue":"31","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2750,"nodeType":"ExpressionStatement","src":"2507:15:21"},{"body":{"id":2779,"nodeType":"Block","src":"2577:95:21","statements":[{"expression":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2765,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2591:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2767,"indexExpression":{"id":2766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2598:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2768,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2603:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2772,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2769,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"2614:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2774,"nodeType":"ExpressionStatement","src":"2591:40:21"},{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2775,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"2645:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2778,"nodeType":"ExpressionStatement","src":"2645:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2565:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2780,"initializationExpression":{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"i","nameLocation":"2545:1:21","nodeType":"VariableDeclaration","scope":2780,"src":"2537:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2758,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2754,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2553:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:21"},"loopExpression":{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:21","subExpression":{"id":2762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"2574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"2572:3:21"},"nodeType":"ForStatement","src":"2532:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"2685:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2790,"nodeType":"IfStatement","src":"2681:96:21","trueBody":{"id":2789,"nodeType":"Block","src":"2702:75:21","statements":[{"errorCall":{"arguments":[{"id":2785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"2752:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2786,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2759:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2784,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"2723:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"RevertStatement","src":"2716:50:21"}]}},{"expression":{"arguments":[{"id":2793,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"2800:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2791,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:21","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2723,"id":2795,"nodeType":"Return","src":"2786:21:21"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"2172:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:21","nodeType":"FunctionDefinition","parameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"value","nameLocation":"2318:5:21","nodeType":"VariableDeclaration","scope":2797,"src":"2310:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"length","nameLocation":"2333:6:21","nodeType":"VariableDeclaration","scope":2797,"src":"2325:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:21"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"2364:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2721,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:21"},"scope":3790,"src":"2289:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"3046:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2810,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"3091:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2808,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:21","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:21","typeDescriptions":{}}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2813,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3099:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2805,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2714,2797,2817],"referencedDeclaration":2797,"src":"3063:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2804,"id":2815,"nodeType":"Return","src":"3056:58:21"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"2820:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:21","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"addr","nameLocation":"3002:4:21","nodeType":"VariableDeclaration","scope":2817,"src":"2994:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:21"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"3031:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2802,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:21"},"scope":3790,"src":"2973:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"3378:642:21","statements":[{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:21","nodeType":"VariableDeclaration","scope":2881,"src":"3388:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2825,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2833,"initialValue":{"arguments":[{"arguments":[{"id":2830,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"3428:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2829,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2714,2797,2817],"referencedDeclaration":2817,"src":"3416:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2827,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:21","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:21"},{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:21","nodeType":"VariableDeclaration","scope":2881,"src":"3519:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2836,"nodeType":"VariableDeclarationStatement","src":"3519:17:21"},{"AST":{"nodeType":"YulBlock","src":"3571:78:21","statements":[{"nodeType":"YulAssignment","src":"3585:54:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:21","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:21"},"nodeType":"YulFunctionCall","src":"3616:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:21","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:21"},"nodeType":"YulFunctionCall","src":"3606:32:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:21"},"nodeType":"YulFunctionCall","src":"3598:41:21"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2826,"isOffset":false,"isSlot":false,"src":"3620:6:21","valueSize":1},{"declaration":2835,"isOffset":false,"isSlot":false,"src":"3585:9:21","valueSize":1}],"flags":["memory-safe"],"id":2837,"nodeType":"InlineAssembly","src":"3546:103:21"},{"body":{"id":2874,"nodeType":"Block","src":"3692:291:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2848,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"3798:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2855,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3827:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2857,"indexExpression":{"id":2856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2853,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:21","typeDescriptions":{}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2869,"nodeType":"IfStatement","src":"3794:150:21","trueBody":{"id":2868,"nodeType":"Block","src":"3844:100:21","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2862,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"3912:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2864,"indexExpression":{"id":2863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3919:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2867,"nodeType":"ExpressionStatement","src":"3912:17:21"}]}},{"expression":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2870,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"3957:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2873,"nodeType":"ExpressionStatement","src":"3957:15:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3680:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2875,"initializationExpression":{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"i","nameLocation":"3672:1:21","nodeType":"VariableDeclaration","scope":2875,"src":"3664:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2841,"initialValue":{"hexValue":"3431","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:21","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:21"},"loopExpression":{"expression":{"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:21","subExpression":{"id":2845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3689:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2847,"nodeType":"ExpressionStatement","src":"3687:3:21"},"nodeType":"ForStatement","src":"3659:324:21"},{"expression":{"arguments":[{"id":2878,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"4006:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2876,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:21","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2824,"id":2880,"nodeType":"Return","src":"3992:21:21"}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"3127:165:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:21","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"addr","nameLocation":"3334:4:21","nodeType":"VariableDeclaration","scope":2882,"src":"3326:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:21"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"3363:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2822,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:21"},"scope":3790,"src":"3297:723:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2918,"nodeType":"Block","src":"4175:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"4198:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2892,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:21","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:21","memberName":"length","nodeType":"MemberAccess","src":"4192:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4217:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2897,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:21","typeDescriptions":{}}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:21","memberName":"length","nodeType":"MemberAccess","src":"4211:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"4246:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2904,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:21","typeDescriptions":{}}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2903,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4269:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:21","typeDescriptions":{}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2909,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2891,"id":2917,"nodeType":"Return","src":"4185:87:21"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"4026:66:21","text":" @dev Returns true if the two strings are equal."},"id":2919,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:21","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"a","nameLocation":"4126:1:21","nodeType":"VariableDeclaration","scope":2919,"src":"4112:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2884,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"b","nameLocation":"4143:1:21","nodeType":"VariableDeclaration","scope":2919,"src":"4129:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2886,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:21"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"4169:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2889,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:21"},"scope":3790,"src":"4097:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2937,"nodeType":"Block","src":"4576:64:21","statements":[{"expression":{"arguments":[{"id":2928,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4603:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4619:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:21","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:21","memberName":"length","nodeType":"MemberAccess","src":"4613:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2927,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2938,2969],"referencedDeclaration":2969,"src":"4593:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2926,"id":2936,"nodeType":"Return","src":"4586:47:21"}]},"documentation":{"id":2920,"nodeType":"StructuredDocumentation","src":"4285:214:21","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:21","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"input","nameLocation":"4537:5:21","nodeType":"VariableDeclaration","scope":2938,"src":"4523:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2921,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:21"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"4567:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:21"},"scope":3790,"src":"4504:136:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2968,"nodeType":"Block","src":"5038:153:21","statements":[{"assignments":[2951,2953],"declarations":[{"constant":false,"id":2951,"mutability":"mutable","name":"success","nameLocation":"5054:7:21","nodeType":"VariableDeclaration","scope":2968,"src":"5049:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2950,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"value","nameLocation":"5071:5:21","nodeType":"VariableDeclaration","scope":2968,"src":"5063:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2959,"initialValue":{"arguments":[{"id":2955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"5093:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2956,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"5100:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"5107:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2990,3027],"referencedDeclaration":3027,"src":"5080:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:21"},{"condition":{"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:21","subExpression":{"id":2960,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"5126:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2965,"nodeType":"IfStatement","src":"5121:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2962,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"5142:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2964,"nodeType":"RevertStatement","src":"5135:27:21"}},{"expression":{"id":2966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"5179:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2949,"id":2967,"nodeType":"Return","src":"5172:12:21"}]},"documentation":{"id":2939,"nodeType":"StructuredDocumentation","src":"4646:287:21","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2969,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:21","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"input","nameLocation":"4971:5:21","nodeType":"VariableDeclaration","scope":2969,"src":"4957:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2940,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"begin","nameLocation":"4986:5:21","nodeType":"VariableDeclaration","scope":2969,"src":"4978:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2945,"mutability":"mutable","name":"end","nameLocation":"5001:3:21","nodeType":"VariableDeclaration","scope":2969,"src":"4993:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:21"},"returnParameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2969,"src":"5029:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:21"},"scope":3790,"src":"4938:253:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"5512:83:21","statements":[{"expression":{"arguments":[{"id":2980,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5558:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2984,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5574:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2982,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:21","typeDescriptions":{}}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:21","memberName":"length","nodeType":"MemberAccess","src":"5568:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2979,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"5529:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2978,"id":2988,"nodeType":"Return","src":"5522:66:21"}]},"documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"5197:215:21","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:21","nodeType":"FunctionDefinition","parameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"input","nameLocation":"5453:5:21","nodeType":"VariableDeclaration","scope":2990,"src":"5439:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2971,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:21"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"success","nameLocation":"5488:7:21","nodeType":"VariableDeclaration","scope":2990,"src":"5483:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2974,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"value","nameLocation":"5505:5:21","nodeType":"VariableDeclaration","scope":2990,"src":"5497:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2976,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:21"},"scope":3790,"src":"5417:178:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"5997:144:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6011:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"6023:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3005,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:21","typeDescriptions":{}}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:21","memberName":"length","nodeType":"MemberAccess","src":"6017:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"6040:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3012,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6048:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3019,"nodeType":"IfStatement","src":"6007:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3003,"id":3018,"nodeType":"Return","src":"6053:17:21"}},{"expression":{"arguments":[{"id":3021,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"6116:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3022,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"6123:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3023,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"6130:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3020,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"6087:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3003,"id":3025,"nodeType":"Return","src":"6080:54:21"}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"5601:238:21","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:21","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"input","nameLocation":"5889:5:21","nodeType":"VariableDeclaration","scope":3027,"src":"5875:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2992,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"begin","nameLocation":"5912:5:21","nodeType":"VariableDeclaration","scope":3027,"src":"5904:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"end","nameLocation":"5935:3:21","nodeType":"VariableDeclaration","scope":3027,"src":"5927:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:21"},"returnParameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"success","nameLocation":"5973:7:21","nodeType":"VariableDeclaration","scope":3027,"src":"5968:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2999,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"value","nameLocation":"5990:5:21","nodeType":"VariableDeclaration","scope":3027,"src":"5982:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:21"},"scope":3790,"src":"5844:297:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3096,"nodeType":"Block","src":"6521:347:21","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:21","nodeType":"VariableDeclaration","scope":3096,"src":"6531:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3047,"initialValue":{"arguments":[{"id":3045,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"6559:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3043,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:21","typeDescriptions":{}}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:21"},{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"result","nameLocation":"6584:6:21","nodeType":"VariableDeclaration","scope":3096,"src":"6576:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3051,"initialValue":{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:21"},{"body":{"id":3090,"nodeType":"Block","src":"6642:189:21","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"chr","nameLocation":"6662:3:21","nodeType":"VariableDeclaration","scope":3090,"src":"6656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3062,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3073,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3068,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"6711:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3067,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"6688:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3065,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:21","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3064,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"6668:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"6741:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:21","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"6737:30:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3040,"id":3080,"nodeType":"Return","src":"6750:17:21"}},{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6781:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"nodeType":"ExpressionStatement","src":"6781:12:21"},{"expression":{"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6807:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3087,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"6817:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3089,"nodeType":"ExpressionStatement","src":"6807:13:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3057,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"6632:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3091,"initializationExpression":{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"i","nameLocation":"6617:1:21","nodeType":"VariableDeclaration","scope":3091,"src":"6609:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"id":3054,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"6621:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:21"},"loopExpression":{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:21","subExpression":{"id":3059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"6639:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"6637:3:21"},"nodeType":"ForStatement","src":"6604:227:21"},{"expression":{"components":[{"hexValue":"74727565","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6854:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3040,"id":3095,"nodeType":"Return","src":"6840:21:21"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"6147:201:21","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:21","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"input","nameLocation":"6414:5:21","nodeType":"VariableDeclaration","scope":3097,"src":"6400:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"begin","nameLocation":"6437:5:21","nodeType":"VariableDeclaration","scope":3097,"src":"6429:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"end","nameLocation":"6460:3:21","nodeType":"VariableDeclaration","scope":3097,"src":"6452:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:21"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"success","nameLocation":"6497:7:21","nodeType":"VariableDeclaration","scope":3097,"src":"6492:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"value","nameLocation":"6514:5:21","nodeType":"VariableDeclaration","scope":3097,"src":"6506:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:21"},"scope":3790,"src":"6353:515:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3115,"nodeType":"Block","src":"7165:63:21","statements":[{"expression":{"arguments":[{"id":3106,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"7191:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3110,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"7207:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3108,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:21","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:21","memberName":"length","nodeType":"MemberAccess","src":"7201:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3105,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3116,3147],"referencedDeclaration":3147,"src":"7182:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3104,"id":3114,"nodeType":"Return","src":"7175:46:21"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"6874:216:21","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:21","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"input","nameLocation":"7127:5:21","nodeType":"VariableDeclaration","scope":3116,"src":"7113:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3099,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:21"},"returnParameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"7157:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3102,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:21"},"scope":3790,"src":"7095:133:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3146,"nodeType":"Block","src":"7633:151:21","statements":[{"assignments":[3129,3131],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"success","nameLocation":"7649:7:21","nodeType":"VariableDeclaration","scope":3146,"src":"7644:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"value","nameLocation":"7665:5:21","nodeType":"VariableDeclaration","scope":3146,"src":"7658:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3130,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3137,"initialValue":{"arguments":[{"id":3133,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"7686:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3134,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"7693:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3135,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"7700:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3132,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3168,3210],"referencedDeclaration":3210,"src":"7674:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:21"},{"condition":{"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:21","subExpression":{"id":3138,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"7719:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"7714:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3140,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"7735:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3142,"nodeType":"RevertStatement","src":"7728:27:21"}},{"expression":{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"7772:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3127,"id":3145,"nodeType":"Return","src":"7765:12:21"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"7234:296:21","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3147,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:21","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"input","nameLocation":"7567:5:21","nodeType":"VariableDeclaration","scope":3147,"src":"7553:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3118,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"begin","nameLocation":"7582:5:21","nodeType":"VariableDeclaration","scope":3147,"src":"7574:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"end","nameLocation":"7597:3:21","nodeType":"VariableDeclaration","scope":3147,"src":"7589:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:21"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3147,"src":"7625:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3125,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:21"},"scope":3790,"src":"7535:249:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3167,"nodeType":"Block","src":"8175:82:21","statements":[{"expression":{"arguments":[{"id":3158,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"8220:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3162,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"8236:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3160,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:21","typeDescriptions":{}}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:21","memberName":"length","nodeType":"MemberAccess","src":"8230:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3157,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"8192:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3156,"id":3166,"nodeType":"Return","src":"8185:65:21"}]},"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"7790:287:21","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3168,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:21","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"input","nameLocation":"8117:5:21","nodeType":"VariableDeclaration","scope":3168,"src":"8103:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3149,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:21"},"returnParameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"success","nameLocation":"8152:7:21","nodeType":"VariableDeclaration","scope":3168,"src":"8147:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3152,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"value","nameLocation":"8168:5:21","nodeType":"VariableDeclaration","scope":3168,"src":"8161:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3154,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:21"},"scope":3790,"src":"8082:175:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3173,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:21","nodeType":"VariableDeclaration","scope":3790,"src":"8263:50:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:21","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3209,"nodeType":"Block","src":"8779:143:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3187,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"8793:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3190,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"8805:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:21","typeDescriptions":{}}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:21","memberName":"length","nodeType":"MemberAccess","src":"8799:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"8822:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3195,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"8830:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3202,"nodeType":"IfStatement","src":"8789:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3186,"id":3201,"nodeType":"Return","src":"8835:17:21"}},{"expression":{"arguments":[{"id":3204,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"8897:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3205,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"8904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3206,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"8911:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3203,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"8869:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3186,"id":3208,"nodeType":"Return","src":"8862:53:21"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"8320:303:21","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3210,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:21","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"input","nameLocation":"8672:5:21","nodeType":"VariableDeclaration","scope":3210,"src":"8658:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3175,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"begin","nameLocation":"8695:5:21","nodeType":"VariableDeclaration","scope":3210,"src":"8687:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"end","nameLocation":"8718:3:21","nodeType":"VariableDeclaration","scope":3210,"src":"8710:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:21"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"success","nameLocation":"8756:7:21","nodeType":"VariableDeclaration","scope":3210,"src":"8751:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3182,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"value","nameLocation":"8772:5:21","nodeType":"VariableDeclaration","scope":3210,"src":"8765:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3184,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:21"},"scope":3790,"src":"8628:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3330,"nodeType":"Block","src":"9299:812:21","statements":[{"assignments":[3225],"declarations":[{"constant":false,"id":3225,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:21","nodeType":"VariableDeclaration","scope":3330,"src":"9309:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3224,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3230,"initialValue":{"arguments":[{"id":3228,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9337:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3226,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:21","typeDescriptions":{}}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:21"},{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"sign","nameLocation":"9407:4:21","nodeType":"VariableDeclaration","scope":3330,"src":"9400:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3231,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3248,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"9414:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3234,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3243,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"9471:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3244,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"9479:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"9448:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3240,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:21","typeDescriptions":{}}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:21","trueExpression":{"arguments":[{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3236,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:21","typeDescriptions":{}}},"id":3239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:21"},{"assignments":[3250],"declarations":[{"constant":false,"id":3250,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:21","nodeType":"VariableDeclaration","scope":3330,"src":"9567:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3249,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3257,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"9587:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3252,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:21","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:21"},{"assignments":[3259],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:21","nodeType":"VariableDeclaration","scope":3330,"src":"9616:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3258,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3266,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"9636:4:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3261,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:21","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:21"},{"assignments":[3268],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"offset","nameLocation":"9673:6:21","nodeType":"VariableDeclaration","scope":3330,"src":"9665:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"9683:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3270,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"9699:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"9682:37:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:21"},{"assignments":[3277,3279],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:21","nodeType":"VariableDeclaration","scope":3330,"src":"9733:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3276,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:21","nodeType":"VariableDeclaration","scope":3330,"src":"9750:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3287,"initialValue":{"arguments":[{"id":3281,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"9783:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"9790:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3283,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"9798:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3285,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"9806:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2990,3027],"referencedDeclaration":3027,"src":"9770:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9825:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"9839:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3290,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"9850:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9967:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3309,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"9981:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"9997:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3312,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"10009:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3223,"id":3327,"nodeType":"Return","src":"10087:17:21"},"id":3328,"nodeType":"IfStatement","src":"9963:141:21","trueBody":{"id":3323,"nodeType":"Block","src":"10025:56:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3317,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:21","memberName":"min","nodeType":"MemberAccess","src":"10053:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3223,"id":3322,"nodeType":"Return","src":"10039:31:21"}]}},"id":3329,"nodeType":"IfStatement","src":"9821:283:21","trueBody":{"id":3307,"nodeType":"Block","src":"9866:91:21","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3294,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"9894:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3302,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"9936:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3300,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:21","typeDescriptions":{}}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:21","trueExpression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:21","subExpression":{"arguments":[{"id":3297,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"9917:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3295,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:21","typeDescriptions":{}}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3223,"id":3306,"nodeType":"Return","src":"9880:66:21"}]}}]},"documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"8928:200:21","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:21","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"input","nameLocation":"9193:5:21","nodeType":"VariableDeclaration","scope":3331,"src":"9179:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3212,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"begin","nameLocation":"9216:5:21","nodeType":"VariableDeclaration","scope":3331,"src":"9208:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"end","nameLocation":"9239:3:21","nodeType":"VariableDeclaration","scope":3331,"src":"9231:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:21"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"success","nameLocation":"9276:7:21","nodeType":"VariableDeclaration","scope":3331,"src":"9271:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3219,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"9292:5:21","nodeType":"VariableDeclaration","scope":3331,"src":"9285:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3221,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:21"},"scope":3790,"src":"9133:978:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3349,"nodeType":"Block","src":"10456:67:21","statements":[{"expression":{"arguments":[{"id":3340,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"10486:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3344,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"10502:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3342,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:21","typeDescriptions":{}}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:21","memberName":"length","nodeType":"MemberAccess","src":"10496:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3339,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3350,3381],"referencedDeclaration":3381,"src":"10473:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3338,"id":3348,"nodeType":"Return","src":"10466:50:21"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"10117:259:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3350,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:21","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"input","nameLocation":"10417:5:21","nodeType":"VariableDeclaration","scope":3350,"src":"10403:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3333,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:21"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3350,"src":"10447:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:21"},"scope":3790,"src":"10381:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3380,"nodeType":"Block","src":"10937:156:21","statements":[{"assignments":[3363,3365],"declarations":[{"constant":false,"id":3363,"mutability":"mutable","name":"success","nameLocation":"10953:7:21","nodeType":"VariableDeclaration","scope":3380,"src":"10948:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3362,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"value","nameLocation":"10970:5:21","nodeType":"VariableDeclaration","scope":3380,"src":"10962:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"arguments":[{"id":3367,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"10995:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3368,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"11002:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3369,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"11009:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3366,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3402,3439],"referencedDeclaration":3439,"src":"10979:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:21"},{"condition":{"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:21","subExpression":{"id":3372,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"11028:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3377,"nodeType":"IfStatement","src":"11023:41:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3374,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"11044:18:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3376,"nodeType":"RevertStatement","src":"11037:27:21"}},{"expression":{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"11081:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3361,"id":3379,"nodeType":"Return","src":"11074:12:21"}]},"documentation":{"id":3351,"nodeType":"StructuredDocumentation","src":"10529:300:21","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3381,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:21","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3353,"mutability":"mutable","name":"input","nameLocation":"10870:5:21","nodeType":"VariableDeclaration","scope":3381,"src":"10856:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3352,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"begin","nameLocation":"10885:5:21","nodeType":"VariableDeclaration","scope":3381,"src":"10877:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"end","nameLocation":"10900:3:21","nodeType":"VariableDeclaration","scope":3381,"src":"10892:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:21"},"returnParameters":{"id":3361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3381,"src":"10928:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:21"},"scope":3790,"src":"10834:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"11420:86:21","statements":[{"expression":{"arguments":[{"id":3392,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"11469:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3396,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"11485:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3394,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:21","typeDescriptions":{}}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:21","memberName":"length","nodeType":"MemberAccess","src":"11479:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3391,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"11437:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3390,"id":3400,"nodeType":"Return","src":"11430:69:21"}]},"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"11099:218:21","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:21","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"input","nameLocation":"11361:5:21","nodeType":"VariableDeclaration","scope":3402,"src":"11347:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3383,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:21"},"returnParameters":{"id":3390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"success","nameLocation":"11396:7:21","nodeType":"VariableDeclaration","scope":3402,"src":"11391:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3386,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"value","nameLocation":"11413:5:21","nodeType":"VariableDeclaration","scope":3402,"src":"11405:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:21"},"scope":3790,"src":"11322:184:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"11914:147:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"11928:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3419,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"11940:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3417,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:21","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:21","memberName":"length","nodeType":"MemberAccess","src":"11934:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"11957:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3424,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"11965:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"11924:63:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3415,"id":3430,"nodeType":"Return","src":"11970:17:21"}},{"expression":{"arguments":[{"id":3433,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"12036:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3434,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"12043:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"12050:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3432,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"12004:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3415,"id":3437,"nodeType":"Return","src":"11997:57:21"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"11512:241:21","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:21","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"input","nameLocation":"11806:5:21","nodeType":"VariableDeclaration","scope":3439,"src":"11792:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3404,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"begin","nameLocation":"11829:5:21","nodeType":"VariableDeclaration","scope":3439,"src":"11821:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"end","nameLocation":"11852:3:21","nodeType":"VariableDeclaration","scope":3439,"src":"11844:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:21"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"success","nameLocation":"11890:7:21","nodeType":"VariableDeclaration","scope":3439,"src":"11885:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3411,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"value","nameLocation":"11907:5:21","nodeType":"VariableDeclaration","scope":3439,"src":"11899:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:21"},"scope":3790,"src":"11758:303:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"12447:880:21","statements":[{"assignments":[3454],"declarations":[{"constant":false,"id":3454,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:21","nodeType":"VariableDeclaration","scope":3541,"src":"12457:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3453,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3459,"initialValue":{"arguments":[{"id":3457,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"12485:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:21","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:21"},{"assignments":[3461],"declarations":[{"constant":false,"id":3461,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:21","nodeType":"VariableDeclaration","scope":3541,"src":"12539:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3460,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3481,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3462,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"12557:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12563:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3471,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"12607:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12615:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12584:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3468,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:21","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3475,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:21","typeDescriptions":{}}},"id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:21"},{"assignments":[3483],"declarations":[{"constant":false,"id":3483,"mutability":"mutable","name":"offset","nameLocation":"12727:6:21","nodeType":"VariableDeclaration","scope":3541,"src":"12719:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3489,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3484,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"12736:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"12736:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:21"},{"assignments":[3491],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"result","nameLocation":"12777:6:21","nodeType":"VariableDeclaration","scope":3541,"src":"12769:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3493,"initialValue":{"hexValue":"30","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:21"},{"body":{"id":3535,"nodeType":"Block","src":"12844:446:21","statements":[{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"chr","nameLocation":"12864:3:21","nodeType":"VariableDeclaration","scope":3535,"src":"12858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3506,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3517,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3512,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"12913:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"12921:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3511,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12890:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3509,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:21","typeDescriptions":{}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3508,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"12870:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3518,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"12943:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"12939:31:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3452,"id":3524,"nodeType":"Return","src":"12953:17:21"}},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"12984:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3529,"nodeType":"ExpressionStatement","src":"12984:12:21"},{"id":3534,"nodeType":"UncheckedBlock","src":"13010:270:21","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"13252:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3531,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"13262:3:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"13252:13:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"12830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3501,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"12834:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3536,"initializationExpression":{"assignments":[3495],"declarations":[{"constant":false,"id":3495,"mutability":"mutable","name":"i","nameLocation":"12810:1:21","nodeType":"VariableDeclaration","scope":3536,"src":"12802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3499,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"12814:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3497,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"12822:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:21"},"loopExpression":{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:21","subExpression":{"id":3503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"12841:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3505,"nodeType":"ExpressionStatement","src":"12839:3:21"},"nodeType":"ForStatement","src":"12797:493:21"},{"expression":{"components":[{"hexValue":"74727565","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"13313:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3452,"id":3540,"nodeType":"Return","src":"13299:21:21"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"12067:204:21","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:21","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"input","nameLocation":"12340:5:21","nodeType":"VariableDeclaration","scope":3542,"src":"12326:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3441,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"begin","nameLocation":"12363:5:21","nodeType":"VariableDeclaration","scope":3542,"src":"12355:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"end","nameLocation":"12386:3:21","nodeType":"VariableDeclaration","scope":3542,"src":"12378:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:21"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"success","nameLocation":"12423:7:21","nodeType":"VariableDeclaration","scope":3542,"src":"12418:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3448,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3451,"mutability":"mutable","name":"value","nameLocation":"12440:5:21","nodeType":"VariableDeclaration","scope":3542,"src":"12432:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:21"},"scope":3790,"src":"12276:1051:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3560,"nodeType":"Block","src":"13625:67:21","statements":[{"expression":{"arguments":[{"id":3551,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"13655:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3555,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"13671:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3553,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:21","typeDescriptions":{}}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:21","memberName":"length","nodeType":"MemberAccess","src":"13665:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3561,3592],"referencedDeclaration":3592,"src":"13642:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3549,"id":3559,"nodeType":"Return","src":"13635:50:21"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"13333:212:21","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:21","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"input","nameLocation":"13586:5:21","nodeType":"VariableDeclaration","scope":3561,"src":"13572:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3544,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:21"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3561,"src":"13616:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:21"},"scope":3790,"src":"13550:142:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"14058:165:21","statements":[{"assignments":[3574,3576],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"success","nameLocation":"14074:7:21","nodeType":"VariableDeclaration","scope":3591,"src":"14069:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3573,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3576,"mutability":"mutable","name":"value","nameLocation":"14091:5:21","nodeType":"VariableDeclaration","scope":3591,"src":"14083:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3575,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3582,"initialValue":{"arguments":[{"id":3578,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"14116:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3579,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"14123:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3580,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14130:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3577,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3613,3717],"referencedDeclaration":3717,"src":"14100:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:21"},{"condition":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:21","subExpression":{"id":3583,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"14149:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3588,"nodeType":"IfStatement","src":"14144:50:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3585,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"14165:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3587,"nodeType":"RevertStatement","src":"14158:36:21"}},{"expression":{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"14211:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3572,"id":3590,"nodeType":"Return","src":"14204:12:21"}]},"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"13698:252:21","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:21","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"input","nameLocation":"13991:5:21","nodeType":"VariableDeclaration","scope":3592,"src":"13977:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3563,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"begin","nameLocation":"14006:5:21","nodeType":"VariableDeclaration","scope":3592,"src":"13998:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"end","nameLocation":"14021:3:21","nodeType":"VariableDeclaration","scope":3592,"src":"14013:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:21"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"14049:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3570,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:21"},"scope":3790,"src":"13955:268:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"14523:70:21","statements":[{"expression":{"arguments":[{"id":3603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"14556:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"14572:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3605,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:21","typeDescriptions":{}}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:21","memberName":"length","nodeType":"MemberAccess","src":"14566:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3602,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3613,3717],"referencedDeclaration":3717,"src":"14540:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3601,"id":3611,"nodeType":"Return","src":"14533:53:21"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"14229:191:21","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:21","nodeType":"FunctionDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"input","nameLocation":"14464:5:21","nodeType":"VariableDeclaration","scope":3613,"src":"14450:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3594,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:21"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"success","nameLocation":"14499:7:21","nodeType":"VariableDeclaration","scope":3613,"src":"14494:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3597,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"value","nameLocation":"14516:5:21","nodeType":"VariableDeclaration","scope":3613,"src":"14508:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:21"},"scope":3790,"src":"14425:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"14963:733:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"14977:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"14989:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3628,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:21","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:21","memberName":"length","nodeType":"MemberAccess","src":"14983:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3634,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"15006:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3635,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"15014:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"14973:72:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:21","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3626,"id":3644,"nodeType":"Return","src":"15019:26:21"}},{"assignments":[3647],"declarations":[{"constant":false,"id":3647,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:21","nodeType":"VariableDeclaration","scope":3716,"src":"15056:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3646,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3670,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"15074:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"15080:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3659,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"15130:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3657,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:21","typeDescriptions":{}}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3661,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"15138:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3656,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"15101:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3654,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:21","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3664,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:21","typeDescriptions":{}}},"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:21"},{"assignments":[3672],"declarations":[{"constant":false,"id":3672,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:21","nodeType":"VariableDeclaration","scope":3716,"src":"15242:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:21","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3674,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3647,"src":"15272:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"15272:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"15359:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3682,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"15365:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3684,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"15374:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3714,"nodeType":"Block","src":"15639:51:21","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3708,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:21","typeDescriptions":{}}},"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3626,"id":3713,"nodeType":"Return","src":"15653:26:21"}]},"id":3715,"nodeType":"IfStatement","src":"15355:335:21","trueBody":{"id":3706,"nodeType":"Block","src":"15390:243:21","statements":[{"assignments":[3687,3689],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"s","nameLocation":"15511:1:21","nodeType":"VariableDeclaration","scope":3706,"src":"15506:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3686,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"v","nameLocation":"15522:1:21","nodeType":"VariableDeclaration","scope":3706,"src":"15514:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"arguments":[{"id":3691,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"15559:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3692,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"15566:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3693,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"15573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"15527:31:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:21"},{"expression":{"components":[{"id":3696,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"15599:1:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3701,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"15618:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3699,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:21","typeDescriptions":{}}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3697,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:21","typeDescriptions":{}}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3626,"id":3705,"nodeType":"Return","src":"15591:31:21"}]}}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"14599:203:21","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:21","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"input","nameLocation":"14855:5:21","nodeType":"VariableDeclaration","scope":3717,"src":"14841:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3615,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"begin","nameLocation":"14878:5:21","nodeType":"VariableDeclaration","scope":3717,"src":"14870:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"end","nameLocation":"14901:3:21","nodeType":"VariableDeclaration","scope":3717,"src":"14893:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:21"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"success","nameLocation":"14939:7:21","nodeType":"VariableDeclaration","scope":3717,"src":"14934:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3622,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"value","nameLocation":"14956:5:21","nodeType":"VariableDeclaration","scope":3717,"src":"14948:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:21"},"scope":3790,"src":"14807:889:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3776,"nodeType":"Block","src":"15765:461:21","statements":[{"assignments":[3725],"declarations":[{"constant":false,"id":3725,"mutability":"mutable","name":"value","nameLocation":"15781:5:21","nodeType":"VariableDeclaration","scope":3776,"src":"15775:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3724,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"id":3728,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"15795:3:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3726,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:21","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:21"},{"id":3773,"nodeType":"UncheckedBlock","src":"15959:238:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"15987:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:21","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16001:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:21","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16047:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:21","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16061:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:21","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16108:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:21","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3765,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:21","memberName":"max","nodeType":"MemberAccess","src":"16171:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3723,"id":3769,"nodeType":"Return","src":"16164:22:21"},"id":3770,"nodeType":"IfStatement","src":"16104:82:21","trueBody":{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16134:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:21","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3763,"nodeType":"ExpressionStatement","src":"16134:11:21"}},"id":3771,"nodeType":"IfStatement","src":"16043:143:21","trueBody":{"expression":{"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16074:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:21","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3752,"nodeType":"ExpressionStatement","src":"16074:11:21"}},"id":3772,"nodeType":"IfStatement","src":"15983:203:21","trueBody":{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16013:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:21","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3741,"nodeType":"ExpressionStatement","src":"16013:11:21"}}]},{"expression":{"id":3774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16214:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3723,"id":3775,"nodeType":"Return","src":"16207:12:21"}]},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:21","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"chr","nameLocation":"15731:3:21","nodeType":"VariableDeclaration","scope":3777,"src":"15724:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3718,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:21"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3777,"src":"15758:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3721,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:21"},"scope":3790,"src":"15702:524:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3788,"nodeType":"Block","src":"16611:225:21","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:21","statements":[{"nodeType":"YulAssignment","src":"16774:46:21","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:21","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:21"},"nodeType":"YulFunctionCall","src":"16801:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:21"},"nodeType":"YulFunctionCall","src":"16789:30:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:21"},"nodeType":"YulFunctionCall","src":"16783:37:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3780,"isOffset":false,"isSlot":false,"src":"16793:6:21","valueSize":1},{"declaration":3782,"isOffset":false,"isSlot":false,"src":"16811:6:21","valueSize":1},{"declaration":3785,"isOffset":false,"isSlot":false,"src":"16774:5:21","valueSize":1}],"flags":["memory-safe"],"id":3787,"nodeType":"InlineAssembly","src":"16735:95:21"}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"16232:268:21","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:21","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:21","nodeType":"VariableDeclaration","scope":3789,"src":"16537:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3779,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3782,"mutability":"mutable","name":"offset","nameLocation":"16566:6:21","nodeType":"VariableDeclaration","scope":3789,"src":"16558:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:21"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"value","nameLocation":"16604:5:21","nodeType":"VariableDeclaration","scope":3789,"src":"16596:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:21"},"scope":3790,"src":"16505:331:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3791,"src":"297:16541:21","usedErrors":[2614,2617,2620],"usedEvents":[]}],"src":"101:16738:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4138]},"id":4139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3792,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"138:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4138,"linearizedBaseContracts":[4138],"name":"ECDSA","nameLocation":"352:5:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3798,"members":[{"id":3794,"name":"NoError","nameLocation":"392:7:22","nodeType":"EnumValue","src":"392:7:22"},{"id":3795,"name":"InvalidSignature","nameLocation":"409:16:22","nodeType":"EnumValue","src":"409:16:22"},{"id":3796,"name":"InvalidSignatureLength","nameLocation":"435:22:22","nodeType":"EnumValue","src":"435:22:22"},{"id":3797,"name":"InvalidSignatureS","nameLocation":"467:17:22","nodeType":"EnumValue","src":"467:17:22"}],"name":"RecoverError","nameLocation":"369:12:22","nodeType":"EnumDefinition","src":"364:126:22"},{"documentation":{"id":3799,"nodeType":"StructuredDocumentation","src":"496:63:22","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3801,"name":"ECDSAInvalidSignature","nameLocation":"570:21:22","nodeType":"ErrorDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[],"src":"591:2:22"},"src":"564:30:22"},{"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"600:60:22","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3806,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:22","nodeType":"ErrorDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"length","nameLocation":"707:6:22","nodeType":"VariableDeclaration","scope":3806,"src":"699:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:22"},"src":"665:50:22"},{"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"721:85:22","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3811,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:22","nodeType":"ErrorDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"s","nameLocation":"848:1:22","nodeType":"VariableDeclaration","scope":3811,"src":"840:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:22"},"src":"811:40:22"},{"body":{"id":3863,"nodeType":"Block","src":"2285:622:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3826,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2299:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:22","memberName":"length","nodeType":"MemberAccess","src":"2299:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3861,"nodeType":"Block","src":"2793:108:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3848,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:22","typeDescriptions":{}}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3852,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2827:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"2827:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3856,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"2872:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:22","memberName":"length","nodeType":"MemberAccess","src":"2872:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3854,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:22","typeDescriptions":{}}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3825,"id":3860,"nodeType":"Return","src":"2807:83:22"}]},"id":3862,"nodeType":"IfStatement","src":"2295:606:22","trueBody":{"id":3847,"nodeType":"Block","src":"2323:464:22","statements":[{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"r","nameLocation":"2345:1:22","nodeType":"VariableDeclaration","scope":3847,"src":"2337:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3832,"nodeType":"VariableDeclarationStatement","src":"2337:9:22"},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"s","nameLocation":"2368:1:22","nodeType":"VariableDeclaration","scope":3847,"src":"2360:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3835,"nodeType":"VariableDeclarationStatement","src":"2360:9:22"},{"assignments":[3837],"declarations":[{"constant":false,"id":3837,"mutability":"mutable","name":"v","nameLocation":"2389:1:22","nodeType":"VariableDeclaration","scope":3847,"src":"2383:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3836,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3838,"nodeType":"VariableDeclarationStatement","src":"2383:7:22"},{"AST":{"nodeType":"YulBlock","src":"2560:171:22","statements":[{"nodeType":"YulAssignment","src":"2578:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:22"},"nodeType":"YulFunctionCall","src":"2589:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:22"},"nodeType":"YulFunctionCall","src":"2583:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:22"}]},{"nodeType":"YulAssignment","src":"2627:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:22"},"nodeType":"YulFunctionCall","src":"2638:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:22"},"nodeType":"YulFunctionCall","src":"2632:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:22"}]},{"nodeType":"YulAssignment","src":"2676:41:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:22"},"nodeType":"YulFunctionCall","src":"2695:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:22"},"nodeType":"YulFunctionCall","src":"2689:27:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:22"},"nodeType":"YulFunctionCall","src":"2681:36:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3831,"isOffset":false,"isSlot":false,"src":"2578:1:22","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"2627:1:22","valueSize":1},{"declaration":3816,"isOffset":false,"isSlot":false,"src":"2593:9:22","valueSize":1},{"declaration":3816,"isOffset":false,"isSlot":false,"src":"2642:9:22","valueSize":1},{"declaration":3816,"isOffset":false,"isSlot":false,"src":"2699:9:22","valueSize":1},{"declaration":3837,"isOffset":false,"isSlot":false,"src":"2676:1:22","valueSize":1}],"flags":["memory-safe"],"id":3839,"nodeType":"InlineAssembly","src":"2535:196:22"},{"expression":{"arguments":[{"id":3841,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"2762:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3842,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"2768:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3843,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"2771:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3844,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"2774:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3840,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3864,3944,4052],"referencedDeclaration":4052,"src":"2751:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3825,"id":3846,"nodeType":"Return","src":"2744:32:22"}]}}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"857:1267:22","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:22","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"hash","nameLocation":"2166:4:22","nodeType":"VariableDeclaration","scope":3864,"src":"2158:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"signature","nameLocation":"2193:9:22","nodeType":"VariableDeclaration","scope":3864,"src":"2180:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:22"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:22","nodeType":"VariableDeclaration","scope":3864,"src":"2232:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3818,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"err","nameLocation":"2264:3:22","nodeType":"VariableDeclaration","scope":3864,"src":"2251:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3821,"nodeType":"UserDefinedTypeName","pathNode":{"id":3820,"name":"RecoverError","nameLocations":["2251:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"2251:12:22"},"referencedDeclaration":3798,"src":"2251:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:22","nodeType":"VariableDeclaration","scope":3864,"src":"2269:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:22"},"scope":4138,"src":"2129:778:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"3801:168:22","statements":[{"assignments":[3875,3878,3880],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:22","nodeType":"VariableDeclaration","scope":3893,"src":"3812:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"error","nameLocation":"3844:5:22","nodeType":"VariableDeclaration","scope":3893,"src":"3831:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3877,"nodeType":"UserDefinedTypeName","pathNode":{"id":3876,"name":"RecoverError","nameLocations":["3831:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"3831:12:22"},"referencedDeclaration":3798,"src":"3831:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:22","nodeType":"VariableDeclaration","scope":3893,"src":"3851:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3885,"initialValue":{"arguments":[{"id":3882,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"3882:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3883,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"3888:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3881,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3864,3944,4052],"referencedDeclaration":3864,"src":"3871:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:22"},{"expression":{"arguments":[{"id":3887,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"3920:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"id":3888,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"3927:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3886,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3908:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3798_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3890,"nodeType":"ExpressionStatement","src":"3908:28:22"},{"expression":{"id":3891,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"3953:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3873,"id":3892,"nodeType":"Return","src":"3946:16:22"}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"2913:796:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:22","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"hash","nameLocation":"3739:4:22","nodeType":"VariableDeclaration","scope":3894,"src":"3731:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"signature","nameLocation":"3758:9:22","nodeType":"VariableDeclaration","scope":3894,"src":"3745:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3868,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:22"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"3792:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3871,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:22"},"scope":4138,"src":"3714:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3943,"nodeType":"Block","src":"4348:342:22","statements":[{"id":3942,"nodeType":"UncheckedBlock","src":"4358:326:22","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"s","nameLocation":"4390:1:22","nodeType":"VariableDeclaration","scope":3942,"src":"4382:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3919,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"4394:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:22","typeDescriptions":{}}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:22"},{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"v","nameLocation":"4591:1:22","nodeType":"VariableDeclaration","scope":3942,"src":"4585:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3920,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3934,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3926,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"4610:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:22","typeDescriptions":{}}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3922,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:22","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:22"},{"expression":{"arguments":[{"id":3936,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4659:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3937,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"4665:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3938,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4668:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3939,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4671:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3935,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3864,3944,4052],"referencedDeclaration":4052,"src":"4648:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3910,"id":3941,"nodeType":"Return","src":"4641:32:22"}]}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"3975:205:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3944,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:22","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"hash","nameLocation":"4222:4:22","nodeType":"VariableDeclaration","scope":3944,"src":"4214:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"r","nameLocation":"4244:1:22","nodeType":"VariableDeclaration","scope":3944,"src":"4236:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"vs","nameLocation":"4263:2:22","nodeType":"VariableDeclaration","scope":3944,"src":"4255:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:22"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:22","nodeType":"VariableDeclaration","scope":3944,"src":"4295:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3903,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"err","nameLocation":"4327:3:22","nodeType":"VariableDeclaration","scope":3944,"src":"4314:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3906,"nodeType":"UserDefinedTypeName","pathNode":{"id":3905,"name":"RecoverError","nameLocations":["4314:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"4314:12:22"},"referencedDeclaration":3798,"src":"4314:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:22","nodeType":"VariableDeclaration","scope":3944,"src":"4332:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:22"},"scope":4138,"src":"4185:505:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3976,"nodeType":"Block","src":"4903:164:22","statements":[{"assignments":[3957,3960,3962],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:22","nodeType":"VariableDeclaration","scope":3976,"src":"4914:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"error","nameLocation":"4946:5:22","nodeType":"VariableDeclaration","scope":3976,"src":"4933:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3959,"nodeType":"UserDefinedTypeName","pathNode":{"id":3958,"name":"RecoverError","nameLocations":["4933:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"4933:12:22"},"referencedDeclaration":3798,"src":"4933:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3962,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:22","nodeType":"VariableDeclaration","scope":3976,"src":"4953:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3968,"initialValue":{"arguments":[{"id":3964,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"4984:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3965,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"4990:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3966,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"4993:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3963,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3864,3944,4052],"referencedDeclaration":3944,"src":"4973:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:22"},{"expression":{"arguments":[{"id":3970,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"5018:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"id":3971,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"5025:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3969,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"5006:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3798_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"ExpressionStatement","src":"5006:28:22"},{"expression":{"id":3974,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"5051:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3955,"id":3975,"nodeType":"Return","src":"5044:16:22"}]},"documentation":{"id":3945,"nodeType":"StructuredDocumentation","src":"4696:116:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:22","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"hash","nameLocation":"4842:4:22","nodeType":"VariableDeclaration","scope":3977,"src":"4834:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3949,"mutability":"mutable","name":"r","nameLocation":"4856:1:22","nodeType":"VariableDeclaration","scope":3977,"src":"4848:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"vs","nameLocation":"4867:2:22","nodeType":"VariableDeclaration","scope":3977,"src":"4859:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:22"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"4894:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:22"},"scope":4138,"src":"4817:250:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4051,"nodeType":"Block","src":"5382:1372:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3998,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"6278:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:22","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4012,"nodeType":"IfStatement","src":"6266:164:22","trueBody":{"id":4011,"nodeType":"Block","src":"6351:79:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:22","typeDescriptions":{}}},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4006,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6385:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"6385:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"id":4008,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"6417:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3995,"id":4010,"nodeType":"Return","src":"6365:54:22"}]}},{"assignments":[4014],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"signer","nameLocation":"6532:6:22","nodeType":"VariableDeclaration","scope":4051,"src":"6524:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4013,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4021,"initialValue":{"arguments":[{"id":4016,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"6551:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4017,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6557:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4018,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"6560:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4019,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"6563:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4015,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4022,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6579:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:22","typeDescriptions":{}}},"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4041,"nodeType":"IfStatement","src":"6575:113:22","trueBody":{"id":4040,"nodeType":"Block","src":"6601:87:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4028,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:22","typeDescriptions":{}}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4032,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6635:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"6635:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:22","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3995,"id":4039,"nodeType":"Return","src":"6615:62:22"}]}},{"expression":{"components":[{"id":4042,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6706:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4043,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6714:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"6714:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:22","typeDescriptions":{}}},"id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3995,"id":4050,"nodeType":"Return","src":"6698:49:22"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"5073:125:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:22","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"hash","nameLocation":"5240:4:22","nodeType":"VariableDeclaration","scope":4052,"src":"5232:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"v","nameLocation":"5260:1:22","nodeType":"VariableDeclaration","scope":4052,"src":"5254:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3981,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"r","nameLocation":"5279:1:22","nodeType":"VariableDeclaration","scope":4052,"src":"5271:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"s","nameLocation":"5298:1:22","nodeType":"VariableDeclaration","scope":4052,"src":"5290:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:22"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:22","nodeType":"VariableDeclaration","scope":4052,"src":"5329:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3992,"mutability":"mutable","name":"err","nameLocation":"5361:3:22","nodeType":"VariableDeclaration","scope":4052,"src":"5348:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3991,"nodeType":"UserDefinedTypeName","pathNode":{"id":3990,"name":"RecoverError","nameLocations":["5348:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"5348:12:22"},"referencedDeclaration":3798,"src":"5348:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:22","nodeType":"VariableDeclaration","scope":4052,"src":"5366:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:22"},"scope":4138,"src":"5203:1551:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4087,"nodeType":"Block","src":"6981:166:22","statements":[{"assignments":[4067,4070,4072],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:22","nodeType":"VariableDeclaration","scope":4087,"src":"6992:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4066,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"error","nameLocation":"7024:5:22","nodeType":"VariableDeclaration","scope":4087,"src":"7011:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4069,"nodeType":"UserDefinedTypeName","pathNode":{"id":4068,"name":"RecoverError","nameLocations":["7011:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"7011:12:22"},"referencedDeclaration":3798,"src":"7011:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:22","nodeType":"VariableDeclaration","scope":4087,"src":"7031:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4079,"initialValue":{"arguments":[{"id":4074,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"7062:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4075,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"7068:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4076,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"7071:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4077,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"7074:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4073,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3864,3944,4052],"referencedDeclaration":4052,"src":"7051:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3798_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:22"},{"expression":{"arguments":[{"id":4081,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"7098:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},{"id":4082,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"7105:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4080,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"7086:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3798_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"ExpressionStatement","src":"7086:28:22"},{"expression":{"id":4085,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"7131:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4065,"id":4086,"nodeType":"Return","src":"7124:16:22"}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"6760:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4088,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:22","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"hash","nameLocation":"6912:4:22","nodeType":"VariableDeclaration","scope":4088,"src":"6904:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"v","nameLocation":"6924:1:22","nodeType":"VariableDeclaration","scope":4088,"src":"6918:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4056,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"r","nameLocation":"6935:1:22","nodeType":"VariableDeclaration","scope":4088,"src":"6927:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"s","nameLocation":"6946:1:22","nodeType":"VariableDeclaration","scope":4088,"src":"6938:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:22"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4088,"src":"6972:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:22"},"scope":4138,"src":"6887:260:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4136,"nodeType":"Block","src":"7352:460:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7366:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4098,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"7375:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3794,"src":"7375:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7462:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4104,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"7471:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3795,"src":"7471:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7567:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4112,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"7576:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3796,"src":"7576:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"7701:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4124,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"7710:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3798_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3797,"src":"7710:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4132,"nodeType":"IfStatement","src":"7697:109:22","trueBody":{"id":4131,"nodeType":"Block","src":"7742:64:22","statements":[{"errorCall":{"arguments":[{"id":4128,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"7786:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4127,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"7763:22:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"RevertStatement","src":"7756:39:22"}]}},"id":4133,"nodeType":"IfStatement","src":"7563:243:22","trueBody":{"id":4122,"nodeType":"Block","src":"7613:78:22","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4118,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"7670:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:22","typeDescriptions":{}}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4115,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"7634:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4121,"nodeType":"RevertStatement","src":"7627:53:22"}]}},"id":4134,"nodeType":"IfStatement","src":"7458:348:22","trueBody":{"id":4110,"nodeType":"Block","src":"7502:55:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4107,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"7523:21:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4109,"nodeType":"RevertStatement","src":"7516:30:22"}]}},"id":4135,"nodeType":"IfStatement","src":"7362:444:22","trueBody":{"id":4102,"nodeType":"Block","src":"7397:55:22","statements":[{"functionReturnParameters":4096,"id":4101,"nodeType":"Return","src":"7411:7:22"}]}}]},"documentation":{"id":4089,"nodeType":"StructuredDocumentation","src":"7153:122:22","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4137,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:22","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"error","nameLocation":"7314:5:22","nodeType":"VariableDeclaration","scope":4137,"src":"7301:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4091,"nodeType":"UserDefinedTypeName","pathNode":{"id":4090,"name":"RecoverError","nameLocations":["7301:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3798,"src":"7301:12:22"},"referencedDeclaration":3798,"src":"7301:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3798","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:22","nodeType":"VariableDeclaration","scope":4137,"src":"7321:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:22"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[],"src":"7352:0:22"},"scope":4138,"src":"7280:532:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4139,"src":"344:7470:22","usedErrors":[3801,3806,3811],"usedEvents":[]}],"src":"112:7703:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4365],"IERC5267":[798],"MessageHashUtils":[4439],"ShortString":[2255],"ShortStrings":[2466]},"id":4366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4140,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4366,"sourceUnit":4440,"src":"139:56:23","symbolAliases":[{"foreign":{"id":4141,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"147:16:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4366,"sourceUnit":2467,"src":"196:62:23","symbolAliases":[{"foreign":{"id":4143,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"204:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4144,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"218:11:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4366,"sourceUnit":799,"src":"259:55:23","symbolAliases":[{"foreign":{"id":4146,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"267:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4149,"name":"IERC5267","nameLocations":["1988:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"1988:8:23"},"id":4150,"nodeType":"InheritanceSpecifier","src":"1988:8:23"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"316:1643:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4365,"linearizedBaseContracts":[4365,798],"name":"EIP712","nameLocation":"1978:6:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4152,"libraryName":{"id":4151,"name":"ShortStrings","nameLocations":["2009:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":2466,"src":"2009:12:23"},"nodeType":"UsingForDirective","src":"2003:25:23"},{"constant":true,"id":4157,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:23","nodeType":"VariableDeclaration","scope":4365,"src":"2034:140:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4159,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:23","nodeType":"VariableDeclaration","scope":4365,"src":"2373:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4161,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:23","nodeType":"VariableDeclaration","scope":4365,"src":"2427:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4163,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:23","nodeType":"VariableDeclaration","scope":4365,"src":"2473:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4162,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4165,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:23","nodeType":"VariableDeclaration","scope":4365,"src":"2517:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4167,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:23","nodeType":"VariableDeclaration","scope":4365,"src":"2560:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4170,"mutability":"immutable","name":"_name","nameLocation":"2637:5:23","nodeType":"VariableDeclaration","scope":4365,"src":"2607:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"ShortString","nameLocations":["2607:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2607:11:23"},"referencedDeclaration":2255,"src":"2607:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4173,"mutability":"immutable","name":"_version","nameLocation":"2678:8:23","nodeType":"VariableDeclaration","scope":4365,"src":"2648:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"},"typeName":{"id":4172,"nodeType":"UserDefinedTypeName","pathNode":{"id":4171,"name":"ShortString","nameLocations":["2648:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":2255,"src":"2648:11:23"},"referencedDeclaration":2255,"src":"2648:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4175,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:23","nodeType":"VariableDeclaration","scope":4365,"src":"2692:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4174,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4177,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:23","nodeType":"VariableDeclaration","scope":4365,"src":"2726:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4176,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4234,"nodeType":"Block","src":"3383:376:23","statements":[{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4185,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"3393:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4188,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"3432:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4186,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"3401:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"3401:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2255_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"src":"3393:53:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"id":4191,"nodeType":"ExpressionStatement","src":"3393:53:23"},{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"3456:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4195,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"3501:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4193,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"3467:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2407,"src":"3467:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2255_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"src":"3456:62:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"id":4198,"nodeType":"ExpressionStatement","src":"3456:62:23"},{"expression":{"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"3528:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4203,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"3558:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:23","typeDescriptions":{}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4200,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4207,"nodeType":"ExpressionStatement","src":"3528:36:23"},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"3574:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4212,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"3607:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4210,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:23","typeDescriptions":{}}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4209,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4216,"nodeType":"ExpressionStatement","src":"3574:42:23"},{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3627:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4218,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ExpressionStatement","src":"3627:30:23"},{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4222,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"3667:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4223,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"3692:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4226,"nodeType":"ExpressionStatement","src":"3667:48:23"},{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4227,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"3725:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4230,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}],"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:23","typeDescriptions":{}}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4233,"nodeType":"ExpressionStatement","src":"3725:27:23"}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"2764:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4235,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"name","nameLocation":"3354:4:23","nodeType":"VariableDeclaration","scope":4235,"src":"3340:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4179,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"version","nameLocation":"3374:7:23","nodeType":"VariableDeclaration","scope":4235,"src":"3360:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4181,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:23"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[],"src":"3383:0:23"},"scope":4365,"src":"3328:431:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"3907:200:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4243,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}],"id":4242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4241,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:23","typeDescriptions":{}}},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4245,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"3938:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4247,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4249,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"3970:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4258,"nodeType":"Block","src":"4046:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4255,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"4067:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4240,"id":4257,"nodeType":"Return","src":"4060:30:23"}]},"id":4259,"nodeType":"IfStatement","src":"3917:184:23","trueBody":{"id":4254,"nodeType":"Block","src":"3986:54:23","statements":[{"expression":{"id":4252,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"4007:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4240,"id":4253,"nodeType":"Return","src":"4000:29:23"}]}}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"3765:75:23","text":" @dev Returns the domain separator for the current chain."},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:23","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[],"src":"3872:2:23"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4261,"src":"3898:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:23"},"scope":4365,"src":"3845:262:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4281,"nodeType":"Block","src":"4177:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":4269,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"4215:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4270,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"4226:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4271,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"4239:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4272,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4276,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}],"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4274,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:23","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4267,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:23","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4266,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4265,"id":4280,"nodeType":"Return","src":"4187:98:23"}]},"id":4282,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:23","nodeType":"FunctionDefinition","parameters":{"id":4262,"nodeType":"ParameterList","parameters":[],"src":"4143:2:23"},"returnParameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4282,"src":"4168:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:23"},"scope":4365,"src":"4113:179:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4297,"nodeType":"Block","src":"5003:90:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4292,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"5053:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4294,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"5075:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4290,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"5020:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4439_$","typeString":"type(library MessageHashUtils)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:23","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4438,"src":"5020:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4289,"id":4296,"nodeType":"Return","src":"5013:73:23"}]},"documentation":{"id":4283,"nodeType":"StructuredDocumentation","src":"4298:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:23","nodeType":"FunctionDefinition","parameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:23","nodeType":"VariableDeclaration","scope":4298,"src":"4943:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:23"},"returnParameters":{"id":4289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"4994:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:23"},"scope":4365,"src":"4917:176:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[797],"body":{"id":4339,"nodeType":"Block","src":"5472:229:23","statements":[{"expression":{"components":[{"hexValue":"0f","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4318,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"5533:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4320,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5560:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4322,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4326,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4365","typeString":"contract EIP712"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4324,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:23","typeDescriptions":{}}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:23","typeDescriptions":{}}},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4333,"nodeType":"ArrayTypeName","src":"5672:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4316,"id":4338,"nodeType":"Return","src":"5482:212:23"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"5099:40:23","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:23","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"5165:2:23"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"fields","nameLocation":"5249:6:23","nodeType":"VariableDeclaration","scope":4340,"src":"5242:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4301,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4304,"mutability":"mutable","name":"name","nameLocation":"5283:4:23","nodeType":"VariableDeclaration","scope":4340,"src":"5269:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4303,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4306,"mutability":"mutable","name":"version","nameLocation":"5315:7:23","nodeType":"VariableDeclaration","scope":4340,"src":"5301:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4305,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:23","nodeType":"VariableDeclaration","scope":4340,"src":"5336:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4310,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:23","nodeType":"VariableDeclaration","scope":4340,"src":"5365:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4309,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4312,"mutability":"mutable","name":"salt","nameLocation":"5412:4:23","nodeType":"VariableDeclaration","scope":4340,"src":"5404:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4315,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:23","nodeType":"VariableDeclaration","scope":4340,"src":"5430:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4314,"nodeType":"ArrayTypeName","src":"5430:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:23"},"scope":4365,"src":"5144:557:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4351,"nodeType":"Block","src":"6082:65:23","statements":[{"expression":{"arguments":[{"id":4348,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"6126:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4346,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"6099:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2434,"src":"6099:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2255_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4345,"id":4350,"nodeType":"Return","src":"6092:48:23"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"5707:256:23","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:23","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[],"src":"6041:2:23"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4352,"src":"6067:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4343,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:23"},"scope":4365,"src":"6021:126:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"6537:71:23","statements":[{"expression":{"arguments":[{"id":4360,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6584:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4358,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"6554:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2255","typeString":"ShortString"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2434,"src":"6554:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2255_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2255_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4357,"id":4362,"nodeType":"Return","src":"6547:54:23"}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"6153:262:23","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:23","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[],"src":"6496:2:23"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4364,"src":"6522:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4355,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:23"},"scope":4365,"src":"6473:135:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4366,"src":"1960:4650:23","usedErrors":[2263,2265],"usedEvents":[778]}],"src":"113:6498:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4439],"Strings":[3790]},"id":4440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4367,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4440,"sourceUnit":3791,"src":"149:39:24","symbolAliases":[{"foreign":{"id":4368,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"157:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"190:330:24","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4439,"linearizedBaseContracts":[4439],"name":"MessageHashUtils","nameLocation":"529:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4379,"nodeType":"Block","src":"1314:341:24","statements":[{"AST":{"nodeType":"YulBlock","src":"1349:300:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1370:4:24","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1376:34:24","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1363:6:24"},"nodeType":"YulFunctionCall","src":"1363:48:24"},"nodeType":"YulExpressionStatement","src":"1363:48:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1472:4:24","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1478:11:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1465:6:24"},"nodeType":"YulFunctionCall","src":"1465:25:24"},"nodeType":"YulExpressionStatement","src":"1465:25:24"},{"nodeType":"YulAssignment","src":"1544:31:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1564:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1570:4:24","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1554:9:24"},"nodeType":"YulFunctionCall","src":"1554:21:24"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1544:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4376,"isOffset":false,"isSlot":false,"src":"1544:6:24","valueSize":1},{"declaration":4373,"isOffset":false,"isSlot":false,"src":"1478:11:24","valueSize":1}],"flags":["memory-safe"],"id":4378,"nodeType":"InlineAssembly","src":"1324:325:24"}]},"documentation":{"id":4371,"nodeType":"StructuredDocumentation","src":"552:665:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:24","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:24","nodeType":"VariableDeclaration","scope":4380,"src":"1254:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:24"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"digest","nameLocation":"1306:6:24","nodeType":"VariableDeclaration","scope":4380,"src":"1298:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:24"},"scope":4439,"src":"1222:433:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4405,"nodeType":"Block","src":"2207:143:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4397,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"2316:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:24","memberName":"length","nodeType":"MemberAccess","src":"2316:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4395,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"2299:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3790_$","typeString":"type(library Strings)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:24","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2668,"src":"2299:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4393,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:24","typeDescriptions":{}}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4401,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"2334:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4389,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:24","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4388,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4387,"id":4404,"nodeType":"Return","src":"2217:126:24"}]},"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"1661:455:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4406,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:24","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"message","nameLocation":"2166:7:24","nodeType":"VariableDeclaration","scope":4406,"src":"2153:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4382,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:24"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4406,"src":"2198:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:24"},"scope":4439,"src":"2121:229:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"2804:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4420,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2860:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4421,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"2871:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4417,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4416,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4415,"id":4424,"nodeType":"Return","src":"2814:63:24"}]},"documentation":{"id":4407,"nodeType":"StructuredDocumentation","src":"2356:332:24","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:24","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"validator","nameLocation":"2742:9:24","nodeType":"VariableDeclaration","scope":4426,"src":"2734:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4411,"mutability":"mutable","name":"data","nameLocation":"2766:4:24","nodeType":"VariableDeclaration","scope":4426,"src":"2753:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4410,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:24"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"2795:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:24"},"scope":4439,"src":"2693:191:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"3435:265:24","statements":[{"AST":{"nodeType":"YulBlock","src":"3470:224:24","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3495:5:24"},"nodeType":"YulFunctionCall","src":"3495:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3488:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3526:3:24"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3531:10:24","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:24"},"nodeType":"YulFunctionCall","src":"3519:23:24"},"nodeType":"YulExpressionStatement","src":"3519:23:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3566:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:24","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3562:3:24"},"nodeType":"YulFunctionCall","src":"3562:14:24"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3578:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3555:6:24"},"nodeType":"YulFunctionCall","src":"3555:39:24"},"nodeType":"YulExpressionStatement","src":"3555:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3618:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:24"},"nodeType":"YulFunctionCall","src":"3614:14:24"},{"name":"structHash","nodeType":"YulIdentifier","src":"3630:10:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:24"},"nodeType":"YulFunctionCall","src":"3607:34:24"},"nodeType":"YulExpressionStatement","src":"3607:34:24"},{"nodeType":"YulAssignment","src":"3654:30:24","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3674:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3679:4:24","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3664:9:24"},"nodeType":"YulFunctionCall","src":"3664:20:24"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3654:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4434,"isOffset":false,"isSlot":false,"src":"3654:6:24","valueSize":1},{"declaration":4429,"isOffset":false,"isSlot":false,"src":"3578:15:24","valueSize":1},{"declaration":4431,"isOffset":false,"isSlot":false,"src":"3630:10:24","valueSize":1}],"flags":["memory-safe"],"id":4436,"nodeType":"InlineAssembly","src":"3445:249:24"}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"2890:431:24","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:24","nodeType":"FunctionDefinition","parameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:24","nodeType":"VariableDeclaration","scope":4438,"src":"3351:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:24","nodeType":"VariableDeclaration","scope":4438,"src":"3376:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:24"},"returnParameters":{"id":4435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4434,"mutability":"mutable","name":"digest","nameLocation":"3427:6:24","nodeType":"VariableDeclaration","scope":4438,"src":"3419:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:24"},"scope":4439,"src":"3326:374:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4440,"src":"521:3181:24","usedErrors":[],"usedEvents":[]}],"src":"123:3580:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6045],"Panic":[2132],"SafeCast":[7810]},"id":6046,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4441,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6046,"sourceUnit":2133,"src":"129:35:25","symbolAliases":[{"foreign":{"id":4442,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"137:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6046,"sourceUnit":7811,"src":"165:40:25","symbolAliases":[{"foreign":{"id":4444,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"207:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6045,"linearizedBaseContracts":[6045],"name":"Math","nameLocation":"289:4:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4451,"members":[{"id":4447,"name":"Floor","nameLocation":"324:5:25","nodeType":"EnumValue","src":"324:5:25"},{"id":4448,"name":"Ceil","nameLocation":"367:4:25","nodeType":"EnumValue","src":"367:4:25"},{"id":4449,"name":"Trunc","nameLocation":"409:5:25","nodeType":"EnumValue","src":"409:5:25"},{"id":4450,"name":"Expand","nameLocation":"439:6:25","nodeType":"EnumValue","src":"439:6:25"}],"name":"Rounding","nameLocation":"305:8:25","nodeType":"EnumDefinition","src":"300:169:25"},{"body":{"id":4482,"nodeType":"Block","src":"677:140:25","statements":[{"id":4481,"nodeType":"UncheckedBlock","src":"687:124:25","statements":[{"assignments":[4464],"declarations":[{"constant":false,"id":4464,"mutability":"mutable","name":"c","nameLocation":"719:1:25","nodeType":"VariableDeclaration","scope":4481,"src":"711:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4468,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"727:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"746:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"750:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"742:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4462,"id":4475,"nodeType":"Return","src":"753:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4478,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"798:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4462,"id":4480,"nodeType":"Return","src":"784:16:25"}]}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"475:106:25","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4483,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:25","nodeType":"FunctionDefinition","parameters":{"id":4457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"a","nameLocation":"610:1:25","nodeType":"VariableDeclaration","scope":4483,"src":"602:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4456,"mutability":"mutable","name":"b","nameLocation":"621:1:25","nodeType":"VariableDeclaration","scope":4483,"src":"613:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:25"},"returnParameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"success","nameLocation":"652:7:25","nodeType":"VariableDeclaration","scope":4483,"src":"647:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4458,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"result","nameLocation":"669:6:25","nodeType":"VariableDeclaration","scope":4483,"src":"661:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:25"},"scope":6045,"src":"586:231:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4510,"nodeType":"Block","src":"1028:113:25","statements":[{"id":4509,"nodeType":"UncheckedBlock","src":"1038:97:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"1066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4496,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4502,"nodeType":"IfStatement","src":"1062:28:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4494,"id":4501,"nodeType":"Return","src":"1073:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1118:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"1122:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4494,"id":4508,"nodeType":"Return","src":"1104:20:25"}]}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"823:109:25","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:25","nodeType":"FunctionDefinition","parameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"a","nameLocation":"961:1:25","nodeType":"VariableDeclaration","scope":4511,"src":"953:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4488,"mutability":"mutable","name":"b","nameLocation":"972:1:25","nodeType":"VariableDeclaration","scope":4511,"src":"964:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:25"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"success","nameLocation":"1003:7:25","nodeType":"VariableDeclaration","scope":4511,"src":"998:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4490,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"result","nameLocation":"1020:6:25","nodeType":"VariableDeclaration","scope":4511,"src":"1012:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:25"},"scope":6045,"src":"937:204:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"1355:417:25","statements":[{"id":4551,"nodeType":"UncheckedBlock","src":"1365:401:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1623:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"1619:28:25","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4522,"id":4529,"nodeType":"Return","src":"1631:16:25"}},{"assignments":[4532],"declarations":[{"constant":false,"id":4532,"mutability":"mutable","name":"c","nameLocation":"1669:1:25","nodeType":"VariableDeclaration","scope":4551,"src":"1661:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4536,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1673:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"1677:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"1696:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"1700:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"1705:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4546,"nodeType":"IfStatement","src":"1692:33:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4522,"id":4545,"nodeType":"Return","src":"1708:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4548,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"1753:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4522,"id":4550,"nodeType":"Return","src":"1739:16:25"}]}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"1147:112:25","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:25","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"a","nameLocation":"1288:1:25","nodeType":"VariableDeclaration","scope":4553,"src":"1280:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"b","nameLocation":"1299:1:25","nodeType":"VariableDeclaration","scope":4553,"src":"1291:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:25"},"returnParameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"success","nameLocation":"1330:7:25","nodeType":"VariableDeclaration","scope":4553,"src":"1325:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4518,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"result","nameLocation":"1347:6:25","nodeType":"VariableDeclaration","scope":4553,"src":"1339:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:25"},"scope":6045,"src":"1264:508:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4580,"nodeType":"Block","src":"1987:114:25","statements":[{"id":4579,"nodeType":"UncheckedBlock","src":"1997:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2025:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"2021:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4564,"id":4571,"nodeType":"Return","src":"2033:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"2078:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2082:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4564,"id":4578,"nodeType":"Return","src":"2064:20:25"}]}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"1778:113:25","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4581,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:25","nodeType":"FunctionDefinition","parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"a","nameLocation":"1920:1:25","nodeType":"VariableDeclaration","scope":4581,"src":"1912:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4558,"mutability":"mutable","name":"b","nameLocation":"1931:1:25","nodeType":"VariableDeclaration","scope":4581,"src":"1923:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:25"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"success","nameLocation":"1962:7:25","nodeType":"VariableDeclaration","scope":4581,"src":"1957:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4560,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"result","nameLocation":"1979:6:25","nodeType":"VariableDeclaration","scope":4581,"src":"1971:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:25"},"scope":6045,"src":"1896:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4608,"nodeType":"Block","src":"2326:114:25","statements":[{"id":4607,"nodeType":"UncheckedBlock","src":"2336:98:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"2364:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4600,"nodeType":"IfStatement","src":"2360:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4592,"id":4599,"nodeType":"Return","src":"2372:17:25"}},{"expression":{"components":[{"hexValue":"74727565","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"2417:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"2421:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4592,"id":4606,"nodeType":"Return","src":"2403:20:25"}]}]},"documentation":{"id":4582,"nodeType":"StructuredDocumentation","src":"2107:123:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:25","nodeType":"FunctionDefinition","parameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"a","nameLocation":"2259:1:25","nodeType":"VariableDeclaration","scope":4609,"src":"2251:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"b","nameLocation":"2270:1:25","nodeType":"VariableDeclaration","scope":4609,"src":"2262:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:25"},"returnParameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"success","nameLocation":"2301:7:25","nodeType":"VariableDeclaration","scope":4609,"src":"2296:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4588,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4591,"mutability":"mutable","name":"result","nameLocation":"2318:6:25","nodeType":"VariableDeclaration","scope":4609,"src":"2310:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:25"},"scope":6045,"src":"2235:205:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4635,"nodeType":"Block","src":"2912:207:25","statements":[{"id":4634,"nodeType":"UncheckedBlock","src":"2922:191:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3060:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4622,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3066:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4623,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4628,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"3091:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"3075:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"3075:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4620,"id":4633,"nodeType":"Return","src":"3053:49:25"}]}]},"documentation":{"id":4610,"nodeType":"StructuredDocumentation","src":"2446:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:25","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"condition","nameLocation":"2847:9:25","nodeType":"VariableDeclaration","scope":4636,"src":"2842:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4611,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"a","nameLocation":"2866:1:25","nodeType":"VariableDeclaration","scope":4636,"src":"2858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"b","nameLocation":"2877:1:25","nodeType":"VariableDeclaration","scope":4636,"src":"2869:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:25"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4636,"src":"2903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:25"},"scope":6045,"src":"2825:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4654,"nodeType":"Block","src":"3256:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"3281:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4648,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"3285:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"3288:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4651,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"3291:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4646,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3273:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4645,"id":4653,"nodeType":"Return","src":"3266:27:25"}]},"documentation":{"id":4637,"nodeType":"StructuredDocumentation","src":"3125:59:25","text":" @dev Returns the largest of two numbers."},"id":4655,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:25","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"a","nameLocation":"3210:1:25","nodeType":"VariableDeclaration","scope":4655,"src":"3202:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4641,"mutability":"mutable","name":"b","nameLocation":"3221:1:25","nodeType":"VariableDeclaration","scope":4655,"src":"3213:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:25"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4655,"src":"3247:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:25"},"scope":6045,"src":"3189:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4673,"nodeType":"Block","src":"3438:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3463:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"3467:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3470:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4670,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"3473:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4665,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3455:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4664,"id":4672,"nodeType":"Return","src":"3448:27:25"}]},"documentation":{"id":4656,"nodeType":"StructuredDocumentation","src":"3306:60:25","text":" @dev Returns the smallest of two numbers."},"id":4674,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:25","nodeType":"FunctionDefinition","parameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"a","nameLocation":"3392:1:25","nodeType":"VariableDeclaration","scope":4674,"src":"3384:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4660,"mutability":"mutable","name":"b","nameLocation":"3403:1:25","nodeType":"VariableDeclaration","scope":4674,"src":"3395:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:25"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4674,"src":"3429:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:25"},"scope":6045,"src":"3371:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"3666:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"3721:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"3725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"3731:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"3735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4683,"id":4695,"nodeType":"Return","src":"3713:28:25"}]},"documentation":{"id":4675,"nodeType":"StructuredDocumentation","src":"3488:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:25","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4677,"mutability":"mutable","name":"a","nameLocation":"3620:1:25","nodeType":"VariableDeclaration","scope":4697,"src":"3612:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4679,"mutability":"mutable","name":"b","nameLocation":"3631:1:25","nodeType":"VariableDeclaration","scope":4697,"src":"3623:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:25"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"3657:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:25"},"scope":6045,"src":"3595:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4737,"nodeType":"Block","src":"4040:633:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"4054:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"4050:150:25","trueBody":{"id":4717,"nodeType":"Block","src":"4062:138:25","statements":[{"expression":{"arguments":[{"expression":{"id":4713,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"4166:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"4166:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4710,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"4154:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"4154:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"4154:35:25"}]}},{"id":4736,"nodeType":"UncheckedBlock","src":"4583:84:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"4630:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4719,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"4614:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"4614:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"4641:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4729,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"4650:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4706,"id":4735,"nodeType":"Return","src":"4607:49:25"}]}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"3754:210:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4738,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:25","nodeType":"FunctionDefinition","parameters":{"id":4703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"a","nameLocation":"3994:1:25","nodeType":"VariableDeclaration","scope":4738,"src":"3986:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4702,"mutability":"mutable","name":"b","nameLocation":"4005:1:25","nodeType":"VariableDeclaration","scope":4738,"src":"3997:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:25"},"returnParameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4738,"src":"4031:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:25"},"scope":6045,"src":"3969:704:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4874,"nodeType":"Block","src":"5094:4128:25","statements":[{"id":4873,"nodeType":"UncheckedBlock","src":"5104:4112:25","statements":[{"assignments":[4751],"declarations":[{"constant":false,"id":4751,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:25","nodeType":"VariableDeclaration","scope":4873,"src":"5433:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4755,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"5449:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4753,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4743,"src":"5453:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:25"},{"assignments":[4757],"declarations":[{"constant":false,"id":4757,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:25","nodeType":"VariableDeclaration","scope":4873,"src":"5513:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4758,"nodeType":"VariableDeclarationStatement","src":"5513:13:25"},{"AST":{"nodeType":"YulBlock","src":"5593:122:25","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:25"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:25","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:25"},"nodeType":"YulFunctionCall","src":"5634:6:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:25"},"nodeType":"YulFunctionCall","src":"5621:20:25"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:25","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:25","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:25"},"nodeType":"YulFunctionCall","src":"5671:14:25"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:25"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:25"},"nodeType":"YulFunctionCall","src":"5687:13:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:25"},"nodeType":"YulFunctionCall","src":"5667:34:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4751,"isOffset":false,"isSlot":false,"src":"5679:5:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"5694:5:25","valueSize":1},{"declaration":4757,"isOffset":false,"isSlot":false,"src":"5658:5:25","valueSize":1},{"declaration":4741,"isOffset":false,"isSlot":false,"src":"5628:1:25","valueSize":1},{"declaration":4743,"isOffset":false,"isSlot":false,"src":"5631:1:25","valueSize":1}],"id":4759,"nodeType":"InlineAssembly","src":"5584:131:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"5796:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4768,"nodeType":"IfStatement","src":"5792:368:25","trueBody":{"id":4767,"nodeType":"Block","src":"5808:352:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"6126:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"6134:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4749,"id":4766,"nodeType":"Return","src":"6119:26:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4769,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"6270:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4770,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"6285:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4787,"nodeType":"IfStatement","src":"6266:143:25","trueBody":{"id":4786,"nodeType":"Block","src":"6292:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"6330:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4779,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6348:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"6348:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4781,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6372:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2095,"src":"6372:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4775,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"6322:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4772,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6310:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"6310:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4785,"nodeType":"ExpressionStatement","src":"6310:84:25"}]}},{"assignments":[4789],"declarations":[{"constant":false,"id":4789,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:25","nodeType":"VariableDeclaration","scope":4873,"src":"6664:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4790,"nodeType":"VariableDeclarationStatement","src":"6664:17:25"},{"AST":{"nodeType":"YulBlock","src":"6704:291:25","statements":[{"nodeType":"YulAssignment","src":"6773:38:25","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:25"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:25"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:25"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:25"},"nodeType":"YulFunctionCall","src":"6786:25:25"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:25"}]},{"nodeType":"YulAssignment","src":"6893:41:25","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:25"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:25"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:25"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:25"},"nodeType":"YulFunctionCall","src":"6913:20:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:25"},"nodeType":"YulFunctionCall","src":"6902:32:25"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:25"}]},{"nodeType":"YulAssignment","src":"6951:30:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:25"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:25"},"nodeType":"YulFunctionCall","src":"6960:21:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4745,"isOffset":false,"isSlot":false,"src":"6799:11:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"6927:5:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"6951:5:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"6964:5:25","valueSize":1},{"declaration":4757,"isOffset":false,"isSlot":false,"src":"6893:5:25","valueSize":1},{"declaration":4757,"isOffset":false,"isSlot":false,"src":"6906:5:25","valueSize":1},{"declaration":4789,"isOffset":false,"isSlot":false,"src":"6773:9:25","valueSize":1},{"declaration":4789,"isOffset":false,"isSlot":false,"src":"6916:9:25","valueSize":1},{"declaration":4789,"isOffset":false,"isSlot":false,"src":"6971:9:25","valueSize":1},{"declaration":4741,"isOffset":false,"isSlot":false,"src":"6793:1:25","valueSize":1},{"declaration":4743,"isOffset":false,"isSlot":false,"src":"6796:1:25","valueSize":1}],"id":4791,"nodeType":"InlineAssembly","src":"6695:300:25"},{"assignments":[4793],"declarations":[{"constant":false,"id":4793,"mutability":"mutable","name":"twos","nameLocation":"7207:4:25","nodeType":"VariableDeclaration","scope":4873,"src":"7199:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"7214:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4796,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"7233:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:25"},{"AST":{"nodeType":"YulBlock","src":"7268:366:25","statements":[{"nodeType":"YulAssignment","src":"7333:37:25","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:25"},"nodeType":"YulFunctionCall","src":"7348:22:25"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:25"}]},{"nodeType":"YulAssignment","src":"7437:25:25","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:25"},"nodeType":"YulFunctionCall","src":"7446:16:25"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:25"}]},{"nodeType":"YulAssignment","src":"7581:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:25","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:25"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:25"},"nodeType":"YulFunctionCall","src":"7597:12:25"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:25"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:25"},"nodeType":"YulFunctionCall","src":"7593:23:25"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:25","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:25"},"nodeType":"YulFunctionCall","src":"7589:31:25"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4745,"isOffset":false,"isSlot":false,"src":"7333:11:25","valueSize":1},{"declaration":4745,"isOffset":false,"isSlot":false,"src":"7352:11:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"7437:5:25","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"7450:5:25","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7365:4:25","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7457:4:25","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7581:4:25","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7604:4:25","valueSize":1},{"declaration":4793,"isOffset":false,"isSlot":false,"src":"7611:4:25","valueSize":1}],"id":4801,"nodeType":"InlineAssembly","src":"7259:375:25"},{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"7700:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4803,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"7709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4804,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"7717:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"7700:21:25"},{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:25","nodeType":"VariableDeclaration","scope":4873,"src":"8056:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4816,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8079:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:25"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4817,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8312:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4819,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8327:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8341:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"8312:36:25"},{"expression":{"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4825,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8382:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8397:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4828,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8411:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4832,"nodeType":"ExpressionStatement","src":"8382:36:25"},{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4833,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8454:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8469:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8483:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4840,"nodeType":"ExpressionStatement","src":"8454:36:25"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4841,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8525:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8540:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4844,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8554:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4848,"nodeType":"ExpressionStatement","src":"8525:36:25"},{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8598:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8613:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4852,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8627:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4856,"nodeType":"ExpressionStatement","src":"8598:36:25"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4857,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8672:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"8687:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4860,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"8701:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"8672:36:25"},{"expression":{"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"9154:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4866,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"9163:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4867,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"9171:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4870,"nodeType":"ExpressionStatement","src":"9154:24:25"},{"expression":{"id":4871,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"9199:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4749,"id":4872,"nodeType":"Return","src":"9192:13:25"}]}]},"documentation":{"id":4739,"nodeType":"StructuredDocumentation","src":"4679:312:25","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4875,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:25","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4741,"mutability":"mutable","name":"x","nameLocation":"5020:1:25","nodeType":"VariableDeclaration","scope":4875,"src":"5012:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4743,"mutability":"mutable","name":"y","nameLocation":"5031:1:25","nodeType":"VariableDeclaration","scope":4875,"src":"5023:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4745,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:25","nodeType":"VariableDeclaration","scope":4875,"src":"5034:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:25"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"result","nameLocation":"5086:6:25","nodeType":"VariableDeclaration","scope":4875,"src":"5078:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:25"},"scope":6045,"src":"4996:4226:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4911,"nodeType":"Block","src":"9461:128:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4891,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"9485:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4892,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"9488:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4893,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"9491:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4890,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4875,4912],"referencedDeclaration":4875,"src":"9478:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4898,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"9539:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":4897,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"9522:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4451_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"9559:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4902,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"9562:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4903,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"9565:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4900,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"9506:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"9506:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4889,"id":4910,"nodeType":"Return","src":"9471:111:25"}]},"documentation":{"id":4876,"nodeType":"StructuredDocumentation","src":"9228:118:25","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:25","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"x","nameLocation":"9375:1:25","nodeType":"VariableDeclaration","scope":4912,"src":"9367:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4880,"mutability":"mutable","name":"y","nameLocation":"9386:1:25","nodeType":"VariableDeclaration","scope":4912,"src":"9378:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4882,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:25","nodeType":"VariableDeclaration","scope":4912,"src":"9389:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4881,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:25","nodeType":"VariableDeclaration","scope":4912,"src":"9410:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":4884,"nodeType":"UserDefinedTypeName","pathNode":{"id":4883,"name":"Rounding","nameLocations":["9410:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"9410:8:25"},"referencedDeclaration":4451,"src":"9410:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:25"},"returnParameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4912,"src":"9452:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4887,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:25"},"scope":6045,"src":"9351:238:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5008,"nodeType":"Block","src":"10223:1849:25","statements":[{"id":5007,"nodeType":"UncheckedBlock","src":"10233:1833:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"10261:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"nodeType":"IfStatement","src":"10257:20:25","trueBody":{"expression":{"hexValue":"30","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4921,"id":4926,"nodeType":"Return","src":"10269:8:25"}},{"assignments":[4929],"declarations":[{"constant":false,"id":4929,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:25","nodeType":"VariableDeclaration","scope":5007,"src":"10748:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4933,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"10768:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4931,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"10772:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:25"},{"assignments":[4935],"declarations":[{"constant":false,"id":4935,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:25","nodeType":"VariableDeclaration","scope":5007,"src":"10787:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4937,"initialValue":{"id":4936,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"10801:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:25"},{"assignments":[4939],"declarations":[{"constant":false,"id":4939,"mutability":"mutable","name":"x","nameLocation":"10945:1:25","nodeType":"VariableDeclaration","scope":5007,"src":"10938:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4938,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4941,"initialValue":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:25"},{"assignments":[4943],"declarations":[{"constant":false,"id":4943,"mutability":"mutable","name":"y","nameLocation":"10971:1:25","nodeType":"VariableDeclaration","scope":5007,"src":"10964:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4942,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4945,"initialValue":{"hexValue":"31","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:25"},{"body":{"id":4982,"nodeType":"Block","src":"11014:882:25","statements":[{"assignments":[4950],"declarations":[{"constant":false,"id":4950,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:25","nodeType":"VariableDeclaration","scope":4982,"src":"11032:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4954,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"11051:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4952,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11057:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:25"},{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4955,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"11086:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4956,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11091:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4957,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4958,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11191:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"11436:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11442:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4961,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11454:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"ExpressionStatement","src":"11085:395:25"},{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4967,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"11500:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4968,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"11503:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4969,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4970,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"11585:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"11839:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"11843:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4975,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"11854:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4973,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:25","typeDescriptions":{}}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4981,"nodeType":"ExpressionStatement","src":"11499:382:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"10998:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"WhileStatement","src":"10991:905:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"11914:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"IfStatement","src":"11910:22:25","trueBody":{"expression":{"hexValue":"30","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4921,"id":4988,"nodeType":"Return","src":"11924:8:25"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"11983:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"11990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:25","subExpression":{"id":4997,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"12003:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:25","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5003,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"12015:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:25","typeDescriptions":{}}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"11975:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4921,"id":5006,"nodeType":"Return","src":"11968:50:25"}]}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"9595:553:25","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5009,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:25","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"a","nameLocation":"10177:1:25","nodeType":"VariableDeclaration","scope":5009,"src":"10169:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4917,"mutability":"mutable","name":"n","nameLocation":"10188:1:25","nodeType":"VariableDeclaration","scope":5009,"src":"10180:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:25"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"10214:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:25"},"scope":6045,"src":"10153:1919:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"12672:82:25","statements":[{"id":5028,"nodeType":"UncheckedBlock","src":"12682:66:25","statements":[{"expression":{"arguments":[{"id":5021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"12725:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5022,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"12728:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5025,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"12735:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5019,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"12713:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:25","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5066,"src":"12713:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5018,"id":5027,"nodeType":"Return","src":"12706:31:25"}]}]},"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"12078:514:25","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:25","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"a","nameLocation":"12626:1:25","nodeType":"VariableDeclaration","scope":5030,"src":"12618:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"p","nameLocation":"12637:1:25","nodeType":"VariableDeclaration","scope":5030,"src":"12629:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:25"},"returnParameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5030,"src":"12663:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:25"},"scope":6045,"src":"12597:157:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5065,"nodeType":"Block","src":"13524:174:25","statements":[{"assignments":[5043,5045],"declarations":[{"constant":false,"id":5043,"mutability":"mutable","name":"success","nameLocation":"13540:7:25","nodeType":"VariableDeclaration","scope":5065,"src":"13535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5042,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"result","nameLocation":"13557:6:25","nodeType":"VariableDeclaration","scope":5065,"src":"13549:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5051,"initialValue":{"arguments":[{"id":5047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"13577:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5048,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"13580:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5049,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"13583:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5090,5172],"referencedDeclaration":5090,"src":"13567:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:25"},{"condition":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:25","subExpression":{"id":5052,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"13600:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"13595:74:25","trueBody":{"id":5061,"nodeType":"Block","src":"13609:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":5057,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"13635:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"13635:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5054,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"13623:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"13623:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"ExpressionStatement","src":"13623:35:25"}]}},{"expression":{"id":5063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"13685:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5041,"id":5064,"nodeType":"Return","src":"13678:13:25"}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"12760:678:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5066,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:25","nodeType":"FunctionDefinition","parameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"b","nameLocation":"13467:1:25","nodeType":"VariableDeclaration","scope":5066,"src":"13459:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5035,"mutability":"mutable","name":"e","nameLocation":"13478:1:25","nodeType":"VariableDeclaration","scope":5066,"src":"13470:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5037,"mutability":"mutable","name":"m","nameLocation":"13489:1:25","nodeType":"VariableDeclaration","scope":5066,"src":"13481:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5036,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:25"},"returnParameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5066,"src":"13515:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:25"},"scope":6045,"src":"13443:255:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"14552:1493:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"14566:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5087,"nodeType":"IfStatement","src":"14562:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5079,"id":5086,"nodeType":"Return","src":"14574:17:25"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:25","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:25"},"nodeType":"YulFunctionCall","src":"14651:11:25"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:25"},"nodeType":"YulFunctionCall","src":"15563:17:25"},"nodeType":"YulExpressionStatement","src":"15563:17:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:25"},"nodeType":"YulFunctionCall","src":"15600:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:25"},"nodeType":"YulFunctionCall","src":"15593:28:25"},"nodeType":"YulExpressionStatement","src":"15593:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:25"},"nodeType":"YulFunctionCall","src":"15641:14:25"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:25"},"nodeType":"YulFunctionCall","src":"15634:28:25"},"nodeType":"YulExpressionStatement","src":"15634:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:25"},"nodeType":"YulFunctionCall","src":"15682:14:25"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:25"},"nodeType":"YulFunctionCall","src":"15675:25:25"},"nodeType":"YulExpressionStatement","src":"15675:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:25"},"nodeType":"YulFunctionCall","src":"15720:14:25"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:25"},"nodeType":"YulFunctionCall","src":"15713:25:25"},"nodeType":"YulExpressionStatement","src":"15713:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:25"},"nodeType":"YulFunctionCall","src":"15758:14:25"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:25"},"nodeType":"YulFunctionCall","src":"15751:25:25"},"nodeType":"YulExpressionStatement","src":"15751:25:25"},{"nodeType":"YulAssignment","src":"15938:57:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:25"},"nodeType":"YulFunctionCall","src":"15960:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:25","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:25"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:25","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:25","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:25"},"nodeType":"YulFunctionCall","src":"15949:46:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:25"}]},{"nodeType":"YulAssignment","src":"16008:21:25","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:25"},"nodeType":"YulFunctionCall","src":"16018:11:25"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5069,"isOffset":false,"isSlot":false,"src":"15698:1:25","valueSize":1},{"declaration":5071,"isOffset":false,"isSlot":false,"src":"15736:1:25","valueSize":1},{"declaration":5073,"isOffset":false,"isSlot":false,"src":"15774:1:25","valueSize":1},{"declaration":5078,"isOffset":false,"isSlot":false,"src":"16008:6:25","valueSize":1},{"declaration":5076,"isOffset":false,"isSlot":false,"src":"15938:7:25","valueSize":1}],"flags":["memory-safe"],"id":5088,"nodeType":"InlineAssembly","src":"14601:1438:25"}]},"documentation":{"id":5067,"nodeType":"StructuredDocumentation","src":"13704:738:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:25","nodeType":"FunctionDefinition","parameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"b","nameLocation":"14474:1:25","nodeType":"VariableDeclaration","scope":5090,"src":"14466:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5068,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5071,"mutability":"mutable","name":"e","nameLocation":"14485:1:25","nodeType":"VariableDeclaration","scope":5090,"src":"14477:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5073,"mutability":"mutable","name":"m","nameLocation":"14496:1:25","nodeType":"VariableDeclaration","scope":5090,"src":"14488:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:25"},"returnParameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"success","nameLocation":"14527:7:25","nodeType":"VariableDeclaration","scope":5090,"src":"14522:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5075,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"result","nameLocation":"14544:6:25","nodeType":"VariableDeclaration","scope":5090,"src":"14536:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:25"},"scope":6045,"src":"14447:1598:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5125,"nodeType":"Block","src":"16242:179:25","statements":[{"assignments":[5103,5105],"declarations":[{"constant":false,"id":5103,"mutability":"mutable","name":"success","nameLocation":"16258:7:25","nodeType":"VariableDeclaration","scope":5125,"src":"16253:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5102,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5105,"mutability":"mutable","name":"result","nameLocation":"16280:6:25","nodeType":"VariableDeclaration","scope":5125,"src":"16267:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5104,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5111,"initialValue":{"arguments":[{"id":5107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"16300:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5108,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"16303:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5109,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"16306:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5106,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5090,5172],"referencedDeclaration":5172,"src":"16290:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:25"},{"condition":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:25","subExpression":{"id":5112,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"16323:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5122,"nodeType":"IfStatement","src":"16318:74:25","trueBody":{"id":5121,"nodeType":"Block","src":"16332:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":5117,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"16358:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2099,"src":"16358:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5114,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"16346:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2132_$","typeString":"type(library Panic)"}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"16346:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5120,"nodeType":"ExpressionStatement","src":"16346:35:25"}]}},{"expression":{"id":5123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"16408:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5101,"id":5124,"nodeType":"Return","src":"16401:13:25"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"16051:85:25","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5126,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:25","nodeType":"FunctionDefinition","parameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"b","nameLocation":"16170:1:25","nodeType":"VariableDeclaration","scope":5126,"src":"16157:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5092,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5095,"mutability":"mutable","name":"e","nameLocation":"16186:1:25","nodeType":"VariableDeclaration","scope":5126,"src":"16173:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5094,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5097,"mutability":"mutable","name":"m","nameLocation":"16202:1:25","nodeType":"VariableDeclaration","scope":5126,"src":"16189:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5096,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:25"},"returnParameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5126,"src":"16228:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5099,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:25"},"scope":6045,"src":"16141:280:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5171,"nodeType":"Block","src":"16675:771:25","statements":[{"condition":{"arguments":[{"id":5141,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"16700:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5140,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"16689:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5150,"nodeType":"IfStatement","src":"16685:47:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5144,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5139,"id":5149,"nodeType":"Return","src":"16704:28:25"}},{"assignments":[5152],"declarations":[{"constant":false,"id":5152,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:25","nodeType":"VariableDeclaration","scope":5171,"src":"16743:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5155,"initialValue":{"expression":{"id":5153,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"16758:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:25","memberName":"length","nodeType":"MemberAccess","src":"16758:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:25"},{"expression":{"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"16848:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"16874:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:25","memberName":"length","nodeType":"MemberAccess","src":"16874:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5161,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"16884:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:25","memberName":"length","nodeType":"MemberAccess","src":"16884:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5163,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"16894:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"16900:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5165,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"16903:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5166,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"16906:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5157,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5169,"nodeType":"ExpressionStatement","src":"16848:60:25"},{"AST":{"nodeType":"YulBlock","src":"16944:496:25","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:25","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:25"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:25"},"nodeType":"YulFunctionCall","src":"16973:17:25"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:25","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:25"},"nodeType":"YulFunctionCall","src":"17102:5:25"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:25","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:25"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:25"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:25"},"nodeType":"YulFunctionCall","src":"17124:13:25"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:25"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:25"},"nodeType":"YulFunctionCall","src":"17091:62:25"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:25"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:25"},"nodeType":"YulFunctionCall","src":"17302:20:25"},"nodeType":"YulExpressionStatement","src":"17302:20:25"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:25","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:25"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:25"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:25"},"nodeType":"YulFunctionCall","src":"17411:18:25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:25"},"nodeType":"YulFunctionCall","src":"17398:32:25"},"nodeType":"YulExpressionStatement","src":"17398:32:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":5152,"isOffset":false,"isSlot":false,"src":"17148:4:25","valueSize":1},{"declaration":5152,"isOffset":false,"isSlot":false,"src":"17317:4:25","valueSize":1},{"declaration":5152,"isOffset":false,"isSlot":false,"src":"17424:4:25","valueSize":1},{"declaration":5138,"isOffset":false,"isSlot":false,"src":"16977:6:25","valueSize":1},{"declaration":5138,"isOffset":false,"isSlot":false,"src":"17130:6:25","valueSize":1},{"declaration":5138,"isOffset":false,"isSlot":false,"src":"17309:6:25","valueSize":1},{"declaration":5136,"isOffset":false,"isSlot":false,"src":"17080:7:25","valueSize":1}],"flags":["memory-safe"],"id":5170,"nodeType":"InlineAssembly","src":"16919:521:25"}]},"documentation":{"id":5127,"nodeType":"StructuredDocumentation","src":"16427:88:25","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5172,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:25","nodeType":"FunctionDefinition","parameters":{"id":5134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"b","nameLocation":"16561:1:25","nodeType":"VariableDeclaration","scope":5172,"src":"16548:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5128,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"e","nameLocation":"16585:1:25","nodeType":"VariableDeclaration","scope":5172,"src":"16572:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5130,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5133,"mutability":"mutable","name":"m","nameLocation":"16609:1:25","nodeType":"VariableDeclaration","scope":5172,"src":"16596:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5132,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:25"},"returnParameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"success","nameLocation":"16645:7:25","nodeType":"VariableDeclaration","scope":5172,"src":"16640:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5135,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"result","nameLocation":"16667:6:25","nodeType":"VariableDeclaration","scope":5172,"src":"16654:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5137,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:25"},"scope":6045,"src":"16520:926:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5204,"nodeType":"Block","src":"17601:176:25","statements":[{"body":{"id":5200,"nodeType":"Block","src":"17658:92:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5191,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"17676:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5193,"indexExpression":{"id":5192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"17686:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5199,"nodeType":"IfStatement","src":"17672:68:25","trueBody":{"id":5198,"nodeType":"Block","src":"17695:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5179,"id":5197,"nodeType":"Return","src":"17713:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"17631:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5185,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"17635:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:25","memberName":"length","nodeType":"MemberAccess","src":"17635:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5201,"initializationExpression":{"assignments":[5181],"declarations":[{"constant":false,"id":5181,"mutability":"mutable","name":"i","nameLocation":"17624:1:25","nodeType":"VariableDeclaration","scope":5201,"src":"17616:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5180,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5183,"initialValue":{"hexValue":"30","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:25"},"loopExpression":{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:25","subExpression":{"id":5188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"17655:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5190,"nodeType":"ExpressionStatement","src":"17653:3:25"},"nodeType":"ForStatement","src":"17611:139:25"},{"expression":{"hexValue":"74727565","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5179,"id":5203,"nodeType":"Return","src":"17759:11:25"}]},"documentation":{"id":5173,"nodeType":"StructuredDocumentation","src":"17452:72:25","text":" @dev Returns whether the provided byte array is zero."},"id":5205,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:25","nodeType":"FunctionDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:25","nodeType":"VariableDeclaration","scope":5205,"src":"17549:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5174,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:25"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5205,"src":"17595:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5177,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:25"},"scope":6045,"src":"17529:248:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5423,"nodeType":"Block","src":"18137:5124:25","statements":[{"id":5422,"nodeType":"UncheckedBlock","src":"18147:5108:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"18241:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5219,"nodeType":"IfStatement","src":"18237:53:25","trueBody":{"id":5218,"nodeType":"Block","src":"18249:41:25","statements":[{"expression":{"id":5216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"18274:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5212,"id":5217,"nodeType":"Return","src":"18267:8:25"}]}},{"assignments":[5221],"declarations":[{"constant":false,"id":5221,"mutability":"mutable","name":"aa","nameLocation":"19225:2:25","nodeType":"VariableDeclaration","scope":5422,"src":"19217:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5223,"initialValue":{"id":5222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"19230:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:25"},{"assignments":[5225],"declarations":[{"constant":false,"id":5225,"mutability":"mutable","name":"xn","nameLocation":"19253:2:25","nodeType":"VariableDeclaration","scope":5422,"src":"19245:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5227,"initialValue":{"hexValue":"31","id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5228,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19278:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"19274:92:25","trueBody":{"id":5242,"nodeType":"Block","src":"19296:70:25","statements":[{"expression":{"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5234,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19314:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5237,"nodeType":"ExpressionStatement","src":"19314:10:25"},{"expression":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5238,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19342:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5241,"nodeType":"ExpressionStatement","src":"19342:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19383:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5259,"nodeType":"IfStatement","src":"19379:90:25","trueBody":{"id":5258,"nodeType":"Block","src":"19400:69:25","statements":[{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19418:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"19418:9:25"},{"expression":{"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19445:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5257,"nodeType":"ExpressionStatement","src":"19445:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19486:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5275,"nodeType":"IfStatement","src":"19482:90:25","trueBody":{"id":5274,"nodeType":"Block","src":"19503:69:25","statements":[{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5266,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19521:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"19521:9:25"},{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5270,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19548:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"19548:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19589:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5291,"nodeType":"IfStatement","src":"19585:89:25","trueBody":{"id":5290,"nodeType":"Block","src":"19606:68:25","statements":[{"expression":{"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5282,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19624:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5285,"nodeType":"ExpressionStatement","src":"19624:9:25"},{"expression":{"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5286,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19651:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5289,"nodeType":"ExpressionStatement","src":"19651:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19691:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5307,"nodeType":"IfStatement","src":"19687:87:25","trueBody":{"id":5306,"nodeType":"Block","src":"19707:67:25","statements":[{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5298,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19725:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"19725:8:25"},{"expression":{"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19751:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5305,"nodeType":"ExpressionStatement","src":"19751:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19791:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"19787:87:25","trueBody":{"id":5322,"nodeType":"Block","src":"19807:67:25","statements":[{"expression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19825:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5317,"nodeType":"ExpressionStatement","src":"19825:8:25"},{"expression":{"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5318,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19851:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5321,"nodeType":"ExpressionStatement","src":"19851:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"19891:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5335,"nodeType":"IfStatement","src":"19887:61:25","trueBody":{"id":5334,"nodeType":"Block","src":"19907:41:25","statements":[{"expression":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5330,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"19925:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5333,"nodeType":"ExpressionStatement","src":"19925:8:25"}]}},{"expression":{"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5336,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"20368:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5338,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"20378:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"nodeType":"ExpressionStatement","src":"20368:18:25"},{"expression":{"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22273:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22279:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22284:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5348,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22288:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5355,"nodeType":"ExpressionStatement","src":"22273:23:25"},{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22382:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22388:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22393:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5359,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22397:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5366,"nodeType":"ExpressionStatement","src":"22382:23:25"},{"expression":{"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5367,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22493:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22499:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22504:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22508:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5377,"nodeType":"ExpressionStatement","src":"22493:23:25"},{"expression":{"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22602:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22608:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22613:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5381,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22617:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5388,"nodeType":"ExpressionStatement","src":"22602:23:25"},{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5389,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22712:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22718:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22723:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5392,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22727:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5399,"nodeType":"ExpressionStatement","src":"22712:23:25"},{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5400,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22822:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5401,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22828:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"22833:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5403,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"22837:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ExpressionStatement","src":"22822:23:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5411,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"23211:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"23232:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"23237:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5416,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"23241:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5412,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"23216:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"23216:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5212,"id":5421,"nodeType":"Return","src":"23204:40:25"}]}]},"documentation":{"id":5206,"nodeType":"StructuredDocumentation","src":"17783:292:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:25","nodeType":"FunctionDefinition","parameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"a","nameLocation":"18102:1:25","nodeType":"VariableDeclaration","scope":5424,"src":"18094:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:25"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"18128:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5210,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:25"},"scope":6045,"src":"18080:5181:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"23434:171:25","statements":[{"id":5456,"nodeType":"UncheckedBlock","src":"23444:155:25","statements":[{"assignments":[5436],"declarations":[{"constant":false,"id":5436,"mutability":"mutable","name":"result","nameLocation":"23476:6:25","nodeType":"VariableDeclaration","scope":5456,"src":"23468:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5440,"initialValue":{"arguments":[{"id":5438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"23490:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5424,5458],"referencedDeclaration":5424,"src":"23485:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"23513:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5445,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"23555:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":5444,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"23538:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4451_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"23568:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"23577:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"23586:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"23522:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"23522:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5434,"id":5455,"nodeType":"Return","src":"23506:82:25"}]}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"23267:86:25","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:25","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"a","nameLocation":"23380:1:25","nodeType":"VariableDeclaration","scope":5458,"src":"23372:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:25","nodeType":"VariableDeclaration","scope":5458,"src":"23383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":5429,"nodeType":"UserDefinedTypeName","pathNode":{"id":5428,"name":"Rounding","nameLocations":["23383:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"23383:8:25"},"referencedDeclaration":4451,"src":"23383:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:25"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5458,"src":"23425:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:25"},"scope":6045,"src":"23358:247:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"23796:981:25","statements":[{"assignments":[5467],"declarations":[{"constant":false,"id":5467,"mutability":"mutable","name":"result","nameLocation":"23814:6:25","nodeType":"VariableDeclaration","scope":5653,"src":"23806:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5469,"initialValue":{"hexValue":"30","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:25"},{"assignments":[5471],"declarations":[{"constant":false,"id":5471,"mutability":"mutable","name":"exp","nameLocation":"23842:3:25","nodeType":"VariableDeclaration","scope":5653,"src":"23834:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5470,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5472,"nodeType":"VariableDeclarationStatement","src":"23834:11:25"},{"id":5650,"nodeType":"UncheckedBlock","src":"23855:893:25","statements":[{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5473,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"23879:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"23907:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5475,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"23891:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"23891:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5488,"nodeType":"ExpressionStatement","src":"23879:51:25"},{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"23944:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5490,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"23954:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5492,"nodeType":"ExpressionStatement","src":"23944:13:25"},{"expression":{"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"23971:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5494,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"23981:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5496,"nodeType":"ExpressionStatement","src":"23971:13:25"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5497,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"23999:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24026:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5499,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24010:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24010:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"23999:49:25"},{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24062:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5514,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24072:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"24062:13:25"},{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24089:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5518,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24099:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5520,"nodeType":"ExpressionStatement","src":"24089:13:25"},{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24117:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24144:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5523,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24128:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24128:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"24117:49:25"},{"expression":{"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24180:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5538,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24190:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5540,"nodeType":"ExpressionStatement","src":"24180:13:25"},{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24207:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5542,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24217:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5544,"nodeType":"ExpressionStatement","src":"24207:13:25"},{"expression":{"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5545,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24235:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24262:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5547,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24246:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24246:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5560,"nodeType":"ExpressionStatement","src":"24235:49:25"},{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24298:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5562,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24308:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ExpressionStatement","src":"24298:13:25"},{"expression":{"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24325:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5566,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24335:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5568,"nodeType":"ExpressionStatement","src":"24325:13:25"},{"expression":{"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24353:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5571,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24363:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24363:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5584,"nodeType":"ExpressionStatement","src":"24353:47:25"},{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24414:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5586,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24424:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5588,"nodeType":"ExpressionStatement","src":"24414:13:25"},{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24441:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5590,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24451:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5592,"nodeType":"ExpressionStatement","src":"24441:13:25"},{"expression":{"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5593,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24469:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24495:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5595,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24479:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24479:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5608,"nodeType":"ExpressionStatement","src":"24469:47:25"},{"expression":{"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24530:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5610,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24540:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5612,"nodeType":"ExpressionStatement","src":"24530:13:25"},{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24557:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5614,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24567:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5616,"nodeType":"ExpressionStatement","src":"24557:13:25"},{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24585:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24611:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5619,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24595:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24595:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5632,"nodeType":"ExpressionStatement","src":"24585:47:25"},{"expression":{"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24646:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5634,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24656:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5636,"nodeType":"ExpressionStatement","src":"24646:13:25"},{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24673:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5638,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"24683:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5640,"nodeType":"ExpressionStatement","src":"24673:13:25"},{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24701:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"24727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5642,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"24711:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"24711:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"24701:36:25"}]},{"expression":{"id":5651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"24764:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5465,"id":5652,"nodeType":"Return","src":"24757:13:25"}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"23611:119:25","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:25","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"value","nameLocation":"23757:5:25","nodeType":"VariableDeclaration","scope":5654,"src":"23749:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:25"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5654,"src":"23787:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:25"},"scope":6045,"src":"23735:1042:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5687,"nodeType":"Block","src":"25010:175:25","statements":[{"id":5686,"nodeType":"UncheckedBlock","src":"25020:159:25","statements":[{"assignments":[5666],"declarations":[{"constant":false,"id":5666,"mutability":"mutable","name":"result","nameLocation":"25052:6:25","nodeType":"VariableDeclaration","scope":5686,"src":"25044:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5670,"initialValue":{"arguments":[{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"25066:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5667,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5654,5688],"referencedDeclaration":5654,"src":"25061:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"25093:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5675,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"25135:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":5674,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"25118:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4451_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"25153:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"25162:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"25102:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"25102:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5664,"id":5685,"nodeType":"Return","src":"25086:82:25"}]}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"24783:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:25","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"24952:5:25","nodeType":"VariableDeclaration","scope":5688,"src":"24944:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5660,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:25","nodeType":"VariableDeclaration","scope":5688,"src":"24959:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":5659,"nodeType":"UserDefinedTypeName","pathNode":{"id":5658,"name":"Rounding","nameLocations":["24959:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"24959:8:25"},"referencedDeclaration":4451,"src":"24959:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:25"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5688,"src":"25001:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5662,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:25"},"scope":6045,"src":"24930:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"25378:854:25","statements":[{"assignments":[5697],"declarations":[{"constant":false,"id":5697,"mutability":"mutable","name":"result","nameLocation":"25396:6:25","nodeType":"VariableDeclaration","scope":5816,"src":"25388:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5699,"initialValue":{"hexValue":"30","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:25"},{"id":5813,"nodeType":"UncheckedBlock","src":"25416:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25444:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"25440:103:25","trueBody":{"id":5715,"nodeType":"Block","src":"25463:80:25","statements":[{"expression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25481:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5710,"nodeType":"ExpressionStatement","src":"25481:17:25"},{"expression":{"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"25516:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5714,"nodeType":"ExpressionStatement","src":"25516:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25560:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5733,"nodeType":"IfStatement","src":"25556:103:25","trueBody":{"id":5732,"nodeType":"Block","src":"25579:80:25","statements":[{"expression":{"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25597:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5727,"nodeType":"ExpressionStatement","src":"25597:17:25"},{"expression":{"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"25632:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5731,"nodeType":"ExpressionStatement","src":"25632:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25676:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5750,"nodeType":"IfStatement","src":"25672:103:25","trueBody":{"id":5749,"nodeType":"Block","src":"25695:80:25","statements":[{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25713:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5744,"nodeType":"ExpressionStatement","src":"25713:17:25"},{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"25748:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5748,"nodeType":"ExpressionStatement","src":"25748:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25792:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5767,"nodeType":"IfStatement","src":"25788:100:25","trueBody":{"id":5766,"nodeType":"Block","src":"25810:78:25","statements":[{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25828:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5761,"nodeType":"ExpressionStatement","src":"25828:16:25"},{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"25862:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ExpressionStatement","src":"25862:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25905:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"25901:100:25","trueBody":{"id":5783,"nodeType":"Block","src":"25923:78:25","statements":[{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"25941:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5778,"nodeType":"ExpressionStatement","src":"25941:16:25"},{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"25975:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5782,"nodeType":"ExpressionStatement","src":"25975:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"26018:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"26014:100:25","trueBody":{"id":5800,"nodeType":"Block","src":"26036:78:25","statements":[{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"26054:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"26054:16:25"},{"expression":{"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"26088:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5799,"nodeType":"ExpressionStatement","src":"26088:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"26131:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5812,"nodeType":"IfStatement","src":"26127:66:25","trueBody":{"id":5811,"nodeType":"Block","src":"26149:44:25","statements":[{"expression":{"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"26167:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5810,"nodeType":"ExpressionStatement","src":"26167:11:25"}]}}]},{"expression":{"id":5814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"26219:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5695,"id":5815,"nodeType":"Return","src":"26212:13:25"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"25191:120:25","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:25","nodeType":"FunctionDefinition","parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"value","nameLocation":"25339:5:25","nodeType":"VariableDeclaration","scope":5817,"src":"25331:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:25"},"returnParameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5817,"src":"25369:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5693,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:25"},"scope":6045,"src":"25316:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5850,"nodeType":"Block","src":"26467:177:25","statements":[{"id":5849,"nodeType":"UncheckedBlock","src":"26477:161:25","statements":[{"assignments":[5829],"declarations":[{"constant":false,"id":5829,"mutability":"mutable","name":"result","nameLocation":"26509:6:25","nodeType":"VariableDeclaration","scope":5849,"src":"26501:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"26524:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5817,5851],"referencedDeclaration":5817,"src":"26518:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"26551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5838,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"26593:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":5837,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"26576:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4451_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"26612:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"26621:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"26560:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"26560:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5827,"id":5848,"nodeType":"Return","src":"26544:83:25"}]}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"26238:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5851,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:25","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"26409:5:25","nodeType":"VariableDeclaration","scope":5851,"src":"26401:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:25","nodeType":"VariableDeclaration","scope":5851,"src":"26416:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":5822,"nodeType":"UserDefinedTypeName","pathNode":{"id":5821,"name":"Rounding","nameLocations":["26416:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"26416:8:25"},"referencedDeclaration":4451,"src":"26416:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:25"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5851,"src":"26458:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:25"},"scope":6045,"src":"26386:258:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5987,"nodeType":"Block","src":"26964:674:25","statements":[{"assignments":[5860],"declarations":[{"constant":false,"id":5860,"mutability":"mutable","name":"result","nameLocation":"26982:6:25","nodeType":"VariableDeclaration","scope":5987,"src":"26974:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5859,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5862,"initialValue":{"hexValue":"30","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:25"},{"assignments":[5864],"declarations":[{"constant":false,"id":5864,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:25","nodeType":"VariableDeclaration","scope":5987,"src":"27002:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5865,"nodeType":"VariableDeclarationStatement","src":"27002:12:25"},{"id":5984,"nodeType":"UncheckedBlock","src":"27024:585:25","statements":[{"expression":{"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5866,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27048:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27071:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27055:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27055:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5879,"nodeType":"ExpressionStatement","src":"27048:46:25"},{"expression":{"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27108:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5881,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27118:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5885,"nodeType":"ExpressionStatement","src":"27108:20:25"},{"expression":{"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27142:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5887,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27152:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5891,"nodeType":"ExpressionStatement","src":"27142:19:25"},{"expression":{"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5892,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27176:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27199:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5893,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27183:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27183:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5905,"nodeType":"ExpressionStatement","src":"27176:45:25"},{"expression":{"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27235:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27245:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5911,"nodeType":"ExpressionStatement","src":"27235:19:25"},{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27268:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27278:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5917,"nodeType":"ExpressionStatement","src":"27268:18:25"},{"expression":{"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5918,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27301:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27324:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27308:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27308:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5931,"nodeType":"ExpressionStatement","src":"27301:45:25"},{"expression":{"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27360:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27370:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5937,"nodeType":"ExpressionStatement","src":"27360:19:25"},{"expression":{"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27393:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5939,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27403:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5943,"nodeType":"ExpressionStatement","src":"27393:18:25"},{"expression":{"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5944,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27426:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27449:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5945,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27433:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27433:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5957,"nodeType":"ExpressionStatement","src":"27426:45:25"},{"expression":{"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27485:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5959,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27495:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5963,"nodeType":"ExpressionStatement","src":"27485:19:25"},{"expression":{"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27518:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"27528:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5969,"nodeType":"ExpressionStatement","src":"27518:18:25"},{"expression":{"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5854,"src":"27577:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5971,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27561:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27561:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5983,"nodeType":"ExpressionStatement","src":"27551:47:25"}]},{"expression":{"id":5985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"27625:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5858,"id":5986,"nodeType":"Return","src":"27618:13:25"}]},"documentation":{"id":5852,"nodeType":"StructuredDocumentation","src":"26650:246:25","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5988,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:25","nodeType":"FunctionDefinition","parameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"value","nameLocation":"26925:5:25","nodeType":"VariableDeclaration","scope":5988,"src":"26917:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5853,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:25"},"returnParameters":{"id":5858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5988,"src":"26955:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:25"},"scope":6045,"src":"26901:737:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6024,"nodeType":"Block","src":"27875:184:25","statements":[{"id":6023,"nodeType":"UncheckedBlock","src":"27885:168:25","statements":[{"assignments":[6000],"declarations":[{"constant":false,"id":6000,"mutability":"mutable","name":"result","nameLocation":"27917:6:25","nodeType":"VariableDeclaration","scope":6023,"src":"27909:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5999,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6004,"initialValue":{"arguments":[{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"27933:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5988,6025],"referencedDeclaration":5988,"src":"27926:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"27960:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6009,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"28002:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":6008,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"27985:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4451_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"28021:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"28036:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"27969:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"27969:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5998,"id":6022,"nodeType":"Return","src":"27953:89:25"}]}]},"documentation":{"id":5989,"nodeType":"StructuredDocumentation","src":"27644:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6025,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:25","nodeType":"FunctionDefinition","parameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"value","nameLocation":"27817:5:25","nodeType":"VariableDeclaration","scope":6025,"src":"27809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5994,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:25","nodeType":"VariableDeclaration","scope":6025,"src":"27824:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":5993,"nodeType":"UserDefinedTypeName","pathNode":{"id":5992,"name":"Rounding","nameLocations":["27824:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"27824:8:25"},"referencedDeclaration":4451,"src":"27824:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:25"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6025,"src":"27866:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:25"},"scope":6045,"src":"27793:266:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"28257:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6036,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"28280:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6034,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:25","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6033,"id":6042,"nodeType":"Return","src":"28267:31:25"}]},"documentation":{"id":6026,"nodeType":"StructuredDocumentation","src":"28065:113:25","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:25","nodeType":"FunctionDefinition","parameters":{"id":6030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:25","nodeType":"VariableDeclaration","scope":6044,"src":"28209:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"},"typeName":{"id":6028,"nodeType":"UserDefinedTypeName","pathNode":{"id":6027,"name":"Rounding","nameLocations":["28209:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":4451,"src":"28209:8:25"},"referencedDeclaration":4451,"src":"28209:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4451","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:25"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6044,"src":"28251:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6031,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:25"},"scope":6045,"src":"28183:122:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6046,"src":"281:28026:25","usedErrors":[],"usedEvents":[]}],"src":"103:28205:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7810]},"id":7811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6047,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6048,"nodeType":"StructuredDocumentation","src":"218:550:26","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7810,"linearizedBaseContracts":[7810],"name":"SafeCast","nameLocation":"777:8:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6049,"nodeType":"StructuredDocumentation","src":"792:68:26","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6055,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:26","nodeType":"ErrorDefinition","parameters":{"id":6054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"bits","nameLocation":"908:4:26","nodeType":"VariableDeclaration","scope":6055,"src":"902:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6050,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6053,"mutability":"mutable","name":"value","nameLocation":"922:5:26","nodeType":"VariableDeclaration","scope":6055,"src":"914:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:26"},"src":"865:64:26"},{"documentation":{"id":6056,"nodeType":"StructuredDocumentation","src":"935:75:26","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6060,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:26","nodeType":"ErrorDefinition","parameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"value","nameLocation":"1056:5:26","nodeType":"VariableDeclaration","scope":6060,"src":"1049:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6057,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:26"},"src":"1015:48:26"},{"documentation":{"id":6061,"nodeType":"StructuredDocumentation","src":"1069:67:26","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6067,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:26","nodeType":"ErrorDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"bits","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":6067,"src":"1177:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6062,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"value","nameLocation":"1196:5:26","nodeType":"VariableDeclaration","scope":6067,"src":"1189:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6064,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:26"},"src":"1141:62:26"},{"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"1209:75:26","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6072,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:26","nodeType":"ErrorDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"value","nameLocation":"1331:5:26","nodeType":"VariableDeclaration","scope":6072,"src":"1323:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:26"},"src":"1289:49:26"},{"body":{"id":6099,"nodeType":"Block","src":"1695:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"1709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6082,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6081,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:26","memberName":"max","nodeType":"MemberAccess","src":"1717:17:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"1705:105:26","trueBody":{"id":6092,"nodeType":"Block","src":"1736:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"1793:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6087,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"1757:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"1750:49:26"}]}},{"expression":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6094,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:26","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6079,"id":6098,"nodeType":"Return","src":"1819:21:26"}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"1344:280:26","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:26","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"value","nameLocation":"1656:5:26","nodeType":"VariableDeclaration","scope":6100,"src":"1648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:26"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6100,"src":"1686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6077,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:26"},"scope":7810,"src":"1629:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"2204:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"2218:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6110,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6109,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:26","memberName":"max","nodeType":"MemberAccess","src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6121,"nodeType":"IfStatement","src":"2214:105:26","trueBody":{"id":6120,"nodeType":"Block","src":"2245:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"2302:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6115,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"2266:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6119,"nodeType":"RevertStatement","src":"2259:49:26"}]}},{"expression":{"arguments":[{"id":6124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6122,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:26","typeDescriptions":{}}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6107,"id":6126,"nodeType":"Return","src":"2328:21:26"}]},"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"1853:280:26","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:26","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"value","nameLocation":"2165:5:26","nodeType":"VariableDeclaration","scope":6128,"src":"2157:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:26"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6128,"src":"2195:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6105,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:26"},"scope":7810,"src":"2138:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"2713:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6138,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:26","memberName":"max","nodeType":"MemberAccess","src":"2735:17:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6149,"nodeType":"IfStatement","src":"2723:105:26","trueBody":{"id":6148,"nodeType":"Block","src":"2754:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2811:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"2775:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6147,"nodeType":"RevertStatement","src":"2768:49:26"}]}},{"expression":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6150,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:26","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6135,"id":6154,"nodeType":"Return","src":"2837:21:26"}]},"documentation":{"id":6129,"nodeType":"StructuredDocumentation","src":"2362:280:26","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:26","nodeType":"FunctionDefinition","parameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"value","nameLocation":"2674:5:26","nodeType":"VariableDeclaration","scope":6156,"src":"2666:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:26"},"returnParameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6156,"src":"2704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6133,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:26"},"scope":7810,"src":"2647:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6183,"nodeType":"Block","src":"3222:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"3236:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6166,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6165,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:26","memberName":"max","nodeType":"MemberAccess","src":"3244:17:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6177,"nodeType":"IfStatement","src":"3232:105:26","trueBody":{"id":6176,"nodeType":"Block","src":"3263:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"3320:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6171,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"3284:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6175,"nodeType":"RevertStatement","src":"3277:49:26"}]}},{"expression":{"arguments":[{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"3361:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6178,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{}}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6163,"id":6182,"nodeType":"Return","src":"3346:21:26"}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"2871:280:26","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6184,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:26","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"value","nameLocation":"3183:5:26","nodeType":"VariableDeclaration","scope":6184,"src":"3175:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:26"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6184,"src":"3213:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6161,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:26"},"scope":7810,"src":"3156:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6211,"nodeType":"Block","src":"3731:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"3745:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6194,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6193,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:26","memberName":"max","nodeType":"MemberAccess","src":"3753:17:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6205,"nodeType":"IfStatement","src":"3741:105:26","trueBody":{"id":6204,"nodeType":"Block","src":"3772:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"3829:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6199,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"3793:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6203,"nodeType":"RevertStatement","src":"3786:49:26"}]}},{"expression":{"arguments":[{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"3870:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6206,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:26","typeDescriptions":{}}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6191,"id":6210,"nodeType":"Return","src":"3855:21:26"}]},"documentation":{"id":6185,"nodeType":"StructuredDocumentation","src":"3380:280:26","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6212,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:26","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"value","nameLocation":"3692:5:26","nodeType":"VariableDeclaration","scope":6212,"src":"3684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:26"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6212,"src":"3722:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6189,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:26"},"scope":7810,"src":"3665:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6239,"nodeType":"Block","src":"4240:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4254:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6222,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6221,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:26","memberName":"max","nodeType":"MemberAccess","src":"4262:17:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"4250:105:26","trueBody":{"id":6232,"nodeType":"Block","src":"4281:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4338:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6227,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"4302:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6231,"nodeType":"RevertStatement","src":"4295:49:26"}]}},{"expression":{"arguments":[{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"4379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6234,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{}}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6219,"id":6238,"nodeType":"Return","src":"4364:21:26"}]},"documentation":{"id":6213,"nodeType":"StructuredDocumentation","src":"3889:280:26","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6240,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:26","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"value","nameLocation":"4201:5:26","nodeType":"VariableDeclaration","scope":6240,"src":"4193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:26"},"returnParameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6240,"src":"4231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6217,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:26"},"scope":7810,"src":"4174:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"4749:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"4763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6250,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6249,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:26","memberName":"max","nodeType":"MemberAccess","src":"4771:17:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6261,"nodeType":"IfStatement","src":"4759:105:26","trueBody":{"id":6260,"nodeType":"Block","src":"4790:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"4847:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6255,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"4811:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6259,"nodeType":"RevertStatement","src":"4804:49:26"}]}},{"expression":{"arguments":[{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"4888:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6262,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:26","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6247,"id":6266,"nodeType":"Return","src":"4873:21:26"}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"4398:280:26","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:26","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"value","nameLocation":"4710:5:26","nodeType":"VariableDeclaration","scope":6268,"src":"4702:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:26"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6268,"src":"4740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6245,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:26"},"scope":7810,"src":"4683:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6295,"nodeType":"Block","src":"5258:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"5272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6278,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:26","memberName":"max","nodeType":"MemberAccess","src":"5280:17:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6289,"nodeType":"IfStatement","src":"5268:105:26","trueBody":{"id":6288,"nodeType":"Block","src":"5299:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"5356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6283,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"5320:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6287,"nodeType":"RevertStatement","src":"5313:49:26"}]}},{"expression":{"arguments":[{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"5397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6290,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:26","typeDescriptions":{}}},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6275,"id":6294,"nodeType":"Return","src":"5382:21:26"}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"4907:280:26","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6296,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:26","nodeType":"FunctionDefinition","parameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"5219:5:26","nodeType":"VariableDeclaration","scope":6296,"src":"5211:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6270,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:26"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6296,"src":"5249:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6273,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:26"},"scope":7810,"src":"5192:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6323,"nodeType":"Block","src":"5767:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6306,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:26","memberName":"max","nodeType":"MemberAccess","src":"5789:17:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6317,"nodeType":"IfStatement","src":"5777:105:26","trueBody":{"id":6316,"nodeType":"Block","src":"5808:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"5865:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6311,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"5829:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6315,"nodeType":"RevertStatement","src":"5822:49:26"}]}},{"expression":{"arguments":[{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"5906:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6318,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:26","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6303,"id":6322,"nodeType":"Return","src":"5891:21:26"}]},"documentation":{"id":6297,"nodeType":"StructuredDocumentation","src":"5416:280:26","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6324,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:26","nodeType":"FunctionDefinition","parameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"value","nameLocation":"5728:5:26","nodeType":"VariableDeclaration","scope":6324,"src":"5720:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:26"},"returnParameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6324,"src":"5758:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6301,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:26"},"scope":7810,"src":"5701:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6351,"nodeType":"Block","src":"6276:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"6290:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6334,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6333,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:26","memberName":"max","nodeType":"MemberAccess","src":"6298:17:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6345,"nodeType":"IfStatement","src":"6286:105:26","trueBody":{"id":6344,"nodeType":"Block","src":"6317:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"6374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6339,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"6338:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6343,"nodeType":"RevertStatement","src":"6331:49:26"}]}},{"expression":{"arguments":[{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"6415:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6346,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:26","typeDescriptions":{}}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6331,"id":6350,"nodeType":"Return","src":"6400:21:26"}]},"documentation":{"id":6325,"nodeType":"StructuredDocumentation","src":"5925:280:26","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6352,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:26","nodeType":"FunctionDefinition","parameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"value","nameLocation":"6237:5:26","nodeType":"VariableDeclaration","scope":6352,"src":"6229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:26"},"returnParameters":{"id":6331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6352,"src":"6267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6329,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:26"},"scope":7810,"src":"6210:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"6785:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"6799:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6362,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6361,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:26","memberName":"max","nodeType":"MemberAccess","src":"6807:17:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6373,"nodeType":"IfStatement","src":"6795:105:26","trueBody":{"id":6372,"nodeType":"Block","src":"6826:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"6883:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6367,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"6847:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6371,"nodeType":"RevertStatement","src":"6840:49:26"}]}},{"expression":{"arguments":[{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"6924:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6374,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:26","typeDescriptions":{}}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6359,"id":6378,"nodeType":"Return","src":"6909:21:26"}]},"documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"6434:280:26","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:26","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"value","nameLocation":"6746:5:26","nodeType":"VariableDeclaration","scope":6380,"src":"6738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:26"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6380,"src":"6776:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6357,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:26"},"scope":7810,"src":"6719:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6407,"nodeType":"Block","src":"7294:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"7308:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6390,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:26","memberName":"max","nodeType":"MemberAccess","src":"7316:17:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6401,"nodeType":"IfStatement","src":"7304:105:26","trueBody":{"id":6400,"nodeType":"Block","src":"7335:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"7392:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6395,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"7356:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6399,"nodeType":"RevertStatement","src":"7349:49:26"}]}},{"expression":{"arguments":[{"id":6404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"7433:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6402,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:26","typeDescriptions":{}}},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6387,"id":6406,"nodeType":"Return","src":"7418:21:26"}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"6943:280:26","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6408,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:26","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"value","nameLocation":"7255:5:26","nodeType":"VariableDeclaration","scope":6408,"src":"7247:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:26"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6408,"src":"7285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6385,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:26"},"scope":7810,"src":"7228:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6435,"nodeType":"Block","src":"7803:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"7817:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6418,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6417,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:26","memberName":"max","nodeType":"MemberAccess","src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6429,"nodeType":"IfStatement","src":"7813:105:26","trueBody":{"id":6428,"nodeType":"Block","src":"7844:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"7901:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6423,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"7865:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6427,"nodeType":"RevertStatement","src":"7858:49:26"}]}},{"expression":{"arguments":[{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"7942:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6430,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:26","typeDescriptions":{}}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6415,"id":6434,"nodeType":"Return","src":"7927:21:26"}]},"documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"7452:280:26","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6436,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:26","nodeType":"FunctionDefinition","parameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"value","nameLocation":"7764:5:26","nodeType":"VariableDeclaration","scope":6436,"src":"7756:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:26"},"returnParameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6436,"src":"7794:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6413,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:26"},"scope":7810,"src":"7737:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"8312:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"8326:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6446,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6445,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:26","memberName":"max","nodeType":"MemberAccess","src":"8334:17:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6457,"nodeType":"IfStatement","src":"8322:105:26","trueBody":{"id":6456,"nodeType":"Block","src":"8353:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"8410:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6451,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"8374:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6455,"nodeType":"RevertStatement","src":"8367:49:26"}]}},{"expression":{"arguments":[{"id":6460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"8451:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6458,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:26","typeDescriptions":{}}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6443,"id":6462,"nodeType":"Return","src":"8436:21:26"}]},"documentation":{"id":6437,"nodeType":"StructuredDocumentation","src":"7961:280:26","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:26","nodeType":"FunctionDefinition","parameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"value","nameLocation":"8273:5:26","nodeType":"VariableDeclaration","scope":6464,"src":"8265:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6438,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:26"},"returnParameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6464,"src":"8303:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6441,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:26"},"scope":7810,"src":"8246:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6491,"nodeType":"Block","src":"8821:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8835:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6474,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:26","memberName":"max","nodeType":"MemberAccess","src":"8843:17:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6485,"nodeType":"IfStatement","src":"8831:105:26","trueBody":{"id":6484,"nodeType":"Block","src":"8862:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6479,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"8883:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6483,"nodeType":"RevertStatement","src":"8876:49:26"}]}},{"expression":{"arguments":[{"id":6488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"8960:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6486,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:26","typeDescriptions":{}}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6471,"id":6490,"nodeType":"Return","src":"8945:21:26"}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"8470:280:26","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:26","nodeType":"FunctionDefinition","parameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"value","nameLocation":"8782:5:26","nodeType":"VariableDeclaration","scope":6492,"src":"8774:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6466,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:26"},"returnParameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6492,"src":"8812:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6469,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:26"},"scope":7810,"src":"8755:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6519,"nodeType":"Block","src":"9330:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"9344:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6502,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6501,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:26","memberName":"max","nodeType":"MemberAccess","src":"9352:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6513,"nodeType":"IfStatement","src":"9340:105:26","trueBody":{"id":6512,"nodeType":"Block","src":"9371:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"9428:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6507,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"9392:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6511,"nodeType":"RevertStatement","src":"9385:49:26"}]}},{"expression":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"9469:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6514,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:26","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6499,"id":6518,"nodeType":"Return","src":"9454:21:26"}]},"documentation":{"id":6493,"nodeType":"StructuredDocumentation","src":"8979:280:26","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6520,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:26","nodeType":"FunctionDefinition","parameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"value","nameLocation":"9291:5:26","nodeType":"VariableDeclaration","scope":6520,"src":"9283:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:26"},"returnParameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6520,"src":"9321:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6497,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:26"},"scope":7810,"src":"9264:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6547,"nodeType":"Block","src":"9839:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"9853:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6530,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6529,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:26","memberName":"max","nodeType":"MemberAccess","src":"9861:17:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6541,"nodeType":"IfStatement","src":"9849:105:26","trueBody":{"id":6540,"nodeType":"Block","src":"9880:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"9937:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6535,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"9901:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6539,"nodeType":"RevertStatement","src":"9894:49:26"}]}},{"expression":{"arguments":[{"id":6544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"9978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6542,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:26","typeDescriptions":{}}},"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6527,"id":6546,"nodeType":"Return","src":"9963:21:26"}]},"documentation":{"id":6521,"nodeType":"StructuredDocumentation","src":"9488:280:26","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6548,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:26","nodeType":"FunctionDefinition","parameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"value","nameLocation":"9800:5:26","nodeType":"VariableDeclaration","scope":6548,"src":"9792:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:26"},"returnParameters":{"id":6527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6548,"src":"9830:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6525,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:26"},"scope":7810,"src":"9773:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6575,"nodeType":"Block","src":"10348:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6558,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:26","memberName":"max","nodeType":"MemberAccess","src":"10370:17:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6569,"nodeType":"IfStatement","src":"10358:105:26","trueBody":{"id":6568,"nodeType":"Block","src":"10389:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"10446:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6563,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"10410:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6567,"nodeType":"RevertStatement","src":"10403:49:26"}]}},{"expression":{"arguments":[{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"10487:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6570,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:26","typeDescriptions":{}}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6555,"id":6574,"nodeType":"Return","src":"10472:21:26"}]},"documentation":{"id":6549,"nodeType":"StructuredDocumentation","src":"9997:280:26","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6576,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:26","nodeType":"FunctionDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"value","nameLocation":"10309:5:26","nodeType":"VariableDeclaration","scope":6576,"src":"10301:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:26"},"returnParameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6576,"src":"10339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6553,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:26"},"scope":7810,"src":"10282:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6603,"nodeType":"Block","src":"10857:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10871:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6586,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6585,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:26","memberName":"max","nodeType":"MemberAccess","src":"10879:17:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6597,"nodeType":"IfStatement","src":"10867:105:26","trueBody":{"id":6596,"nodeType":"Block","src":"10898:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10955:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6591,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"10919:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6595,"nodeType":"RevertStatement","src":"10912:49:26"}]}},{"expression":{"arguments":[{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"10996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6598,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:26","typeDescriptions":{}}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6583,"id":6602,"nodeType":"Return","src":"10981:21:26"}]},"documentation":{"id":6577,"nodeType":"StructuredDocumentation","src":"10506:280:26","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:26","nodeType":"FunctionDefinition","parameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"value","nameLocation":"10818:5:26","nodeType":"VariableDeclaration","scope":6604,"src":"10810:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6578,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:26"},"returnParameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6604,"src":"10848:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6581,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:26"},"scope":7810,"src":"10791:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6631,"nodeType":"Block","src":"11360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"11374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6614,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6613,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:26","memberName":"max","nodeType":"MemberAccess","src":"11382:16:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6625,"nodeType":"IfStatement","src":"11370:103:26","trueBody":{"id":6624,"nodeType":"Block","src":"11400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"11456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6619,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"11421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6623,"nodeType":"RevertStatement","src":"11414:48:26"}]}},{"expression":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"11496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6626,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:26","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6611,"id":6630,"nodeType":"Return","src":"11482:20:26"}]},"documentation":{"id":6605,"nodeType":"StructuredDocumentation","src":"11015:276:26","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6632,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"value","nameLocation":"11322:5:26","nodeType":"VariableDeclaration","scope":6632,"src":"11314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:26"},"returnParameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6632,"src":"11352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6609,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:26"},"scope":7810,"src":"11296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6659,"nodeType":"Block","src":"11860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"11874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6642,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:26","memberName":"max","nodeType":"MemberAccess","src":"11882:16:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"IfStatement","src":"11870:103:26","trueBody":{"id":6652,"nodeType":"Block","src":"11900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"11956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6647,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"11921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6651,"nodeType":"RevertStatement","src":"11914:48:26"}]}},{"expression":{"arguments":[{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"11996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6654,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:26","typeDescriptions":{}}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6639,"id":6658,"nodeType":"Return","src":"11982:20:26"}]},"documentation":{"id":6633,"nodeType":"StructuredDocumentation","src":"11515:276:26","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6660,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:26","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"value","nameLocation":"11822:5:26","nodeType":"VariableDeclaration","scope":6660,"src":"11814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:26"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6660,"src":"11852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6637,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:26"},"scope":7810,"src":"11796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6687,"nodeType":"Block","src":"12360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"12374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6670,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:26","memberName":"max","nodeType":"MemberAccess","src":"12382:16:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6681,"nodeType":"IfStatement","src":"12370:103:26","trueBody":{"id":6680,"nodeType":"Block","src":"12400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"12456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6675,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"12421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6679,"nodeType":"RevertStatement","src":"12414:48:26"}]}},{"expression":{"arguments":[{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"12496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6682,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:26","typeDescriptions":{}}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6667,"id":6686,"nodeType":"Return","src":"12482:20:26"}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"12015:276:26","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"value","nameLocation":"12322:5:26","nodeType":"VariableDeclaration","scope":6688,"src":"12314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:26"},"returnParameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6688,"src":"12352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6665,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:26"},"scope":7810,"src":"12296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6715,"nodeType":"Block","src":"12860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6698,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6697,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:26","memberName":"max","nodeType":"MemberAccess","src":"12882:16:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6709,"nodeType":"IfStatement","src":"12870:103:26","trueBody":{"id":6708,"nodeType":"Block","src":"12900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6703,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"12921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6707,"nodeType":"RevertStatement","src":"12914:48:26"}]}},{"expression":{"arguments":[{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6691,"src":"12996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6710,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:26","typeDescriptions":{}}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6695,"id":6714,"nodeType":"Return","src":"12982:20:26"}]},"documentation":{"id":6689,"nodeType":"StructuredDocumentation","src":"12515:276:26","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6716,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:26","nodeType":"FunctionDefinition","parameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"value","nameLocation":"12822:5:26","nodeType":"VariableDeclaration","scope":6716,"src":"12814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6690,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:26"},"returnParameters":{"id":6695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6716,"src":"12852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6693,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:26"},"scope":7810,"src":"12796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6743,"nodeType":"Block","src":"13360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"13374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6726,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6725,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:26","memberName":"max","nodeType":"MemberAccess","src":"13382:16:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6737,"nodeType":"IfStatement","src":"13370:103:26","trueBody":{"id":6736,"nodeType":"Block","src":"13400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"13456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6731,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"13421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6735,"nodeType":"RevertStatement","src":"13414:48:26"}]}},{"expression":{"arguments":[{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"13496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6738,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:26","typeDescriptions":{}}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6723,"id":6742,"nodeType":"Return","src":"13482:20:26"}]},"documentation":{"id":6717,"nodeType":"StructuredDocumentation","src":"13015:276:26","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6744,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"value","nameLocation":"13322:5:26","nodeType":"VariableDeclaration","scope":6744,"src":"13314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:26"},"returnParameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6744,"src":"13352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6721,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:26"},"scope":7810,"src":"13296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6771,"nodeType":"Block","src":"13860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"13874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6754,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6753,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:26","memberName":"max","nodeType":"MemberAccess","src":"13882:16:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6765,"nodeType":"IfStatement","src":"13870:103:26","trueBody":{"id":6764,"nodeType":"Block","src":"13900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"13956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6759,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"13921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"RevertStatement","src":"13914:48:26"}]}},{"expression":{"arguments":[{"id":6768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"13996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6766,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:26","typeDescriptions":{}}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6751,"id":6770,"nodeType":"Return","src":"13982:20:26"}]},"documentation":{"id":6745,"nodeType":"StructuredDocumentation","src":"13515:276:26","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6772,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:26","nodeType":"FunctionDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"value","nameLocation":"13822:5:26","nodeType":"VariableDeclaration","scope":6772,"src":"13814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6746,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:26"},"returnParameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6772,"src":"13852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6749,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:26"},"scope":7810,"src":"13796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6799,"nodeType":"Block","src":"14360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"14374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6782,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6781,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:26","memberName":"max","nodeType":"MemberAccess","src":"14382:16:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6793,"nodeType":"IfStatement","src":"14370:103:26","trueBody":{"id":6792,"nodeType":"Block","src":"14400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"14456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6787,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"14421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6791,"nodeType":"RevertStatement","src":"14414:48:26"}]}},{"expression":{"arguments":[{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"14496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6794,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:26","typeDescriptions":{}}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6779,"id":6798,"nodeType":"Return","src":"14482:20:26"}]},"documentation":{"id":6773,"nodeType":"StructuredDocumentation","src":"14015:276:26","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"value","nameLocation":"14322:5:26","nodeType":"VariableDeclaration","scope":6800,"src":"14314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:26"},"returnParameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6800,"src":"14352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6777,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:26"},"scope":7810,"src":"14296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"14860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"14874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6810,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6809,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:26","memberName":"max","nodeType":"MemberAccess","src":"14882:16:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6821,"nodeType":"IfStatement","src":"14870:103:26","trueBody":{"id":6820,"nodeType":"Block","src":"14900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"14956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6815,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"14921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6819,"nodeType":"RevertStatement","src":"14914:48:26"}]}},{"expression":{"arguments":[{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"14996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6822,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:26","typeDescriptions":{}}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6807,"id":6826,"nodeType":"Return","src":"14982:20:26"}]},"documentation":{"id":6801,"nodeType":"StructuredDocumentation","src":"14515:276:26","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:26","nodeType":"FunctionDefinition","parameters":{"id":6804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6803,"mutability":"mutable","name":"value","nameLocation":"14822:5:26","nodeType":"VariableDeclaration","scope":6828,"src":"14814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6802,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:26"},"returnParameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6828,"src":"14852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6805,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:26"},"scope":7810,"src":"14796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6855,"nodeType":"Block","src":"15360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"15374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6838,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:26","memberName":"max","nodeType":"MemberAccess","src":"15382:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6849,"nodeType":"IfStatement","src":"15370:103:26","trueBody":{"id":6848,"nodeType":"Block","src":"15400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"15456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6843,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"15421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6847,"nodeType":"RevertStatement","src":"15414:48:26"}]}},{"expression":{"arguments":[{"id":6852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"15496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6850,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:26","typeDescriptions":{}}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6835,"id":6854,"nodeType":"Return","src":"15482:20:26"}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"15015:276:26","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6856,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":6856,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:26"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6856,"src":"15352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6833,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:26"},"scope":7810,"src":"15296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6883,"nodeType":"Block","src":"15860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"15874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6866,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6865,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:26","memberName":"max","nodeType":"MemberAccess","src":"15882:16:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6877,"nodeType":"IfStatement","src":"15870:103:26","trueBody":{"id":6876,"nodeType":"Block","src":"15900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"15956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6871,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"15921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6875,"nodeType":"RevertStatement","src":"15914:48:26"}]}},{"expression":{"arguments":[{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"15996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6878,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:26","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6863,"id":6882,"nodeType":"Return","src":"15982:20:26"}]},"documentation":{"id":6857,"nodeType":"StructuredDocumentation","src":"15515:276:26","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6884,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:26","nodeType":"FunctionDefinition","parameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"value","nameLocation":"15822:5:26","nodeType":"VariableDeclaration","scope":6884,"src":"15814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:26"},"returnParameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6884,"src":"15852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6861,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:26"},"scope":7810,"src":"15796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6911,"nodeType":"Block","src":"16360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"16374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6894,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6893,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:26","memberName":"max","nodeType":"MemberAccess","src":"16382:16:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6905,"nodeType":"IfStatement","src":"16370:103:26","trueBody":{"id":6904,"nodeType":"Block","src":"16400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"16456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6899,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"16421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"RevertStatement","src":"16414:48:26"}]}},{"expression":{"arguments":[{"id":6908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"16496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6906,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:26","typeDescriptions":{}}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6891,"id":6910,"nodeType":"Return","src":"16482:20:26"}]},"documentation":{"id":6885,"nodeType":"StructuredDocumentation","src":"16015:276:26","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6912,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:26","nodeType":"FunctionDefinition","parameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"value","nameLocation":"16322:5:26","nodeType":"VariableDeclaration","scope":6912,"src":"16314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:26"},"returnParameters":{"id":6891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6912,"src":"16352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6889,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:26"},"scope":7810,"src":"16296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6939,"nodeType":"Block","src":"16854:146:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"16868:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6922,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6921,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:26","memberName":"max","nodeType":"MemberAccess","src":"16876:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6933,"nodeType":"IfStatement","src":"16864:101:26","trueBody":{"id":6932,"nodeType":"Block","src":"16893:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"16948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6927,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"16914:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6931,"nodeType":"RevertStatement","src":"16907:47:26"}]}},{"expression":{"arguments":[{"id":6936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"16987:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6934,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:26","typeDescriptions":{}}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6919,"id":6938,"nodeType":"Return","src":"16974:19:26"}]},"documentation":{"id":6913,"nodeType":"StructuredDocumentation","src":"16515:272:26","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6940,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:26","nodeType":"FunctionDefinition","parameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"value","nameLocation":"16817:5:26","nodeType":"VariableDeclaration","scope":6940,"src":"16809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:26"},"returnParameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6940,"src":"16847:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6917,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:26"},"scope":7810,"src":"16792:208:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6962,"nodeType":"Block","src":"17236:128:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"17250:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6956,"nodeType":"IfStatement","src":"17246:81:26","trueBody":{"id":6955,"nodeType":"Block","src":"17261:66:26","statements":[{"errorCall":{"arguments":[{"id":6952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"17310:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6951,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"17282:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6954,"nodeType":"RevertStatement","src":"17275:41:26"}]}},{"expression":{"arguments":[{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"17351:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:26","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6947,"id":6961,"nodeType":"Return","src":"17336:21:26"}]},"documentation":{"id":6941,"nodeType":"StructuredDocumentation","src":"17006:160:26","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:26","nodeType":"FunctionDefinition","parameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"value","nameLocation":"17197:5:26","nodeType":"VariableDeclaration","scope":6963,"src":"17190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6942,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:26"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6963,"src":"17227:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6945,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:26"},"scope":7810,"src":"17171:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6988,"nodeType":"Block","src":"17761:150:26","statements":[{"expression":{"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"17771:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"17791:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6972,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:26","typeDescriptions":{}}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6977,"nodeType":"ExpressionStatement","src":"17771:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6969,"src":"17811:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"17825:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"IfStatement","src":"17807:98:26","trueBody":{"id":6986,"nodeType":"Block","src":"17832:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"17888:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6981,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"17853:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6985,"nodeType":"RevertStatement","src":"17846:48:26"}]}}]},"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"17370:312:26","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6989,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:26","nodeType":"FunctionDefinition","parameters":{"id":6967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"value","nameLocation":"17712:5:26","nodeType":"VariableDeclaration","scope":6989,"src":"17705:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6965,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:26"},"returnParameters":{"id":6970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6969,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:26","nodeType":"VariableDeclaration","scope":6989,"src":"17742:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6968,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:26"},"scope":7810,"src":"17687:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7014,"nodeType":"Block","src":"18308:150:26","statements":[{"expression":{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"18318:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"18338:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6998,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:26","typeDescriptions":{}}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7003,"nodeType":"ExpressionStatement","src":"18318:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"18358:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"18372:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7013,"nodeType":"IfStatement","src":"18354:98:26","trueBody":{"id":7012,"nodeType":"Block","src":"18379:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6992,"src":"18435:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7007,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"18400:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7011,"nodeType":"RevertStatement","src":"18393:48:26"}]}}]},"documentation":{"id":6990,"nodeType":"StructuredDocumentation","src":"17917:312:26","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7015,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:26","nodeType":"FunctionDefinition","parameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"value","nameLocation":"18259:5:26","nodeType":"VariableDeclaration","scope":7015,"src":"18252:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6991,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:26"},"returnParameters":{"id":6996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:26","nodeType":"VariableDeclaration","scope":7015,"src":"18289:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6994,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:26"},"scope":7810,"src":"18234:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7040,"nodeType":"Block","src":"18855:150:26","statements":[{"expression":{"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"18865:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"18885:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7024,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:26","typeDescriptions":{}}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7029,"nodeType":"ExpressionStatement","src":"18865:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"18905:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"18919:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7039,"nodeType":"IfStatement","src":"18901:98:26","trueBody":{"id":7038,"nodeType":"Block","src":"18926:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7018,"src":"18982:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7033,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"18947:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7037,"nodeType":"RevertStatement","src":"18940:48:26"}]}}]},"documentation":{"id":7016,"nodeType":"StructuredDocumentation","src":"18464:312:26","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7041,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:26","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7018,"mutability":"mutable","name":"value","nameLocation":"18806:5:26","nodeType":"VariableDeclaration","scope":7041,"src":"18799:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7017,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:26"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:26","nodeType":"VariableDeclaration","scope":7041,"src":"18836:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7020,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:26"},"scope":7810,"src":"18781:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7066,"nodeType":"Block","src":"19402:150:26","statements":[{"expression":{"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"19412:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"19432:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7050,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:26","typeDescriptions":{}}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7055,"nodeType":"ExpressionStatement","src":"19412:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"19452:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"19466:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7065,"nodeType":"IfStatement","src":"19448:98:26","trueBody":{"id":7064,"nodeType":"Block","src":"19473:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"19529:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7059,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"19494:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"RevertStatement","src":"19487:48:26"}]}}]},"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"19011:312:26","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7067,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:26","nodeType":"FunctionDefinition","parameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"value","nameLocation":"19353:5:26","nodeType":"VariableDeclaration","scope":7067,"src":"19346:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7043,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:26"},"returnParameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7047,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:26","nodeType":"VariableDeclaration","scope":7067,"src":"19383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7046,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:26"},"scope":7810,"src":"19328:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7092,"nodeType":"Block","src":"19949:150:26","statements":[{"expression":{"id":7080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"19959:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"19979:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7076,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:26","typeDescriptions":{}}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7081,"nodeType":"ExpressionStatement","src":"19959:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"19999:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"20013:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7091,"nodeType":"IfStatement","src":"19995:98:26","trueBody":{"id":7090,"nodeType":"Block","src":"20020:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"20076:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7085,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"20041:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7089,"nodeType":"RevertStatement","src":"20034:48:26"}]}}]},"documentation":{"id":7068,"nodeType":"StructuredDocumentation","src":"19558:312:26","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7093,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:26","nodeType":"FunctionDefinition","parameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"value","nameLocation":"19900:5:26","nodeType":"VariableDeclaration","scope":7093,"src":"19893:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7069,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:26"},"returnParameters":{"id":7074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7073,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:26","nodeType":"VariableDeclaration","scope":7093,"src":"19930:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7072,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:26"},"scope":7810,"src":"19875:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7118,"nodeType":"Block","src":"20496:150:26","statements":[{"expression":{"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"20506:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"20526:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7102,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:26","typeDescriptions":{}}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7107,"nodeType":"ExpressionStatement","src":"20506:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"20546:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"20560:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7117,"nodeType":"IfStatement","src":"20542:98:26","trueBody":{"id":7116,"nodeType":"Block","src":"20567:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"20623:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7111,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"20588:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7115,"nodeType":"RevertStatement","src":"20581:48:26"}]}}]},"documentation":{"id":7094,"nodeType":"StructuredDocumentation","src":"20105:312:26","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7119,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:26","nodeType":"FunctionDefinition","parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"value","nameLocation":"20447:5:26","nodeType":"VariableDeclaration","scope":7119,"src":"20440:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7095,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:26"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:26","nodeType":"VariableDeclaration","scope":7119,"src":"20477:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7098,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:26"},"scope":7810,"src":"20422:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7144,"nodeType":"Block","src":"21043:150:26","statements":[{"expression":{"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"21053:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"21073:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7128,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:26","typeDescriptions":{}}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7133,"nodeType":"ExpressionStatement","src":"21053:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"21093:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"21107:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7143,"nodeType":"IfStatement","src":"21089:98:26","trueBody":{"id":7142,"nodeType":"Block","src":"21114:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"21170:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7137,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"21135:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7141,"nodeType":"RevertStatement","src":"21128:48:26"}]}}]},"documentation":{"id":7120,"nodeType":"StructuredDocumentation","src":"20652:312:26","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:26","nodeType":"FunctionDefinition","parameters":{"id":7123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7122,"mutability":"mutable","name":"value","nameLocation":"20994:5:26","nodeType":"VariableDeclaration","scope":7145,"src":"20987:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7121,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:26"},"returnParameters":{"id":7126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7125,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:26","nodeType":"VariableDeclaration","scope":7145,"src":"21024:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7124,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:26"},"scope":7810,"src":"20969:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7170,"nodeType":"Block","src":"21590:150:26","statements":[{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"21600:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"21620:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7154,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:26","typeDescriptions":{}}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7159,"nodeType":"ExpressionStatement","src":"21600:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"21640:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"21654:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7169,"nodeType":"IfStatement","src":"21636:98:26","trueBody":{"id":7168,"nodeType":"Block","src":"21661:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"21717:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7163,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"21682:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7167,"nodeType":"RevertStatement","src":"21675:48:26"}]}}]},"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"21199:312:26","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:26","nodeType":"FunctionDefinition","parameters":{"id":7149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"value","nameLocation":"21541:5:26","nodeType":"VariableDeclaration","scope":7171,"src":"21534:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7147,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:26"},"returnParameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7151,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:26","nodeType":"VariableDeclaration","scope":7171,"src":"21571:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7150,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:26"},"scope":7810,"src":"21516:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7196,"nodeType":"Block","src":"22137:150:26","statements":[{"expression":{"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"22147:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"22167:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7180,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:26","typeDescriptions":{}}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7185,"nodeType":"ExpressionStatement","src":"22147:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"22187:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"22201:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7195,"nodeType":"IfStatement","src":"22183:98:26","trueBody":{"id":7194,"nodeType":"Block","src":"22208:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"22264:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7189,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"22229:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7193,"nodeType":"RevertStatement","src":"22222:48:26"}]}}]},"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"21746:312:26","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7197,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:26","nodeType":"FunctionDefinition","parameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"value","nameLocation":"22088:5:26","nodeType":"VariableDeclaration","scope":7197,"src":"22081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7173,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:26"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:26","nodeType":"VariableDeclaration","scope":7197,"src":"22118:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7176,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:26"},"scope":7810,"src":"22063:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7222,"nodeType":"Block","src":"22684:150:26","statements":[{"expression":{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"22694:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"22714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7206,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:26","typeDescriptions":{}}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7211,"nodeType":"ExpressionStatement","src":"22694:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7203,"src":"22734:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"22748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7221,"nodeType":"IfStatement","src":"22730:98:26","trueBody":{"id":7220,"nodeType":"Block","src":"22755:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7200,"src":"22811:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7215,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"22776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7219,"nodeType":"RevertStatement","src":"22769:48:26"}]}}]},"documentation":{"id":7198,"nodeType":"StructuredDocumentation","src":"22293:312:26","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7223,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:26","nodeType":"FunctionDefinition","parameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7200,"mutability":"mutable","name":"value","nameLocation":"22635:5:26","nodeType":"VariableDeclaration","scope":7223,"src":"22628:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7199,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:26"},"returnParameters":{"id":7204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7203,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:26","nodeType":"VariableDeclaration","scope":7223,"src":"22665:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7202,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:26"},"scope":7810,"src":"22610:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7248,"nodeType":"Block","src":"23231:150:26","statements":[{"expression":{"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"23241:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"23261:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7232,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:26","typeDescriptions":{}}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7237,"nodeType":"ExpressionStatement","src":"23241:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"23281:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"23295:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7247,"nodeType":"IfStatement","src":"23277:98:26","trueBody":{"id":7246,"nodeType":"Block","src":"23302:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7226,"src":"23358:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7241,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"23323:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7245,"nodeType":"RevertStatement","src":"23316:48:26"}]}}]},"documentation":{"id":7224,"nodeType":"StructuredDocumentation","src":"22840:312:26","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7249,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:26","nodeType":"FunctionDefinition","parameters":{"id":7227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7226,"mutability":"mutable","name":"value","nameLocation":"23182:5:26","nodeType":"VariableDeclaration","scope":7249,"src":"23175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7225,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:26"},"returnParameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:26","nodeType":"VariableDeclaration","scope":7249,"src":"23212:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7228,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:26"},"scope":7810,"src":"23157:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7274,"nodeType":"Block","src":"23778:150:26","statements":[{"expression":{"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"23788:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"23808:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7258,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:26","typeDescriptions":{}}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7263,"nodeType":"ExpressionStatement","src":"23788:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7255,"src":"23828:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"23842:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7273,"nodeType":"IfStatement","src":"23824:98:26","trueBody":{"id":7272,"nodeType":"Block","src":"23849:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"23905:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7267,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"23870:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7271,"nodeType":"RevertStatement","src":"23863:48:26"}]}}]},"documentation":{"id":7250,"nodeType":"StructuredDocumentation","src":"23387:312:26","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7275,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:26","nodeType":"FunctionDefinition","parameters":{"id":7253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7252,"mutability":"mutable","name":"value","nameLocation":"23729:5:26","nodeType":"VariableDeclaration","scope":7275,"src":"23722:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7251,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:26"},"returnParameters":{"id":7256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7255,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:26","nodeType":"VariableDeclaration","scope":7275,"src":"23759:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7254,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:26"},"scope":7810,"src":"23704:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7300,"nodeType":"Block","src":"24325:150:26","statements":[{"expression":{"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"24335:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"24355:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7284,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:26","typeDescriptions":{}}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7289,"nodeType":"ExpressionStatement","src":"24335:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"24375:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"24389:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7299,"nodeType":"IfStatement","src":"24371:98:26","trueBody":{"id":7298,"nodeType":"Block","src":"24396:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"24452:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7293,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"24417:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7297,"nodeType":"RevertStatement","src":"24410:48:26"}]}}]},"documentation":{"id":7276,"nodeType":"StructuredDocumentation","src":"23934:312:26","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7301,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:26","nodeType":"FunctionDefinition","parameters":{"id":7279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7278,"mutability":"mutable","name":"value","nameLocation":"24276:5:26","nodeType":"VariableDeclaration","scope":7301,"src":"24269:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7277,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:26"},"returnParameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:26","nodeType":"VariableDeclaration","scope":7301,"src":"24306:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7280,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:26"},"scope":7810,"src":"24251:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7326,"nodeType":"Block","src":"24872:150:26","statements":[{"expression":{"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"24882:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"24902:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7310,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:26","typeDescriptions":{}}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7315,"nodeType":"ExpressionStatement","src":"24882:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7307,"src":"24922:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"24936:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7325,"nodeType":"IfStatement","src":"24918:98:26","trueBody":{"id":7324,"nodeType":"Block","src":"24943:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7304,"src":"24999:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7319,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"24964:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7323,"nodeType":"RevertStatement","src":"24957:48:26"}]}}]},"documentation":{"id":7302,"nodeType":"StructuredDocumentation","src":"24481:312:26","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7327,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:26","nodeType":"FunctionDefinition","parameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"value","nameLocation":"24823:5:26","nodeType":"VariableDeclaration","scope":7327,"src":"24816:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7303,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:26"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7307,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:26","nodeType":"VariableDeclaration","scope":7327,"src":"24853:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7306,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:26"},"scope":7810,"src":"24798:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7352,"nodeType":"Block","src":"25419:150:26","statements":[{"expression":{"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"25429:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"25449:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7336,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:26","typeDescriptions":{}}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7341,"nodeType":"ExpressionStatement","src":"25429:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"25469:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"25483:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7351,"nodeType":"IfStatement","src":"25465:98:26","trueBody":{"id":7350,"nodeType":"Block","src":"25490:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"25546:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7345,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"25511:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7349,"nodeType":"RevertStatement","src":"25504:48:26"}]}}]},"documentation":{"id":7328,"nodeType":"StructuredDocumentation","src":"25028:312:26","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7353,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:26","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"value","nameLocation":"25370:5:26","nodeType":"VariableDeclaration","scope":7353,"src":"25363:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7329,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:26"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:26","nodeType":"VariableDeclaration","scope":7353,"src":"25400:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7332,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:26"},"scope":7810,"src":"25345:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7378,"nodeType":"Block","src":"25966:150:26","statements":[{"expression":{"id":7366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"25976:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"25996:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7362,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:26","typeDescriptions":{}}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7367,"nodeType":"ExpressionStatement","src":"25976:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"26016:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"26030:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7377,"nodeType":"IfStatement","src":"26012:98:26","trueBody":{"id":7376,"nodeType":"Block","src":"26037:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"26093:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7371,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"26058:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7375,"nodeType":"RevertStatement","src":"26051:48:26"}]}}]},"documentation":{"id":7354,"nodeType":"StructuredDocumentation","src":"25575:312:26","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7379,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:26","nodeType":"FunctionDefinition","parameters":{"id":7357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7356,"mutability":"mutable","name":"value","nameLocation":"25917:5:26","nodeType":"VariableDeclaration","scope":7379,"src":"25910:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7355,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:26"},"returnParameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7359,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:26","nodeType":"VariableDeclaration","scope":7379,"src":"25947:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7358,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:26"},"scope":7810,"src":"25892:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7404,"nodeType":"Block","src":"26513:150:26","statements":[{"expression":{"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"26523:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"26543:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7388,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:26","typeDescriptions":{}}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7393,"nodeType":"ExpressionStatement","src":"26523:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"26563:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"26577:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7403,"nodeType":"IfStatement","src":"26559:98:26","trueBody":{"id":7402,"nodeType":"Block","src":"26584:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"26640:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7397,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"26605:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"RevertStatement","src":"26598:48:26"}]}}]},"documentation":{"id":7380,"nodeType":"StructuredDocumentation","src":"26122:312:26","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7405,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:26","nodeType":"FunctionDefinition","parameters":{"id":7383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"value","nameLocation":"26464:5:26","nodeType":"VariableDeclaration","scope":7405,"src":"26457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7381,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:26"},"returnParameters":{"id":7386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7385,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:26","nodeType":"VariableDeclaration","scope":7405,"src":"26494:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7384,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:26"},"scope":7810,"src":"26439:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7430,"nodeType":"Block","src":"27060:150:26","statements":[{"expression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"27070:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"27090:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7414,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:26","typeDescriptions":{}}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7419,"nodeType":"ExpressionStatement","src":"27070:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7411,"src":"27110:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"27124:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7429,"nodeType":"IfStatement","src":"27106:98:26","trueBody":{"id":7428,"nodeType":"Block","src":"27131:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7423,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"27152:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7427,"nodeType":"RevertStatement","src":"27145:48:26"}]}}]},"documentation":{"id":7406,"nodeType":"StructuredDocumentation","src":"26669:312:26","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7431,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:26","nodeType":"FunctionDefinition","parameters":{"id":7409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7408,"mutability":"mutable","name":"value","nameLocation":"27011:5:26","nodeType":"VariableDeclaration","scope":7431,"src":"27004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7407,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:26"},"returnParameters":{"id":7412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7411,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:26","nodeType":"VariableDeclaration","scope":7431,"src":"27041:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7410,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:26"},"scope":7810,"src":"26986:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7456,"nodeType":"Block","src":"27607:150:26","statements":[{"expression":{"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"27617:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"27637:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7440,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:26","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7445,"nodeType":"ExpressionStatement","src":"27617:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7437,"src":"27657:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"27671:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7455,"nodeType":"IfStatement","src":"27653:98:26","trueBody":{"id":7454,"nodeType":"Block","src":"27678:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"27734:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7449,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"27699:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7453,"nodeType":"RevertStatement","src":"27692:48:26"}]}}]},"documentation":{"id":7432,"nodeType":"StructuredDocumentation","src":"27216:312:26","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7457,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:26","nodeType":"FunctionDefinition","parameters":{"id":7435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7434,"mutability":"mutable","name":"value","nameLocation":"27558:5:26","nodeType":"VariableDeclaration","scope":7457,"src":"27551:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7433,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:26"},"returnParameters":{"id":7438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7437,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:26","nodeType":"VariableDeclaration","scope":7457,"src":"27588:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7436,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:26"},"scope":7810,"src":"27533:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7482,"nodeType":"Block","src":"28147:148:26","statements":[{"expression":{"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"28157:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"28176:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7466,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:26","typeDescriptions":{}}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7471,"nodeType":"ExpressionStatement","src":"28157:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"28196:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"28210:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7481,"nodeType":"IfStatement","src":"28192:97:26","trueBody":{"id":7480,"nodeType":"Block","src":"28217:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"28272:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7475,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"28238:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7479,"nodeType":"RevertStatement","src":"28231:47:26"}]}}]},"documentation":{"id":7458,"nodeType":"StructuredDocumentation","src":"27763:307:26","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7483,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:26","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"value","nameLocation":"28099:5:26","nodeType":"VariableDeclaration","scope":7483,"src":"28092:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7459,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:26"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:26","nodeType":"VariableDeclaration","scope":7483,"src":"28129:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7462,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:26"},"scope":7810,"src":"28075:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7508,"nodeType":"Block","src":"28685:148:26","statements":[{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"28695:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"28714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7492,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:26","typeDescriptions":{}}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7497,"nodeType":"ExpressionStatement","src":"28695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"28734:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"28748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7507,"nodeType":"IfStatement","src":"28730:97:26","trueBody":{"id":7506,"nodeType":"Block","src":"28755:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"28810:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7501,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"28776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7505,"nodeType":"RevertStatement","src":"28769:47:26"}]}}]},"documentation":{"id":7484,"nodeType":"StructuredDocumentation","src":"28301:307:26","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7509,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:26","nodeType":"FunctionDefinition","parameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"value","nameLocation":"28637:5:26","nodeType":"VariableDeclaration","scope":7509,"src":"28630:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7485,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:26"},"returnParameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7489,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:26","nodeType":"VariableDeclaration","scope":7509,"src":"28667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7488,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:26"},"scope":7810,"src":"28613:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7534,"nodeType":"Block","src":"29223:148:26","statements":[{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"29233:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"29252:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7518,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:26","typeDescriptions":{}}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7523,"nodeType":"ExpressionStatement","src":"29233:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7515,"src":"29272:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"29286:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7533,"nodeType":"IfStatement","src":"29268:97:26","trueBody":{"id":7532,"nodeType":"Block","src":"29293:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"29348:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7527,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"29314:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7531,"nodeType":"RevertStatement","src":"29307:47:26"}]}}]},"documentation":{"id":7510,"nodeType":"StructuredDocumentation","src":"28839:307:26","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7535,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:26","nodeType":"FunctionDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7512,"mutability":"mutable","name":"value","nameLocation":"29175:5:26","nodeType":"VariableDeclaration","scope":7535,"src":"29168:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7511,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:26"},"returnParameters":{"id":7516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7515,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:26","nodeType":"VariableDeclaration","scope":7535,"src":"29205:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7514,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:26"},"scope":7810,"src":"29151:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7560,"nodeType":"Block","src":"29761:148:26","statements":[{"expression":{"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"29771:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"29790:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7544,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:26","typeDescriptions":{}}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7549,"nodeType":"ExpressionStatement","src":"29771:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"29810:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"29824:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7559,"nodeType":"IfStatement","src":"29806:97:26","trueBody":{"id":7558,"nodeType":"Block","src":"29831:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"29886:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7553,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"29852:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7557,"nodeType":"RevertStatement","src":"29845:47:26"}]}}]},"documentation":{"id":7536,"nodeType":"StructuredDocumentation","src":"29377:307:26","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7561,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:26","nodeType":"FunctionDefinition","parameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"value","nameLocation":"29713:5:26","nodeType":"VariableDeclaration","scope":7561,"src":"29706:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7537,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:26"},"returnParameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:26","nodeType":"VariableDeclaration","scope":7561,"src":"29743:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7540,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:26"},"scope":7810,"src":"29689:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7586,"nodeType":"Block","src":"30299:148:26","statements":[{"expression":{"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"30309:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"30328:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7570,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:26","typeDescriptions":{}}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7575,"nodeType":"ExpressionStatement","src":"30309:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"30348:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7585,"nodeType":"IfStatement","src":"30344:97:26","trueBody":{"id":7584,"nodeType":"Block","src":"30369:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"30424:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7579,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"30390:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7583,"nodeType":"RevertStatement","src":"30383:47:26"}]}}]},"documentation":{"id":7562,"nodeType":"StructuredDocumentation","src":"29915:307:26","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7587,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:26","nodeType":"FunctionDefinition","parameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"value","nameLocation":"30251:5:26","nodeType":"VariableDeclaration","scope":7587,"src":"30244:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7563,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:26"},"returnParameters":{"id":7568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7567,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:26","nodeType":"VariableDeclaration","scope":7587,"src":"30281:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7566,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:26"},"scope":7810,"src":"30227:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7612,"nodeType":"Block","src":"30837:148:26","statements":[{"expression":{"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"30847:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"30866:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7596,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:26","typeDescriptions":{}}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7601,"nodeType":"ExpressionStatement","src":"30847:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"30886:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"30900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7611,"nodeType":"IfStatement","src":"30882:97:26","trueBody":{"id":7610,"nodeType":"Block","src":"30907:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"30962:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7605,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"30928:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7609,"nodeType":"RevertStatement","src":"30921:47:26"}]}}]},"documentation":{"id":7588,"nodeType":"StructuredDocumentation","src":"30453:307:26","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7613,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:26","nodeType":"FunctionDefinition","parameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"value","nameLocation":"30789:5:26","nodeType":"VariableDeclaration","scope":7613,"src":"30782:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7589,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:26"},"returnParameters":{"id":7594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7593,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:26","nodeType":"VariableDeclaration","scope":7613,"src":"30819:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7592,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:26"},"scope":7810,"src":"30765:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7638,"nodeType":"Block","src":"31375:148:26","statements":[{"expression":{"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"31385:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"31404:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7622,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:26","typeDescriptions":{}}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7627,"nodeType":"ExpressionStatement","src":"31385:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"31424:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"31438:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7637,"nodeType":"IfStatement","src":"31420:97:26","trueBody":{"id":7636,"nodeType":"Block","src":"31445:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"31500:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7631,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"31466:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7635,"nodeType":"RevertStatement","src":"31459:47:26"}]}}]},"documentation":{"id":7614,"nodeType":"StructuredDocumentation","src":"30991:307:26","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7639,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:26","nodeType":"FunctionDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"value","nameLocation":"31327:5:26","nodeType":"VariableDeclaration","scope":7639,"src":"31320:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7615,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:26"},"returnParameters":{"id":7620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7619,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:26","nodeType":"VariableDeclaration","scope":7639,"src":"31357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7618,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:26"},"scope":7810,"src":"31303:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7664,"nodeType":"Block","src":"31913:148:26","statements":[{"expression":{"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"31923:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"31942:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7648,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:26","typeDescriptions":{}}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7653,"nodeType":"ExpressionStatement","src":"31923:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7645,"src":"31962:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"31976:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7663,"nodeType":"IfStatement","src":"31958:97:26","trueBody":{"id":7662,"nodeType":"Block","src":"31983:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"32038:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7657,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"32004:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7661,"nodeType":"RevertStatement","src":"31997:47:26"}]}}]},"documentation":{"id":7640,"nodeType":"StructuredDocumentation","src":"31529:307:26","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:26","nodeType":"FunctionDefinition","parameters":{"id":7643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7642,"mutability":"mutable","name":"value","nameLocation":"31865:5:26","nodeType":"VariableDeclaration","scope":7665,"src":"31858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7641,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:26"},"returnParameters":{"id":7646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7645,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:26","nodeType":"VariableDeclaration","scope":7665,"src":"31895:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7644,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:26"},"scope":7810,"src":"31841:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7690,"nodeType":"Block","src":"32451:148:26","statements":[{"expression":{"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"32461:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"32480:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7674,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:26","typeDescriptions":{}}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7679,"nodeType":"ExpressionStatement","src":"32461:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"32500:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"32514:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7689,"nodeType":"IfStatement","src":"32496:97:26","trueBody":{"id":7688,"nodeType":"Block","src":"32521:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"32576:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7683,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"32542:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7687,"nodeType":"RevertStatement","src":"32535:47:26"}]}}]},"documentation":{"id":7666,"nodeType":"StructuredDocumentation","src":"32067:307:26","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7691,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:26","nodeType":"FunctionDefinition","parameters":{"id":7669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"value","nameLocation":"32403:5:26","nodeType":"VariableDeclaration","scope":7691,"src":"32396:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7667,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:26"},"returnParameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7671,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:26","nodeType":"VariableDeclaration","scope":7691,"src":"32433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7670,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:26"},"scope":7810,"src":"32379:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7716,"nodeType":"Block","src":"32989:148:26","statements":[{"expression":{"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"32999:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"33018:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7700,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:26","typeDescriptions":{}}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7705,"nodeType":"ExpressionStatement","src":"32999:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"33038:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"33052:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7715,"nodeType":"IfStatement","src":"33034:97:26","trueBody":{"id":7714,"nodeType":"Block","src":"33059:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"33114:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7709,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"33080:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7713,"nodeType":"RevertStatement","src":"33073:47:26"}]}}]},"documentation":{"id":7692,"nodeType":"StructuredDocumentation","src":"32605:307:26","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7717,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:26","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"value","nameLocation":"32941:5:26","nodeType":"VariableDeclaration","scope":7717,"src":"32934:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7693,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:26"},"returnParameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7697,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:26","nodeType":"VariableDeclaration","scope":7717,"src":"32971:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7696,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:26"},"scope":7810,"src":"32917:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7742,"nodeType":"Block","src":"33527:148:26","statements":[{"expression":{"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"33537:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"33556:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7726,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:26","typeDescriptions":{}}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7731,"nodeType":"ExpressionStatement","src":"33537:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"33576:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"33590:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7741,"nodeType":"IfStatement","src":"33572:97:26","trueBody":{"id":7740,"nodeType":"Block","src":"33597:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"33652:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7735,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"33618:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7739,"nodeType":"RevertStatement","src":"33611:47:26"}]}}]},"documentation":{"id":7718,"nodeType":"StructuredDocumentation","src":"33143:307:26","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7743,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:26","nodeType":"FunctionDefinition","parameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"value","nameLocation":"33479:5:26","nodeType":"VariableDeclaration","scope":7743,"src":"33472:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7719,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:26"},"returnParameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:26","nodeType":"VariableDeclaration","scope":7743,"src":"33509:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7722,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:26"},"scope":7810,"src":"33455:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7768,"nodeType":"Block","src":"34058:146:26","statements":[{"expression":{"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"34068:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"34086:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7752,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:26","typeDescriptions":{}}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7757,"nodeType":"ExpressionStatement","src":"34068:24:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"34106:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"34120:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7767,"nodeType":"IfStatement","src":"34102:96:26","trueBody":{"id":7766,"nodeType":"Block","src":"34127:71:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"34181:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7761,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6067,"src":"34148:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7765,"nodeType":"RevertStatement","src":"34141:46:26"}]}}]},"documentation":{"id":7744,"nodeType":"StructuredDocumentation","src":"33681:302:26","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7769,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:26","nodeType":"FunctionDefinition","parameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"value","nameLocation":"34011:5:26","nodeType":"VariableDeclaration","scope":7769,"src":"34004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7745,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:26"},"returnParameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:26","nodeType":"VariableDeclaration","scope":7769,"src":"34041:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7748,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:26"},"scope":7810,"src":"33988:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7798,"nodeType":"Block","src":"34444:250:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"34557:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7781,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:26","memberName":"max","nodeType":"MemberAccess","src":"34573:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7778,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:26","typeDescriptions":{}}},"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7792,"nodeType":"IfStatement","src":"34553:105:26","trueBody":{"id":7791,"nodeType":"Block","src":"34592:66:26","statements":[{"errorCall":{"arguments":[{"id":7788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"34641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7787,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"34613:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7790,"nodeType":"RevertStatement","src":"34606:41:26"}]}},{"expression":{"arguments":[{"id":7795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"34681:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7793,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:26","typeDescriptions":{}}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7776,"id":7797,"nodeType":"Return","src":"34667:20:26"}]},"documentation":{"id":7770,"nodeType":"StructuredDocumentation","src":"34210:165:26","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7799,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:26","nodeType":"FunctionDefinition","parameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"value","nameLocation":"34406:5:26","nodeType":"VariableDeclaration","scope":7799,"src":"34398:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7771,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:26"},"returnParameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7799,"src":"34436:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7774,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:26"},"scope":7810,"src":"34380:314:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7808,"nodeType":"Block","src":"34853:87:26","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:26","statements":[{"nodeType":"YulAssignment","src":"34902:22:26","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:26"},"nodeType":"YulFunctionCall","src":"34914:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:26"},"nodeType":"YulFunctionCall","src":"34907:17:26"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7802,"isOffset":false,"isSlot":false,"src":"34921:1:26","valueSize":1},{"declaration":7805,"isOffset":false,"isSlot":false,"src":"34902:1:26","valueSize":1}],"flags":["memory-safe"],"id":7807,"nodeType":"InlineAssembly","src":"34863:71:26"}]},"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"34700:90:26","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7809,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:26","nodeType":"FunctionDefinition","parameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"b","nameLocation":"34816:1:26","nodeType":"VariableDeclaration","scope":7809,"src":"34811:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7801,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:26"},"returnParameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"u","nameLocation":"34850:1:26","nodeType":"VariableDeclaration","scope":7809,"src":"34842:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:26"},"scope":7810,"src":"34795:145:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7811,"src":"769:34173:26","usedErrors":[6055,6060,6067,6072],"usedEvents":[]}],"src":"192:34751:26"},"id":26},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7810],"SignedMath":[7954]},"id":7955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7812,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7955,"sourceUnit":7811,"src":"135:40:27","symbolAliases":[{"foreign":{"id":7813,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"143:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7815,"nodeType":"StructuredDocumentation","src":"177:80:27","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7954,"linearizedBaseContracts":[7954],"name":"SignedMath","nameLocation":"266:10:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":7844,"nodeType":"Block","src":"746:215:27","statements":[{"id":7843,"nodeType":"UncheckedBlock","src":"756:199:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"894:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7820,"src":"900:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"904:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7836,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"932:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7834,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"916:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7809,"src":"916:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7832,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:27","typeDescriptions":{}}},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7840,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7826,"id":7842,"nodeType":"Return","src":"887:57:27"}]}]},"documentation":{"id":7816,"nodeType":"StructuredDocumentation","src":"283:374:27","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7845,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:27","nodeType":"FunctionDefinition","parameters":{"id":7823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7818,"mutability":"mutable","name":"condition","nameLocation":"684:9:27","nodeType":"VariableDeclaration","scope":7845,"src":"679:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7817,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7820,"mutability":"mutable","name":"a","nameLocation":"702:1:27","nodeType":"VariableDeclaration","scope":7845,"src":"695:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7819,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7822,"mutability":"mutable","name":"b","nameLocation":"712:1:27","nodeType":"VariableDeclaration","scope":7845,"src":"705:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7821,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:27"},"returnParameters":{"id":7826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7845,"src":"738:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7824,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:27"},"scope":7954,"src":"662:299:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7863,"nodeType":"Block","src":"1102:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"1127:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"1131:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7848,"src":"1134:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"1137:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7855,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"1119:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7854,"id":7862,"nodeType":"Return","src":"1112:27:27"}]},"documentation":{"id":7846,"nodeType":"StructuredDocumentation","src":"967:66:27","text":" @dev Returns the largest of two signed numbers."},"id":7864,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:27","nodeType":"FunctionDefinition","parameters":{"id":7851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7848,"mutability":"mutable","name":"a","nameLocation":"1058:1:27","nodeType":"VariableDeclaration","scope":7864,"src":"1051:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7847,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7850,"mutability":"mutable","name":"b","nameLocation":"1068:1:27","nodeType":"VariableDeclaration","scope":7864,"src":"1061:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7849,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:27"},"returnParameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7864,"src":"1094:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7852,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:27"},"scope":7954,"src":"1038:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7882,"nodeType":"Block","src":"1288:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7875,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"1313:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"1317:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"1320:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"1323:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7874,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7845,"src":"1305:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7873,"id":7881,"nodeType":"Return","src":"1298:27:27"}]},"documentation":{"id":7865,"nodeType":"StructuredDocumentation","src":"1152:67:27","text":" @dev Returns the smallest of two signed numbers."},"id":7883,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:27","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7867,"mutability":"mutable","name":"a","nameLocation":"1244:1:27","nodeType":"VariableDeclaration","scope":7883,"src":"1237:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7866,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"b","nameLocation":"1254:1:27","nodeType":"VariableDeclaration","scope":7883,"src":"1247:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7868,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:27"},"returnParameters":{"id":7873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7883,"src":"1280:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7871,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:27"},"scope":7954,"src":"1224:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7926,"nodeType":"Block","src":"1537:162:27","statements":[{"assignments":[7894],"declarations":[{"constant":false,"id":7894,"mutability":"mutable","name":"x","nameLocation":"1606:1:27","nodeType":"VariableDeclaration","scope":7926,"src":"1599:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7893,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7907,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7895,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"1611:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"1615:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"1622:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7900,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"1626:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:27"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7894,"src":"1671:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:27","typeDescriptions":{}}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7909,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:27","typeDescriptions":{}}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"1685:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"1689:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7892,"id":7925,"nodeType":"Return","src":"1644:48:27"}]},"documentation":{"id":7884,"nodeType":"StructuredDocumentation","src":"1338:126:27","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7927,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:27","nodeType":"FunctionDefinition","parameters":{"id":7889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"a","nameLocation":"1493:1:27","nodeType":"VariableDeclaration","scope":7927,"src":"1486:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7885,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7888,"mutability":"mutable","name":"b","nameLocation":"1503:1:27","nodeType":"VariableDeclaration","scope":7927,"src":"1496:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7887,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:27"},"returnParameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7927,"src":"1529:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7890,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:27"},"scope":7954,"src":"1469:230:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7952,"nodeType":"Block","src":"1843:767:27","statements":[{"id":7951,"nodeType":"UncheckedBlock","src":"1853:751:27","statements":[{"assignments":[7936],"declarations":[{"constant":false,"id":7936,"mutability":"mutable","name":"mask","nameLocation":"2424:4:27","nodeType":"VariableDeclaration","scope":7951,"src":"2417:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7935,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7940,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"2431:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7930,"src":"2576:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7944,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"2580:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7947,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"2588:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:27","typeDescriptions":{}}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7934,"id":7950,"nodeType":"Return","src":"2560:33:27"}]}]},"documentation":{"id":7928,"nodeType":"StructuredDocumentation","src":"1705:78:27","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7953,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:27","nodeType":"FunctionDefinition","parameters":{"id":7931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"mutability":"mutable","name":"n","nameLocation":"1808:1:27","nodeType":"VariableDeclaration","scope":7953,"src":"1801:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7929,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:27"},"returnParameters":{"id":7934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7953,"src":"1834:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7932,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:27"},"scope":7954,"src":"1788:822:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7955,"src":"258:2354:27","usedErrors":[],"usedEvents":[]}],"src":"109:2504:27"},"id":27},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[9535],"Math":[6045]},"id":9536,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7956,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9536,"sourceUnit":6046,"src":"227:38:28","symbolAliases":[{"foreign":{"id":7957,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"235:4:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":7959,"nodeType":"StructuredDocumentation","src":"267:400:28","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":9535,"linearizedBaseContracts":[9535],"name":"Checkpoints","nameLocation":"676:11:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7960,"nodeType":"StructuredDocumentation","src":"694:82:28","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":7962,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:28","nodeType":"ErrorDefinition","parameters":{"id":7961,"nodeType":"ParameterList","parameters":[],"src":"815:2:28"},"src":"781:37:28"},{"canonicalName":"Checkpoints.Trace224","id":7967,"members":[{"constant":false,"id":7966,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:28","nodeType":"VariableDeclaration","scope":7967,"src":"850:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":7964,"nodeType":"UserDefinedTypeName","pathNode":{"id":7963,"name":"Checkpoint224","nameLocations":["850:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"850:13:28"},"referencedDeclaration":7972,"src":"850:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":7965,"nodeType":"ArrayTypeName","src":"850:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:28","nodeType":"StructDefinition","scope":9535,"src":"824:61:28","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":7972,"members":[{"constant":false,"id":7969,"mutability":"mutable","name":"_key","nameLocation":"929:4:28","nodeType":"VariableDeclaration","scope":7972,"src":"922:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7968,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7971,"mutability":"mutable","name":"_value","nameLocation":"951:6:28","nodeType":"VariableDeclaration","scope":7972,"src":"943:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7970,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:28","nodeType":"StructDefinition","scope":9535,"src":"891:73:28","visibility":"public"},{"body":{"id":7994,"nodeType":"Block","src":"1425:62:28","statements":[{"expression":{"arguments":[{"expression":{"id":7988,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"1450:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":7989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1455:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"1450:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":7990,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"1469:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1474:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":7987,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8367,8891,9415],"referencedDeclaration":8367,"src":"1442:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1442:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":7986,"id":7993,"nodeType":"Return","src":"1435:45:28"}]},"documentation":{"id":7973,"nodeType":"StructuredDocumentation","src":"970:302:28","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":7995,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:28","nodeType":"FunctionDefinition","parameters":{"id":7981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7976,"mutability":"mutable","name":"self","nameLocation":"1317:4:28","nodeType":"VariableDeclaration","scope":7995,"src":"1300:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7975,"nodeType":"UserDefinedTypeName","pathNode":{"id":7974,"name":"Trace224","nameLocations":["1300:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"1300:8:28"},"referencedDeclaration":7967,"src":"1300:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":7978,"mutability":"mutable","name":"key","nameLocation":"1338:3:28","nodeType":"VariableDeclaration","scope":7995,"src":"1331:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7977,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7980,"mutability":"mutable","name":"value","nameLocation":"1359:5:28","nodeType":"VariableDeclaration","scope":7995,"src":"1351:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7979,"name":"uint224","nodeType":"ElementaryTypeName","src":"1351:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:80:28"},"returnParameters":{"id":7986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"oldValue","nameLocation":"1397:8:28","nodeType":"VariableDeclaration","scope":7995,"src":"1389:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7982,"name":"uint224","nodeType":"ElementaryTypeName","src":"1389:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":7985,"mutability":"mutable","name":"newValue","nameLocation":"1415:8:28","nodeType":"VariableDeclaration","scope":7995,"src":"1407:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7984,"name":"uint224","nodeType":"ElementaryTypeName","src":"1407:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1388:36:28"},"scope":9535,"src":"1277:210:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8034,"nodeType":"Block","src":"1740:207:28","statements":[{"assignments":[8007],"declarations":[{"constant":false,"id":8007,"mutability":"mutable","name":"len","nameLocation":"1758:3:28","nodeType":"VariableDeclaration","scope":8034,"src":"1750:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8011,"initialValue":{"expression":{"expression":{"id":8008,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"1764:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1769:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"1764:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:28","memberName":"length","nodeType":"MemberAccess","src":"1764:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:38:28"},{"assignments":[8013],"declarations":[{"constant":false,"id":8013,"mutability":"mutable","name":"pos","nameLocation":"1806:3:28","nodeType":"VariableDeclaration","scope":8034,"src":"1798:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1798:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8021,"initialValue":{"arguments":[{"expression":{"id":8015,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"1831:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1836:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"1831:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8017,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"1850:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1855:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8019,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"1858:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8014,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8471,8995,9519],"referencedDeclaration":8471,"src":"1812:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1798:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8022,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"1879:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8023,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"1886:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8027,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"1910:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"1910:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8029,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8013,"src":"1929:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8026,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"1896:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1896:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1934:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"1896:44:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1879:61:28","trueExpression":{"hexValue":"30","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1892:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8005,"id":8033,"nodeType":"Return","src":"1872:68:28"}]},"documentation":{"id":7996,"nodeType":"StructuredDocumentation","src":"1493:154:28","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8035,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1661:11:28","nodeType":"FunctionDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"mutability":"mutable","name":"self","nameLocation":"1690:4:28","nodeType":"VariableDeclaration","scope":8035,"src":"1673:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":7998,"nodeType":"UserDefinedTypeName","pathNode":{"id":7997,"name":"Trace224","nameLocations":["1673:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"1673:8:28"},"referencedDeclaration":7967,"src":"1673:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8001,"mutability":"mutable","name":"key","nameLocation":"1703:3:28","nodeType":"VariableDeclaration","scope":8035,"src":"1696:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8000,"name":"uint32","nodeType":"ElementaryTypeName","src":"1696:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1672:35:28"},"returnParameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8035,"src":"1731:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8003,"name":"uint224","nodeType":"ElementaryTypeName","src":"1731:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1730:9:28"},"scope":9535,"src":"1652:295:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8076,"nodeType":"Block","src":"2202:209:28","statements":[{"assignments":[8047],"declarations":[{"constant":false,"id":8047,"mutability":"mutable","name":"len","nameLocation":"2220:3:28","nodeType":"VariableDeclaration","scope":8076,"src":"2212:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8051,"initialValue":{"expression":{"expression":{"id":8048,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"2226:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2231:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"2226:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:28","memberName":"length","nodeType":"MemberAccess","src":"2226:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:38:28"},{"assignments":[8053],"declarations":[{"constant":false,"id":8053,"mutability":"mutable","name":"pos","nameLocation":"2268:3:28","nodeType":"VariableDeclaration","scope":8076,"src":"2260:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8061,"initialValue":{"arguments":[{"expression":{"id":8055,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"2293:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2298:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"2293:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8057,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8041,"src":"2312:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2317:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8059,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"2320:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8054,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":8419,"src":"2274:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2260:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8062,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"2341:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2341:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8067,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8039,"src":"2370:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2375:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"2370:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8069,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"2389:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2395:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2389:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8066,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"2356:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2398:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"2356:48:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2341:63:28","trueExpression":{"hexValue":"30","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2352:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8045,"id":8075,"nodeType":"Return","src":"2334:70:28"}]},"documentation":{"id":8036,"nodeType":"StructuredDocumentation","src":"1953:156:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8077,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2123:11:28","nodeType":"FunctionDefinition","parameters":{"id":8042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"self","nameLocation":"2152:4:28","nodeType":"VariableDeclaration","scope":8077,"src":"2135:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8038,"nodeType":"UserDefinedTypeName","pathNode":{"id":8037,"name":"Trace224","nameLocations":["2135:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"2135:8:28"},"referencedDeclaration":7967,"src":"2135:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8041,"mutability":"mutable","name":"key","nameLocation":"2165:3:28","nodeType":"VariableDeclaration","scope":8077,"src":"2158:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8040,"name":"uint32","nodeType":"ElementaryTypeName","src":"2158:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2134:35:28"},"returnParameters":{"id":8045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8077,"src":"2193:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8043,"name":"uint224","nodeType":"ElementaryTypeName","src":"2193:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2192:9:28"},"scope":9535,"src":"2114:297:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8161,"nodeType":"Block","src":"2810:512:28","statements":[{"assignments":[8089],"declarations":[{"constant":false,"id":8089,"mutability":"mutable","name":"len","nameLocation":"2828:3:28","nodeType":"VariableDeclaration","scope":8161,"src":"2820:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2820:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8093,"initialValue":{"expression":{"expression":{"id":8090,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"2834:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2839:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"2834:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:28","memberName":"length","nodeType":"MemberAccess","src":"2834:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2820:38:28"},{"assignments":[8095],"declarations":[{"constant":false,"id":8095,"mutability":"mutable","name":"low","nameLocation":"2877:3:28","nodeType":"VariableDeclaration","scope":8161,"src":"2869:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8097,"initialValue":{"hexValue":"30","id":8096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2869:15:28"},{"assignments":[8099],"declarations":[{"constant":false,"id":8099,"mutability":"mutable","name":"high","nameLocation":"2902:4:28","nodeType":"VariableDeclaration","scope":8161,"src":"2894:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2894:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8101,"initialValue":{"id":8100,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"2909:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2894:18:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8102,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"2927:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2933:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2927:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8136,"nodeType":"IfStatement","src":"2923:234:28","trueBody":{"id":8135,"nodeType":"Block","src":"2936:221:28","statements":[{"assignments":[8106],"declarations":[{"constant":false,"id":8106,"mutability":"mutable","name":"mid","nameLocation":"2958:3:28","nodeType":"VariableDeclaration","scope":8135,"src":"2950:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2950:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8113,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8107,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"2964:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8110,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"2980:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8108,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"2970:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:4:28","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5424,"src":"2970:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2964:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2950:34:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8114,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"3002:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8116,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"3022:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3027:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3022:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8118,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"3041:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8115,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"3008:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3046:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7969,"src":"3008:42:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3002:48:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8133,"nodeType":"Block","src":"3101:46:28","statements":[{"expression":{"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8127,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"3119:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8128,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"3125:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3125:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3119:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8132,"nodeType":"ExpressionStatement","src":"3119:13:28"}]},"id":8134,"nodeType":"IfStatement","src":"2998:149:28","trueBody":{"id":8126,"nodeType":"Block","src":"3052:43:28","statements":[{"expression":{"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8122,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"3070:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8123,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"3077:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8125,"nodeType":"ExpressionStatement","src":"3070:10:28"}]}}]}},{"assignments":[8138],"declarations":[{"constant":false,"id":8138,"mutability":"mutable","name":"pos","nameLocation":"3175:3:28","nodeType":"VariableDeclaration","scope":8161,"src":"3167:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8137,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8146,"initialValue":{"arguments":[{"expression":{"id":8140,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"3200:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3205:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3200:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":8142,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"3219:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8143,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"3224:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8144,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8099,"src":"3229:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8139,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":8419,"src":"3181:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3167:67:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8147,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"3252:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3259:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3252:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8152,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8081,"src":"3281:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3286:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3281:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8154,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8138,"src":"3300:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3300:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8151,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"3267:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3309:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"3267:48:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3252:63:28","trueExpression":{"hexValue":"30","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8087,"id":8160,"nodeType":"Return","src":"3245:70:28"}]},"documentation":{"id":8078,"nodeType":"StructuredDocumentation","src":"2417:294:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8162,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2725:17:28","nodeType":"FunctionDefinition","parameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"self","nameLocation":"2760:4:28","nodeType":"VariableDeclaration","scope":8162,"src":"2743:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8080,"nodeType":"UserDefinedTypeName","pathNode":{"id":8079,"name":"Trace224","nameLocations":["2743:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"2743:8:28"},"referencedDeclaration":7967,"src":"2743:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8083,"mutability":"mutable","name":"key","nameLocation":"2773:3:28","nodeType":"VariableDeclaration","scope":8162,"src":"2766:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8082,"name":"uint32","nodeType":"ElementaryTypeName","src":"2766:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2742:35:28"},"returnParameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8162,"src":"2801:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8085,"name":"uint224","nodeType":"ElementaryTypeName","src":"2801:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2800:9:28"},"scope":9535,"src":"2716:606:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8191,"nodeType":"Block","src":"3513:135:28","statements":[{"assignments":[8172],"declarations":[{"constant":false,"id":8172,"mutability":"mutable","name":"pos","nameLocation":"3531:3:28","nodeType":"VariableDeclaration","scope":8191,"src":"3523:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8176,"initialValue":{"expression":{"expression":{"id":8173,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"3537:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3542:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3537:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:6:28","memberName":"length","nodeType":"MemberAccess","src":"3537:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3523:38:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8177,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3578:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3585:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3578:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8182,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"3607:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3612:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3607:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8184,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"3626:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3632:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3626:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8181,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"3593:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3635:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"3593:48:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3578:63:28","trueExpression":{"hexValue":"30","id":8180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3589:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8170,"id":8190,"nodeType":"Return","src":"3571:70:28"}]},"documentation":{"id":8163,"nodeType":"StructuredDocumentation","src":"3328:109:28","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8192,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3451:6:28","nodeType":"FunctionDefinition","parameters":{"id":8167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"self","nameLocation":"3475:4:28","nodeType":"VariableDeclaration","scope":8192,"src":"3458:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8165,"nodeType":"UserDefinedTypeName","pathNode":{"id":8164,"name":"Trace224","nameLocations":["3458:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"3458:8:28"},"referencedDeclaration":7967,"src":"3458:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3457:23:28"},"returnParameters":{"id":8170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8192,"src":"3504:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8168,"name":"uint224","nodeType":"ElementaryTypeName","src":"3504:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3503:9:28"},"scope":9535,"src":"3442:206:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8240,"nodeType":"Block","src":"3941:275:28","statements":[{"assignments":[8206],"declarations":[{"constant":false,"id":8206,"mutability":"mutable","name":"pos","nameLocation":"3959:3:28","nodeType":"VariableDeclaration","scope":8240,"src":"3951:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3951:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8210,"initialValue":{"expression":{"expression":{"id":8207,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"3965:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3970:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"3965:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3983:6:28","memberName":"length","nodeType":"MemberAccess","src":"3965:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3951:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8211,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"4003:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4010:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4003:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8238,"nodeType":"Block","src":"4064:146:28","statements":[{"assignments":[8222],"declarations":[{"constant":false,"id":8222,"mutability":"mutable","name":"ckpt","nameLocation":"4100:4:28","nodeType":"VariableDeclaration","scope":8238,"src":"4078:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8221,"nodeType":"UserDefinedTypeName","pathNode":{"id":8220,"name":"Checkpoint224","nameLocations":["4078:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"4078:13:28"},"referencedDeclaration":7972,"src":"4078:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8230,"initialValue":{"arguments":[{"expression":{"id":8224,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"4121:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8225,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4126:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"4121:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8226,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"4140:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4146:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4140:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8223,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"4107:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4078:70:28"},{"expression":{"components":[{"hexValue":"74727565","id":8231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4170:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8232,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"4176:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7969,"src":"4176:9:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":8234,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"4187:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4192:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"4187:11:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4169:30:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":8204,"id":8237,"nodeType":"Return","src":"4162:37:28"}]},"id":8239,"nodeType":"IfStatement","src":"3999:211:28","trueBody":{"id":8219,"nodeType":"Block","src":"4013:45:28","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4035:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4042:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4034:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8204,"id":8218,"nodeType":"Return","src":"4027:20:28"}]}}]},"documentation":{"id":8193,"nodeType":"StructuredDocumentation","src":"3654:168:28","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8241,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3836:16:28","nodeType":"FunctionDefinition","parameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"self","nameLocation":"3870:4:28","nodeType":"VariableDeclaration","scope":8241,"src":"3853:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8195,"nodeType":"UserDefinedTypeName","pathNode":{"id":8194,"name":"Trace224","nameLocations":["3853:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"3853:8:28"},"referencedDeclaration":7967,"src":"3853:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3852:23:28"},"returnParameters":{"id":8204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8199,"mutability":"mutable","name":"exists","nameLocation":"3904:6:28","nodeType":"VariableDeclaration","scope":8241,"src":"3899:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8198,"name":"bool","nodeType":"ElementaryTypeName","src":"3899:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8201,"mutability":"mutable","name":"_key","nameLocation":"3919:4:28","nodeType":"VariableDeclaration","scope":8241,"src":"3912:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8200,"name":"uint32","nodeType":"ElementaryTypeName","src":"3912:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8203,"mutability":"mutable","name":"_value","nameLocation":"3933:6:28","nodeType":"VariableDeclaration","scope":8241,"src":"3925:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8202,"name":"uint224","nodeType":"ElementaryTypeName","src":"3925:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3898:42:28"},"scope":9535,"src":"3827:389:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8254,"nodeType":"Block","src":"4355:48:28","statements":[{"expression":{"expression":{"expression":{"id":8250,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"4372:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4377:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"4372:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:6:28","memberName":"length","nodeType":"MemberAccess","src":"4372:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8249,"id":8253,"nodeType":"Return","src":"4365:31:28"}]},"documentation":{"id":8242,"nodeType":"StructuredDocumentation","src":"4222:57:28","text":" @dev Returns the number of checkpoint."},"id":8255,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4293:6:28","nodeType":"FunctionDefinition","parameters":{"id":8246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8245,"mutability":"mutable","name":"self","nameLocation":"4317:4:28","nodeType":"VariableDeclaration","scope":8255,"src":"4300:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8244,"nodeType":"UserDefinedTypeName","pathNode":{"id":8243,"name":"Trace224","nameLocations":["4300:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"4300:8:28"},"referencedDeclaration":7967,"src":"4300:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4299:23:28"},"returnParameters":{"id":8249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8255,"src":"4346:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4346:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4345:9:28"},"scope":9535,"src":"4284:119:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8272,"nodeType":"Block","src":"4567:46:28","statements":[{"expression":{"baseExpression":{"expression":{"id":8267,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"4584:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":8268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4589:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7966,"src":"4584:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":8270,"indexExpression":{"id":8269,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"4602:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4584:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":8266,"id":8271,"nodeType":"Return","src":"4577:29:28"}]},"documentation":{"id":8256,"nodeType":"StructuredDocumentation","src":"4409:61:28","text":" @dev Returns checkpoint at given position."},"id":8273,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4484:2:28","nodeType":"FunctionDefinition","parameters":{"id":8262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"mutability":"mutable","name":"self","nameLocation":"4504:4:28","nodeType":"VariableDeclaration","scope":8273,"src":"4487:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":8258,"nodeType":"UserDefinedTypeName","pathNode":{"id":8257,"name":"Trace224","nameLocations":["4487:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":7967,"src":"4487:8:28"},"referencedDeclaration":7967,"src":"4487:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$7967_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":8261,"mutability":"mutable","name":"pos","nameLocation":"4517:3:28","nodeType":"VariableDeclaration","scope":8273,"src":"4510:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8260,"name":"uint32","nodeType":"ElementaryTypeName","src":"4510:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4486:35:28"},"returnParameters":{"id":8266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8273,"src":"4545:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8264,"nodeType":"UserDefinedTypeName","pathNode":{"id":8263,"name":"Checkpoint224","nameLocations":["4545:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"4545:13:28"},"referencedDeclaration":7972,"src":"4545:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4544:22:28"},"scope":9535,"src":"4475:138:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8366,"nodeType":"Block","src":"4946:765:28","statements":[{"assignments":[8290],"declarations":[{"constant":false,"id":8290,"mutability":"mutable","name":"pos","nameLocation":"4964:3:28","nodeType":"VariableDeclaration","scope":8366,"src":"4956:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8289,"name":"uint256","nodeType":"ElementaryTypeName","src":"4956:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8293,"initialValue":{"expression":{"id":8291,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"4970:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4975:6:28","memberName":"length","nodeType":"MemberAccess","src":"4970:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4956:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8294,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"4996:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5002:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4996:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8364,"nodeType":"Block","src":"5597:108:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":8355,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"5642:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"5655:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8354,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"5621:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5636:4:28","5647:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5621:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7972_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8351,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"5611:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5616:4:28","memberName":"push","nodeType":"MemberAccess","src":"5611:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7972_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5611:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8359,"nodeType":"ExpressionStatement","src":"5611:52:28"},{"expression":{"components":[{"hexValue":"30","id":8360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5685:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"5688:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5684:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":8288,"id":8363,"nodeType":"Return","src":"5677:17:28"}]},"id":8365,"nodeType":"IfStatement","src":"4992:713:28","trueBody":{"id":8350,"nodeType":"Block","src":"5005:586:28","statements":[{"assignments":[8299],"declarations":[{"constant":false,"id":8299,"mutability":"mutable","name":"last","nameLocation":"5041:4:28","nodeType":"VariableDeclaration","scope":8350,"src":"5019:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8298,"nodeType":"UserDefinedTypeName","pathNode":{"id":8297,"name":"Checkpoint224","nameLocations":["5019:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"5019:13:28"},"referencedDeclaration":7972,"src":"5019:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":8306,"initialValue":{"arguments":[{"id":8301,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"5062:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8302,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"5068:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5074:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5068:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8300,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"5048:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5048:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5019:57:28"},{"assignments":[8308],"declarations":[{"constant":false,"id":8308,"mutability":"mutable","name":"lastKey","nameLocation":"5097:7:28","nodeType":"VariableDeclaration","scope":8350,"src":"5090:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8307,"name":"uint32","nodeType":"ElementaryTypeName","src":"5090:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8311,"initialValue":{"expression":{"id":8309,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"5107:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5112:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7969,"src":"5107:9:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"5090:26:28"},{"assignments":[8313],"declarations":[{"constant":false,"id":8313,"mutability":"mutable","name":"lastValue","nameLocation":"5138:9:28","nodeType":"VariableDeclaration","scope":8350,"src":"5130:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8312,"name":"uint224","nodeType":"ElementaryTypeName","src":"5130:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"id":8316,"initialValue":{"expression":{"id":8314,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"5150:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5155:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"5150:11:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"VariableDeclarationStatement","src":"5130:31:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8317,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"5235:7:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8318,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"5245:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5235:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8324,"nodeType":"IfStatement","src":"5231:89:28","trueBody":{"id":8323,"nodeType":"Block","src":"5250:70:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8320,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"5275:28:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8322,"nodeType":"RevertStatement","src":"5268:37:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8325,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"5383:7:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8326,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"5394:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5383:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8344,"nodeType":"Block","src":"5457:85:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":8339,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"5506:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"5519:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":8338,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"5485:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5500:4:28","5511:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5485:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$7972_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":8335,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"5475:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:4:28","memberName":"push","nodeType":"MemberAccess","src":"5475:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$7972_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":8342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5475:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8343,"nodeType":"ExpressionStatement","src":"5475:52:28"}]},"id":8345,"nodeType":"IfStatement","src":"5379:163:28","trueBody":{"id":8334,"nodeType":"Block","src":"5399:52:28","statements":[{"expression":{"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8328,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"5417:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5422:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7971,"src":"5417:11:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"5431:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5417:19:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":8333,"nodeType":"ExpressionStatement","src":"5417:19:28"}]}},{"expression":{"components":[{"id":8346,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8313,"src":"5563:9:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":8347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"5574:5:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":8348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5562:18:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":8288,"id":8349,"nodeType":"Return","src":"5555:25:28"}]}}]},"documentation":{"id":8274,"nodeType":"StructuredDocumentation","src":"4619:165:28","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8367,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4798:7:28","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"self","nameLocation":"4839:4:28","nodeType":"VariableDeclaration","scope":8367,"src":"4815:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8276,"nodeType":"UserDefinedTypeName","pathNode":{"id":8275,"name":"Checkpoint224","nameLocations":["4815:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"4815:13:28"},"referencedDeclaration":7972,"src":"4815:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8277,"nodeType":"ArrayTypeName","src":"4815:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8280,"mutability":"mutable","name":"key","nameLocation":"4860:3:28","nodeType":"VariableDeclaration","scope":8367,"src":"4853:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8279,"name":"uint32","nodeType":"ElementaryTypeName","src":"4853:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8282,"mutability":"mutable","name":"value","nameLocation":"4881:5:28","nodeType":"VariableDeclaration","scope":8367,"src":"4873:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8281,"name":"uint224","nodeType":"ElementaryTypeName","src":"4873:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4805:87:28"},"returnParameters":{"id":8288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"oldValue","nameLocation":"4918:8:28","nodeType":"VariableDeclaration","scope":8367,"src":"4910:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8284,"name":"uint224","nodeType":"ElementaryTypeName","src":"4910:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"newValue","nameLocation":"4936:8:28","nodeType":"VariableDeclaration","scope":8367,"src":"4928:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8286,"name":"uint224","nodeType":"ElementaryTypeName","src":"4928:7:28","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4909:36:28"},"scope":9535,"src":"4789:922:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8418,"nodeType":"Block","src":"6227:267:28","statements":[{"body":{"id":8414,"nodeType":"Block","src":"6256:211:28","statements":[{"assignments":[8387],"declarations":[{"constant":false,"id":8387,"mutability":"mutable","name":"mid","nameLocation":"6278:3:28","nodeType":"VariableDeclaration","scope":8414,"src":"6270:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8386,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8393,"initialValue":{"arguments":[{"id":8390,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"6297:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8391,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"6302:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8388,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6284:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6289:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"6284:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6270:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8395,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8372,"src":"6339:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8396,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"6345:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8394,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"6325:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6350:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7969,"src":"6325:29:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8399,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8374,"src":"6357:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6325:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8412,"nodeType":"Block","src":"6411:46:28","statements":[{"expression":{"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8406,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"6429:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8407,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"6435:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6441:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6435:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6429:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8411,"nodeType":"ExpressionStatement","src":"6429:13:28"}]},"id":8413,"nodeType":"IfStatement","src":"6321:136:28","trueBody":{"id":8405,"nodeType":"Block","src":"6362:43:28","statements":[{"expression":{"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8401,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"6380:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8402,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"6387:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6380:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8404,"nodeType":"ExpressionStatement","src":"6380:10:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8383,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"6244:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8384,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"6250:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8415,"nodeType":"WhileStatement","src":"6237:230:28"},{"expression":{"id":8416,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"6483:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8382,"id":8417,"nodeType":"Return","src":"6476:11:28"}]},"documentation":{"id":8368,"nodeType":"StructuredDocumentation","src":"5717:339:28","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8419,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"6070:18:28","nodeType":"FunctionDefinition","parameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8372,"mutability":"mutable","name":"self","nameLocation":"6122:4:28","nodeType":"VariableDeclaration","scope":8419,"src":"6098:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8370,"nodeType":"UserDefinedTypeName","pathNode":{"id":8369,"name":"Checkpoint224","nameLocations":["6098:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"6098:13:28"},"referencedDeclaration":7972,"src":"6098:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8371,"nodeType":"ArrayTypeName","src":"6098:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8374,"mutability":"mutable","name":"key","nameLocation":"6143:3:28","nodeType":"VariableDeclaration","scope":8419,"src":"6136:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8373,"name":"uint32","nodeType":"ElementaryTypeName","src":"6136:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8376,"mutability":"mutable","name":"low","nameLocation":"6164:3:28","nodeType":"VariableDeclaration","scope":8419,"src":"6156:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8375,"name":"uint256","nodeType":"ElementaryTypeName","src":"6156:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8378,"mutability":"mutable","name":"high","nameLocation":"6185:4:28","nodeType":"VariableDeclaration","scope":8419,"src":"6177:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8377,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6088:107:28"},"returnParameters":{"id":8382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8419,"src":"6218:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6217:9:28"},"scope":9535,"src":"6061:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8470,"nodeType":"Block","src":"7011:267:28","statements":[{"body":{"id":8466,"nodeType":"Block","src":"7040:211:28","statements":[{"assignments":[8439],"declarations":[{"constant":false,"id":8439,"mutability":"mutable","name":"mid","nameLocation":"7062:3:28","nodeType":"VariableDeclaration","scope":8466,"src":"7054:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7054:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8445,"initialValue":{"arguments":[{"id":8442,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"7081:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8443,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"7086:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8440,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"7068:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7073:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"7068:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7054:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8447,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8424,"src":"7123:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":8448,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"7129:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8446,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":8486,"src":"7109:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$7972_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7109:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":8450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7134:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7969,"src":"7109:29:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8451,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"7141:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7109:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8464,"nodeType":"Block","src":"7198:43:28","statements":[{"expression":{"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8460,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"7216:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8461,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"7223:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8463,"nodeType":"ExpressionStatement","src":"7216:10:28"}]},"id":8465,"nodeType":"IfStatement","src":"7105:136:28","trueBody":{"id":8459,"nodeType":"Block","src":"7146:46:28","statements":[{"expression":{"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8453,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"7164:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8454,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"7170:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7176:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7170:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7164:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8458,"nodeType":"ExpressionStatement","src":"7164:13:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8435,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"7028:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8436,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"7034:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7028:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8467,"nodeType":"WhileStatement","src":"7021:230:28"},{"expression":{"id":8468,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"7267:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8434,"id":8469,"nodeType":"Return","src":"7260:11:28"}]},"documentation":{"id":8420,"nodeType":"StructuredDocumentation","src":"6500:340:28","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8471,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6854:18:28","nodeType":"FunctionDefinition","parameters":{"id":8431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8424,"mutability":"mutable","name":"self","nameLocation":"6906:4:28","nodeType":"VariableDeclaration","scope":8471,"src":"6882:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8422,"nodeType":"UserDefinedTypeName","pathNode":{"id":8421,"name":"Checkpoint224","nameLocations":["6882:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"6882:13:28"},"referencedDeclaration":7972,"src":"6882:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8423,"nodeType":"ArrayTypeName","src":"6882:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8426,"mutability":"mutable","name":"key","nameLocation":"6927:3:28","nodeType":"VariableDeclaration","scope":8471,"src":"6920:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8425,"name":"uint32","nodeType":"ElementaryTypeName","src":"6920:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8428,"mutability":"mutable","name":"low","nameLocation":"6948:3:28","nodeType":"VariableDeclaration","scope":8471,"src":"6940:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6940:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8430,"mutability":"mutable","name":"high","nameLocation":"6969:4:28","nodeType":"VariableDeclaration","scope":8471,"src":"6961:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8429,"name":"uint256","nodeType":"ElementaryTypeName","src":"6961:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6872:107:28"},"returnParameters":{"id":8434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8471,"src":"7002:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7002:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7001:9:28"},"scope":9535,"src":"6845:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8485,"nodeType":"Block","src":"7561:125:28","statements":[{"AST":{"nodeType":"YulBlock","src":"7580:100:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:28","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"7604:9:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7594:6:28"},"nodeType":"YulFunctionCall","src":"7594:20:28"},"nodeType":"YulExpressionStatement","src":"7594:20:28"},{"nodeType":"YulAssignment","src":"7627:43:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7656:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7659:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7646:9:28"},"nodeType":"YulFunctionCall","src":"7646:18:28"},{"name":"pos","nodeType":"YulIdentifier","src":"7666:3:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7642:3:28"},"nodeType":"YulFunctionCall","src":"7642:28:28"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"7627:11:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8478,"isOffset":false,"isSlot":false,"src":"7666:3:28","valueSize":1},{"declaration":8482,"isOffset":false,"isSlot":true,"src":"7627:11:28","suffix":"slot","valueSize":1},{"declaration":8476,"isOffset":false,"isSlot":true,"src":"7604:9:28","suffix":"slot","valueSize":1}],"id":8484,"nodeType":"InlineAssembly","src":"7571:109:28"}]},"documentation":{"id":8472,"nodeType":"StructuredDocumentation","src":"7284:132:28","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":8486,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7430:13:28","nodeType":"FunctionDefinition","parameters":{"id":8479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8476,"mutability":"mutable","name":"self","nameLocation":"7477:4:28","nodeType":"VariableDeclaration","scope":8486,"src":"7453:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":8474,"nodeType":"UserDefinedTypeName","pathNode":{"id":8473,"name":"Checkpoint224","nameLocations":["7453:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"7453:13:28"},"referencedDeclaration":7972,"src":"7453:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":8475,"nodeType":"ArrayTypeName","src":"7453:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$7972_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":8478,"mutability":"mutable","name":"pos","nameLocation":"7499:3:28","nodeType":"VariableDeclaration","scope":8486,"src":"7491:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8477,"name":"uint256","nodeType":"ElementaryTypeName","src":"7491:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7443:65:28"},"returnParameters":{"id":8483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8482,"mutability":"mutable","name":"result","nameLocation":"7553:6:28","nodeType":"VariableDeclaration","scope":8486,"src":"7531:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":8481,"nodeType":"UserDefinedTypeName","pathNode":{"id":8480,"name":"Checkpoint224","nameLocations":["7531:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":7972,"src":"7531:13:28"},"referencedDeclaration":7972,"src":"7531:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$7972_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7530:30:28"},"scope":9535,"src":"7421:265:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":8491,"members":[{"constant":false,"id":8490,"mutability":"mutable","name":"_checkpoints","nameLocation":"7734:12:28","nodeType":"VariableDeclaration","scope":8491,"src":"7718:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8488,"nodeType":"UserDefinedTypeName","pathNode":{"id":8487,"name":"Checkpoint208","nameLocations":["7718:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"7718:13:28"},"referencedDeclaration":8496,"src":"7718:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8489,"nodeType":"ArrayTypeName","src":"7718:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7699:8:28","nodeType":"StructDefinition","scope":9535,"src":"7692:61:28","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":8496,"members":[{"constant":false,"id":8493,"mutability":"mutable","name":"_key","nameLocation":"7797:4:28","nodeType":"VariableDeclaration","scope":8496,"src":"7790:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8492,"name":"uint48","nodeType":"ElementaryTypeName","src":"7790:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8495,"mutability":"mutable","name":"_value","nameLocation":"7819:6:28","nodeType":"VariableDeclaration","scope":8496,"src":"7811:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8494,"name":"uint208","nodeType":"ElementaryTypeName","src":"7811:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7766:13:28","nodeType":"StructDefinition","scope":9535,"src":"7759:73:28","visibility":"public"},{"body":{"id":8518,"nodeType":"Block","src":"8293:62:28","statements":[{"expression":{"arguments":[{"expression":{"id":8512,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8500,"src":"8318:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8323:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"8318:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8514,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8502,"src":"8337:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"8342:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8511,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8367,8891,9415],"referencedDeclaration":8891,"src":"8310:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8310:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8510,"id":8517,"nodeType":"Return","src":"8303:45:28"}]},"documentation":{"id":8497,"nodeType":"StructuredDocumentation","src":"7838:302:28","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":8519,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8154:4:28","nodeType":"FunctionDefinition","parameters":{"id":8505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8500,"mutability":"mutable","name":"self","nameLocation":"8185:4:28","nodeType":"VariableDeclaration","scope":8519,"src":"8168:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8499,"nodeType":"UserDefinedTypeName","pathNode":{"id":8498,"name":"Trace208","nameLocations":["8168:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"8168:8:28"},"referencedDeclaration":8491,"src":"8168:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8502,"mutability":"mutable","name":"key","nameLocation":"8206:3:28","nodeType":"VariableDeclaration","scope":8519,"src":"8199:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8501,"name":"uint48","nodeType":"ElementaryTypeName","src":"8199:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8504,"mutability":"mutable","name":"value","nameLocation":"8227:5:28","nodeType":"VariableDeclaration","scope":8519,"src":"8219:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8503,"name":"uint208","nodeType":"ElementaryTypeName","src":"8219:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8158:80:28"},"returnParameters":{"id":8510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8507,"mutability":"mutable","name":"oldValue","nameLocation":"8265:8:28","nodeType":"VariableDeclaration","scope":8519,"src":"8257:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8506,"name":"uint208","nodeType":"ElementaryTypeName","src":"8257:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8509,"mutability":"mutable","name":"newValue","nameLocation":"8283:8:28","nodeType":"VariableDeclaration","scope":8519,"src":"8275:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8508,"name":"uint208","nodeType":"ElementaryTypeName","src":"8275:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8256:36:28"},"scope":9535,"src":"8145:210:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8558,"nodeType":"Block","src":"8608:207:28","statements":[{"assignments":[8531],"declarations":[{"constant":false,"id":8531,"mutability":"mutable","name":"len","nameLocation":"8626:3:28","nodeType":"VariableDeclaration","scope":8558,"src":"8618:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8618:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8535,"initialValue":{"expression":{"expression":{"id":8532,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"8632:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8637:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"8632:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8650:6:28","memberName":"length","nodeType":"MemberAccess","src":"8632:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8618:38:28"},{"assignments":[8537],"declarations":[{"constant":false,"id":8537,"mutability":"mutable","name":"pos","nameLocation":"8674:3:28","nodeType":"VariableDeclaration","scope":8558,"src":"8666:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8536,"name":"uint256","nodeType":"ElementaryTypeName","src":"8666:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8545,"initialValue":{"arguments":[{"expression":{"id":8539,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"8699:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8540,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8704:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"8699:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8541,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8525,"src":"8718:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8543,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"8726:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8538,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8471,8995,9519],"referencedDeclaration":8995,"src":"8680:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8680:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8666:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8546,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8537,"src":"8747:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8547,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"8754:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8551,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8523,"src":"8778:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8783:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"8778:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8553,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8537,"src":"8797:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8550,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"8764:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8764:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8802:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"8764:44:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8747:61:28","trueExpression":{"hexValue":"30","id":8549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8760:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8529,"id":8557,"nodeType":"Return","src":"8740:68:28"}]},"documentation":{"id":8520,"nodeType":"StructuredDocumentation","src":"8361:154:28","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":8559,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8529:11:28","nodeType":"FunctionDefinition","parameters":{"id":8526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8523,"mutability":"mutable","name":"self","nameLocation":"8558:4:28","nodeType":"VariableDeclaration","scope":8559,"src":"8541:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8522,"nodeType":"UserDefinedTypeName","pathNode":{"id":8521,"name":"Trace208","nameLocations":["8541:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"8541:8:28"},"referencedDeclaration":8491,"src":"8541:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8525,"mutability":"mutable","name":"key","nameLocation":"8571:3:28","nodeType":"VariableDeclaration","scope":8559,"src":"8564:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8524,"name":"uint48","nodeType":"ElementaryTypeName","src":"8564:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8540:35:28"},"returnParameters":{"id":8529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8559,"src":"8599:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8527,"name":"uint208","nodeType":"ElementaryTypeName","src":"8599:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8598:9:28"},"scope":9535,"src":"8520:295:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8600,"nodeType":"Block","src":"9070:209:28","statements":[{"assignments":[8571],"declarations":[{"constant":false,"id":8571,"mutability":"mutable","name":"len","nameLocation":"9088:3:28","nodeType":"VariableDeclaration","scope":8600,"src":"9080:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8570,"name":"uint256","nodeType":"ElementaryTypeName","src":"9080:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8575,"initialValue":{"expression":{"expression":{"id":8572,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"9094:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"9094:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9112:6:28","memberName":"length","nodeType":"MemberAccess","src":"9094:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9080:38:28"},{"assignments":[8577],"declarations":[{"constant":false,"id":8577,"mutability":"mutable","name":"pos","nameLocation":"9136:3:28","nodeType":"VariableDeclaration","scope":8600,"src":"9128:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8576,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8585,"initialValue":{"arguments":[{"expression":{"id":8579,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"9161:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9166:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"9161:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8581,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"9180:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":8582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9185:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8583,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"9188:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8578,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":8943,"src":"9142:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9142:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9128:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8586,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"9209:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9216:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9209:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8591,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8563,"src":"9238:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9243:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"9238:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8593,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8577,"src":"9257:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9263:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9257:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8590,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"9224:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9224:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9266:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"9224:48:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9209:63:28","trueExpression":{"hexValue":"30","id":8589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9220:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8569,"id":8599,"nodeType":"Return","src":"9202:70:28"}]},"documentation":{"id":8560,"nodeType":"StructuredDocumentation","src":"8821:156:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":8601,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8991:11:28","nodeType":"FunctionDefinition","parameters":{"id":8566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8563,"mutability":"mutable","name":"self","nameLocation":"9020:4:28","nodeType":"VariableDeclaration","scope":8601,"src":"9003:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8562,"nodeType":"UserDefinedTypeName","pathNode":{"id":8561,"name":"Trace208","nameLocations":["9003:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"9003:8:28"},"referencedDeclaration":8491,"src":"9003:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8565,"mutability":"mutable","name":"key","nameLocation":"9033:3:28","nodeType":"VariableDeclaration","scope":8601,"src":"9026:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8564,"name":"uint48","nodeType":"ElementaryTypeName","src":"9026:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9002:35:28"},"returnParameters":{"id":8569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8601,"src":"9061:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8567,"name":"uint208","nodeType":"ElementaryTypeName","src":"9061:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9060:9:28"},"scope":9535,"src":"8982:297:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8685,"nodeType":"Block","src":"9678:512:28","statements":[{"assignments":[8613],"declarations":[{"constant":false,"id":8613,"mutability":"mutable","name":"len","nameLocation":"9696:3:28","nodeType":"VariableDeclaration","scope":8685,"src":"9688:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8612,"name":"uint256","nodeType":"ElementaryTypeName","src":"9688:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8617,"initialValue":{"expression":{"expression":{"id":8614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"9702:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9707:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"9702:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9720:6:28","memberName":"length","nodeType":"MemberAccess","src":"9702:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9688:38:28"},{"assignments":[8619],"declarations":[{"constant":false,"id":8619,"mutability":"mutable","name":"low","nameLocation":"9745:3:28","nodeType":"VariableDeclaration","scope":8685,"src":"9737:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8618,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8621,"initialValue":{"hexValue":"30","id":8620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9751:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9737:15:28"},{"assignments":[8623],"declarations":[{"constant":false,"id":8623,"mutability":"mutable","name":"high","nameLocation":"9770:4:28","nodeType":"VariableDeclaration","scope":8685,"src":"9762:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8622,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8625,"initialValue":{"id":8624,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"9777:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:18:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8626,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"9795:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9801:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9795:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8660,"nodeType":"IfStatement","src":"9791:234:28","trueBody":{"id":8659,"nodeType":"Block","src":"9804:221:28","statements":[{"assignments":[8630],"declarations":[{"constant":false,"id":8630,"mutability":"mutable","name":"mid","nameLocation":"9826:3:28","nodeType":"VariableDeclaration","scope":8659,"src":"9818:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"9818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8631,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"9832:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":8634,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8613,"src":"9848:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8632,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"9838:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9843:4:28","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5424,"src":"9838:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9838:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9832:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9818:34:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8638,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"9870:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":8640,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"9890:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9895:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"9890:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8642,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"9909:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8639,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"9876:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9914:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8493,"src":"9876:42:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9870:48:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8657,"nodeType":"Block","src":"9969:46:28","statements":[{"expression":{"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8651,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8619,"src":"9987:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8652,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"9993:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9999:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9993:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8656,"nodeType":"ExpressionStatement","src":"9987:13:28"}]},"id":8658,"nodeType":"IfStatement","src":"9866:149:28","trueBody":{"id":8650,"nodeType":"Block","src":"9920:43:28","statements":[{"expression":{"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8646,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"9938:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8647,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"9945:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9938:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8649,"nodeType":"ExpressionStatement","src":"9938:10:28"}]}}]}},{"assignments":[8662],"declarations":[{"constant":false,"id":8662,"mutability":"mutable","name":"pos","nameLocation":"10043:3:28","nodeType":"VariableDeclaration","scope":8685,"src":"10035:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8661,"name":"uint256","nodeType":"ElementaryTypeName","src":"10035:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8670,"initialValue":{"arguments":[{"expression":{"id":8664,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"10068:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10073:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10068:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":8666,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"10087:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8667,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8619,"src":"10092:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8668,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"10097:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8663,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":8943,"src":"10049:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10049:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10035:67:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8671,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"10120:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10127:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10120:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8676,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8605,"src":"10149:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10154:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10149:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8678,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8662,"src":"10168:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10174:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10168:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8675,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"10135:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10135:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10177:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"10135:48:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10120:63:28","trueExpression":{"hexValue":"30","id":8674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10131:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8611,"id":8684,"nodeType":"Return","src":"10113:70:28"}]},"documentation":{"id":8602,"nodeType":"StructuredDocumentation","src":"9285:294:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":8686,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9593:17:28","nodeType":"FunctionDefinition","parameters":{"id":8608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"self","nameLocation":"9628:4:28","nodeType":"VariableDeclaration","scope":8686,"src":"9611:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8604,"nodeType":"UserDefinedTypeName","pathNode":{"id":8603,"name":"Trace208","nameLocations":["9611:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"9611:8:28"},"referencedDeclaration":8491,"src":"9611:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8607,"mutability":"mutable","name":"key","nameLocation":"9641:3:28","nodeType":"VariableDeclaration","scope":8686,"src":"9634:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8606,"name":"uint48","nodeType":"ElementaryTypeName","src":"9634:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9610:35:28"},"returnParameters":{"id":8611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8686,"src":"9669:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8609,"name":"uint208","nodeType":"ElementaryTypeName","src":"9669:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9668:9:28"},"scope":9535,"src":"9584:606:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8715,"nodeType":"Block","src":"10381:135:28","statements":[{"assignments":[8696],"declarations":[{"constant":false,"id":8696,"mutability":"mutable","name":"pos","nameLocation":"10399:3:28","nodeType":"VariableDeclaration","scope":8715,"src":"10391:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8700,"initialValue":{"expression":{"expression":{"id":8697,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"10405:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10410:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10405:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:6:28","memberName":"length","nodeType":"MemberAccess","src":"10405:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10391:38:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8701,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"10446:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10453:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10446:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":8706,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"10475:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10480:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10475:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8708,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"10494:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10500:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10494:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8705,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"10461:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10461:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10503:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"10461:48:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10446:63:28","trueExpression":{"hexValue":"30","id":8704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10457:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8694,"id":8714,"nodeType":"Return","src":"10439:70:28"}]},"documentation":{"id":8687,"nodeType":"StructuredDocumentation","src":"10196:109:28","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":8716,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10319:6:28","nodeType":"FunctionDefinition","parameters":{"id":8691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8690,"mutability":"mutable","name":"self","nameLocation":"10343:4:28","nodeType":"VariableDeclaration","scope":8716,"src":"10326:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8689,"nodeType":"UserDefinedTypeName","pathNode":{"id":8688,"name":"Trace208","nameLocations":["10326:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"10326:8:28"},"referencedDeclaration":8491,"src":"10326:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10325:23:28"},"returnParameters":{"id":8694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8716,"src":"10372:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8692,"name":"uint208","nodeType":"ElementaryTypeName","src":"10372:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10371:9:28"},"scope":9535,"src":"10310:206:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8764,"nodeType":"Block","src":"10809:275:28","statements":[{"assignments":[8730],"declarations":[{"constant":false,"id":8730,"mutability":"mutable","name":"pos","nameLocation":"10827:3:28","nodeType":"VariableDeclaration","scope":8764,"src":"10819:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8734,"initialValue":{"expression":{"expression":{"id":8731,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"10833:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10838:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10833:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10851:6:28","memberName":"length","nodeType":"MemberAccess","src":"10833:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10819:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8735,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"10871:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10878:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10871:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8762,"nodeType":"Block","src":"10932:146:28","statements":[{"assignments":[8746],"declarations":[{"constant":false,"id":8746,"mutability":"mutable","name":"ckpt","nameLocation":"10968:4:28","nodeType":"VariableDeclaration","scope":8762,"src":"10946:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8745,"nodeType":"UserDefinedTypeName","pathNode":{"id":8744,"name":"Checkpoint208","nameLocations":["10946:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"10946:13:28"},"referencedDeclaration":8496,"src":"10946:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8754,"initialValue":{"arguments":[{"expression":{"id":8748,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8720,"src":"10989:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10994:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"10989:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8750,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8730,"src":"11008:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11014:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11008:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8747,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"10975:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10975:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10946:70:28"},{"expression":{"components":[{"hexValue":"74727565","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11038:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":8756,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"11044:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11049:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8493,"src":"11044:9:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":8758,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"11055:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11060:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"11055:11:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11037:30:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":8728,"id":8761,"nodeType":"Return","src":"11030:37:28"}]},"id":8763,"nodeType":"IfStatement","src":"10867:211:28","trueBody":{"id":8743,"nodeType":"Block","src":"10881:45:28","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":8738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10903:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10910:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10913:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10902:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":8728,"id":8742,"nodeType":"Return","src":"10895:20:28"}]}}]},"documentation":{"id":8717,"nodeType":"StructuredDocumentation","src":"10522:168:28","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":8765,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10704:16:28","nodeType":"FunctionDefinition","parameters":{"id":8721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8720,"mutability":"mutable","name":"self","nameLocation":"10738:4:28","nodeType":"VariableDeclaration","scope":8765,"src":"10721:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8719,"nodeType":"UserDefinedTypeName","pathNode":{"id":8718,"name":"Trace208","nameLocations":["10721:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"10721:8:28"},"referencedDeclaration":8491,"src":"10721:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10720:23:28"},"returnParameters":{"id":8728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8723,"mutability":"mutable","name":"exists","nameLocation":"10772:6:28","nodeType":"VariableDeclaration","scope":8765,"src":"10767:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8722,"name":"bool","nodeType":"ElementaryTypeName","src":"10767:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8725,"mutability":"mutable","name":"_key","nameLocation":"10787:4:28","nodeType":"VariableDeclaration","scope":8765,"src":"10780:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8724,"name":"uint48","nodeType":"ElementaryTypeName","src":"10780:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8727,"mutability":"mutable","name":"_value","nameLocation":"10801:6:28","nodeType":"VariableDeclaration","scope":8765,"src":"10793:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8726,"name":"uint208","nodeType":"ElementaryTypeName","src":"10793:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10766:42:28"},"scope":9535,"src":"10695:389:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8778,"nodeType":"Block","src":"11223:48:28","statements":[{"expression":{"expression":{"expression":{"id":8774,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8769,"src":"11240:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8775,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11245:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"11240:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11258:6:28","memberName":"length","nodeType":"MemberAccess","src":"11240:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8773,"id":8777,"nodeType":"Return","src":"11233:31:28"}]},"documentation":{"id":8766,"nodeType":"StructuredDocumentation","src":"11090:57:28","text":" @dev Returns the number of checkpoint."},"id":8779,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11161:6:28","nodeType":"FunctionDefinition","parameters":{"id":8770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8769,"mutability":"mutable","name":"self","nameLocation":"11185:4:28","nodeType":"VariableDeclaration","scope":8779,"src":"11168:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8768,"nodeType":"UserDefinedTypeName","pathNode":{"id":8767,"name":"Trace208","nameLocations":["11168:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"11168:8:28"},"referencedDeclaration":8491,"src":"11168:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11167:23:28"},"returnParameters":{"id":8773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8779,"src":"11214:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8771,"name":"uint256","nodeType":"ElementaryTypeName","src":"11214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11213:9:28"},"scope":9535,"src":"11152:119:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8796,"nodeType":"Block","src":"11435:46:28","statements":[{"expression":{"baseExpression":{"expression":{"id":8791,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"11452:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":8792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11457:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":8490,"src":"11452:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":8794,"indexExpression":{"id":8793,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8785,"src":"11470:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11452:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":8790,"id":8795,"nodeType":"Return","src":"11445:29:28"}]},"documentation":{"id":8780,"nodeType":"StructuredDocumentation","src":"11277:61:28","text":" @dev Returns checkpoint at given position."},"id":8797,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11352:2:28","nodeType":"FunctionDefinition","parameters":{"id":8786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"mutability":"mutable","name":"self","nameLocation":"11372:4:28","nodeType":"VariableDeclaration","scope":8797,"src":"11355:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":8782,"nodeType":"UserDefinedTypeName","pathNode":{"id":8781,"name":"Trace208","nameLocations":["11355:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":8491,"src":"11355:8:28"},"referencedDeclaration":8491,"src":"11355:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$8491_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":8785,"mutability":"mutable","name":"pos","nameLocation":"11385:3:28","nodeType":"VariableDeclaration","scope":8797,"src":"11378:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8784,"name":"uint32","nodeType":"ElementaryTypeName","src":"11378:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11354:35:28"},"returnParameters":{"id":8790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8797,"src":"11413:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8788,"nodeType":"UserDefinedTypeName","pathNode":{"id":8787,"name":"Checkpoint208","nameLocations":["11413:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"11413:13:28"},"referencedDeclaration":8496,"src":"11413:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11412:22:28"},"scope":9535,"src":"11343:138:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8890,"nodeType":"Block","src":"11814:765:28","statements":[{"assignments":[8814],"declarations":[{"constant":false,"id":8814,"mutability":"mutable","name":"pos","nameLocation":"11832:3:28","nodeType":"VariableDeclaration","scope":8890,"src":"11824:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8813,"name":"uint256","nodeType":"ElementaryTypeName","src":"11824:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8817,"initialValue":{"expression":{"id":8815,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"11838:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:6:28","memberName":"length","nodeType":"MemberAccess","src":"11838:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11824:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8818,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"11864:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11870:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11864:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8888,"nodeType":"Block","src":"12465:108:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":8879,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8804,"src":"12510:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"12523:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8878,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"12489:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12504:4:28","12515:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12489:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8875,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"12479:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12484:4:28","memberName":"push","nodeType":"MemberAccess","src":"12479:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8496_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8883,"nodeType":"ExpressionStatement","src":"12479:52:28"},{"expression":{"components":[{"hexValue":"30","id":8884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":8885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"12556:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12552:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":8812,"id":8887,"nodeType":"Return","src":"12545:17:28"}]},"id":8889,"nodeType":"IfStatement","src":"11860:713:28","trueBody":{"id":8874,"nodeType":"Block","src":"11873:586:28","statements":[{"assignments":[8823],"declarations":[{"constant":false,"id":8823,"mutability":"mutable","name":"last","nameLocation":"11909:4:28","nodeType":"VariableDeclaration","scope":8874,"src":"11887:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":8822,"nodeType":"UserDefinedTypeName","pathNode":{"id":8821,"name":"Checkpoint208","nameLocations":["11887:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"11887:13:28"},"referencedDeclaration":8496,"src":"11887:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":8830,"initialValue":{"arguments":[{"id":8825,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"11930:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8826,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8814,"src":"11936:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11942:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11936:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8824,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"11916:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11887:57:28"},{"assignments":[8832],"declarations":[{"constant":false,"id":8832,"mutability":"mutable","name":"lastKey","nameLocation":"11965:7:28","nodeType":"VariableDeclaration","scope":8874,"src":"11958:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8831,"name":"uint48","nodeType":"ElementaryTypeName","src":"11958:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8835,"initialValue":{"expression":{"id":8833,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8823,"src":"11975:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11980:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8493,"src":"11975:9:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"11958:26:28"},{"assignments":[8837],"declarations":[{"constant":false,"id":8837,"mutability":"mutable","name":"lastValue","nameLocation":"12006:9:28","nodeType":"VariableDeclaration","scope":8874,"src":"11998:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8836,"name":"uint208","nodeType":"ElementaryTypeName","src":"11998:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"id":8840,"initialValue":{"expression":{"id":8838,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8823,"src":"12018:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12023:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"12018:11:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"VariableDeclarationStatement","src":"11998:31:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8841,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"12103:7:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8842,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8804,"src":"12113:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12103:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8848,"nodeType":"IfStatement","src":"12099:89:28","trueBody":{"id":8847,"nodeType":"Block","src":"12118:70:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8844,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"12143:28:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12143:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8846,"nodeType":"RevertStatement","src":"12136:37:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8849,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8832,"src":"12251:7:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8850,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8804,"src":"12262:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12251:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8868,"nodeType":"Block","src":"12325:85:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":8863,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8804,"src":"12374:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":8864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"12387:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":8862,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"12353:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12368:4:28","12379:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12353:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$8496_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":8859,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"12343:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12348:4:28","memberName":"push","nodeType":"MemberAccess","src":"12343:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$8496_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":8866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12343:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8867,"nodeType":"ExpressionStatement","src":"12343:52:28"}]},"id":8869,"nodeType":"IfStatement","src":"12247:163:28","trueBody":{"id":8858,"nodeType":"Block","src":"12267:52:28","statements":[{"expression":{"id":8856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8852,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8823,"src":"12285:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12290:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":8495,"src":"12285:11:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"12299:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12285:19:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":8857,"nodeType":"ExpressionStatement","src":"12285:19:28"}]}},{"expression":{"components":[{"id":8870,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8837,"src":"12431:9:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":8871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8806,"src":"12442:5:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":8872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12430:18:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":8812,"id":8873,"nodeType":"Return","src":"12423:25:28"}]}}]},"documentation":{"id":8798,"nodeType":"StructuredDocumentation","src":"11487:165:28","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":8891,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11666:7:28","nodeType":"FunctionDefinition","parameters":{"id":8807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8802,"mutability":"mutable","name":"self","nameLocation":"11707:4:28","nodeType":"VariableDeclaration","scope":8891,"src":"11683:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8800,"nodeType":"UserDefinedTypeName","pathNode":{"id":8799,"name":"Checkpoint208","nameLocations":["11683:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"11683:13:28"},"referencedDeclaration":8496,"src":"11683:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8801,"nodeType":"ArrayTypeName","src":"11683:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8804,"mutability":"mutable","name":"key","nameLocation":"11728:3:28","nodeType":"VariableDeclaration","scope":8891,"src":"11721:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8803,"name":"uint48","nodeType":"ElementaryTypeName","src":"11721:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8806,"mutability":"mutable","name":"value","nameLocation":"11749:5:28","nodeType":"VariableDeclaration","scope":8891,"src":"11741:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8805,"name":"uint208","nodeType":"ElementaryTypeName","src":"11741:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11673:87:28"},"returnParameters":{"id":8812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8809,"mutability":"mutable","name":"oldValue","nameLocation":"11786:8:28","nodeType":"VariableDeclaration","scope":8891,"src":"11778:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8808,"name":"uint208","nodeType":"ElementaryTypeName","src":"11778:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":8811,"mutability":"mutable","name":"newValue","nameLocation":"11804:8:28","nodeType":"VariableDeclaration","scope":8891,"src":"11796:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8810,"name":"uint208","nodeType":"ElementaryTypeName","src":"11796:7:28","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11777:36:28"},"scope":9535,"src":"11657:922:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8942,"nodeType":"Block","src":"13095:267:28","statements":[{"body":{"id":8938,"nodeType":"Block","src":"13124:211:28","statements":[{"assignments":[8911],"declarations":[{"constant":false,"id":8911,"mutability":"mutable","name":"mid","nameLocation":"13146:3:28","nodeType":"VariableDeclaration","scope":8938,"src":"13138:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8910,"name":"uint256","nodeType":"ElementaryTypeName","src":"13138:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8917,"initialValue":{"arguments":[{"id":8914,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"13165:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8915,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"13170:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8912,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"13152:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13157:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"13152:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13152:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13138:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8919,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"13207:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8920,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"13213:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8918,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"13193:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13193:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13218:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8493,"src":"13193:29:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8923,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"13225:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13193:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8936,"nodeType":"Block","src":"13279:46:28","statements":[{"expression":{"id":8934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8930,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"13297:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8931,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"13303:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13309:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13297:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8935,"nodeType":"ExpressionStatement","src":"13297:13:28"}]},"id":8937,"nodeType":"IfStatement","src":"13189:136:28","trueBody":{"id":8929,"nodeType":"Block","src":"13230:43:28","statements":[{"expression":{"id":8927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8925,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"13248:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8926,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8911,"src":"13255:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13248:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8928,"nodeType":"ExpressionStatement","src":"13248:10:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8907,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"13112:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8908,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"13118:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13112:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8939,"nodeType":"WhileStatement","src":"13105:230:28"},{"expression":{"id":8940,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"13351:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8906,"id":8941,"nodeType":"Return","src":"13344:11:28"}]},"documentation":{"id":8892,"nodeType":"StructuredDocumentation","src":"12585:339:28","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8943,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12938:18:28","nodeType":"FunctionDefinition","parameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8896,"mutability":"mutable","name":"self","nameLocation":"12990:4:28","nodeType":"VariableDeclaration","scope":8943,"src":"12966:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8894,"nodeType":"UserDefinedTypeName","pathNode":{"id":8893,"name":"Checkpoint208","nameLocations":["12966:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"12966:13:28"},"referencedDeclaration":8496,"src":"12966:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8895,"nodeType":"ArrayTypeName","src":"12966:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8898,"mutability":"mutable","name":"key","nameLocation":"13011:3:28","nodeType":"VariableDeclaration","scope":8943,"src":"13004:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8897,"name":"uint48","nodeType":"ElementaryTypeName","src":"13004:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8900,"mutability":"mutable","name":"low","nameLocation":"13032:3:28","nodeType":"VariableDeclaration","scope":8943,"src":"13024:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8899,"name":"uint256","nodeType":"ElementaryTypeName","src":"13024:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8902,"mutability":"mutable","name":"high","nameLocation":"13053:4:28","nodeType":"VariableDeclaration","scope":8943,"src":"13045:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8901,"name":"uint256","nodeType":"ElementaryTypeName","src":"13045:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12956:107:28"},"returnParameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8943,"src":"13086:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"13086:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13085:9:28"},"scope":9535,"src":"12929:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":8994,"nodeType":"Block","src":"13879:267:28","statements":[{"body":{"id":8990,"nodeType":"Block","src":"13908:211:28","statements":[{"assignments":[8963],"declarations":[{"constant":false,"id":8963,"mutability":"mutable","name":"mid","nameLocation":"13930:3:28","nodeType":"VariableDeclaration","scope":8990,"src":"13922:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8962,"name":"uint256","nodeType":"ElementaryTypeName","src":"13922:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8969,"initialValue":{"arguments":[{"id":8966,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"13949:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8967,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"13954:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8964,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"13936:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":8965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13941:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"13936:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13936:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13922:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8971,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8948,"src":"13991:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":8972,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"13997:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8970,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9010,"src":"13977:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$8496_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13977:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":8974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14002:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":8493,"src":"13977:29:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8975,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8950,"src":"14009:3:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13977:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8988,"nodeType":"Block","src":"14066:43:28","statements":[{"expression":{"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8984,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"14084:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8985,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"14091:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14084:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8987,"nodeType":"ExpressionStatement","src":"14084:10:28"}]},"id":8989,"nodeType":"IfStatement","src":"13973:136:28","trueBody":{"id":8983,"nodeType":"Block","src":"14014:46:28","statements":[{"expression":{"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8977,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"14032:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8978,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"14038:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14044:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14038:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14032:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8982,"nodeType":"ExpressionStatement","src":"14032:13:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8959,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8952,"src":"13896:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8960,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"13902:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13896:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8991,"nodeType":"WhileStatement","src":"13889:230:28"},{"expression":{"id":8992,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"14135:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8958,"id":8993,"nodeType":"Return","src":"14128:11:28"}]},"documentation":{"id":8944,"nodeType":"StructuredDocumentation","src":"13368:340:28","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":8995,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13722:18:28","nodeType":"FunctionDefinition","parameters":{"id":8955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8948,"mutability":"mutable","name":"self","nameLocation":"13774:4:28","nodeType":"VariableDeclaration","scope":8995,"src":"13750:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8946,"nodeType":"UserDefinedTypeName","pathNode":{"id":8945,"name":"Checkpoint208","nameLocations":["13750:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"13750:13:28"},"referencedDeclaration":8496,"src":"13750:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8947,"nodeType":"ArrayTypeName","src":"13750:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":8950,"mutability":"mutable","name":"key","nameLocation":"13795:3:28","nodeType":"VariableDeclaration","scope":8995,"src":"13788:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8949,"name":"uint48","nodeType":"ElementaryTypeName","src":"13788:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8952,"mutability":"mutable","name":"low","nameLocation":"13816:3:28","nodeType":"VariableDeclaration","scope":8995,"src":"13808:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8951,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8954,"mutability":"mutable","name":"high","nameLocation":"13837:4:28","nodeType":"VariableDeclaration","scope":8995,"src":"13829:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8953,"name":"uint256","nodeType":"ElementaryTypeName","src":"13829:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13740:107:28"},"returnParameters":{"id":8958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8995,"src":"13870:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8956,"name":"uint256","nodeType":"ElementaryTypeName","src":"13870:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13869:9:28"},"scope":9535,"src":"13713:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9009,"nodeType":"Block","src":"14429:125:28","statements":[{"AST":{"nodeType":"YulBlock","src":"14448:100:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14469:1:28","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"14472:9:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:28"},"nodeType":"YulFunctionCall","src":"14462:20:28"},"nodeType":"YulExpressionStatement","src":"14462:20:28"},{"nodeType":"YulAssignment","src":"14495:43:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14524:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14527:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14514:9:28"},"nodeType":"YulFunctionCall","src":"14514:18:28"},{"name":"pos","nodeType":"YulIdentifier","src":"14534:3:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14510:3:28"},"nodeType":"YulFunctionCall","src":"14510:28:28"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"14495:11:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9002,"isOffset":false,"isSlot":false,"src":"14534:3:28","valueSize":1},{"declaration":9006,"isOffset":false,"isSlot":true,"src":"14495:11:28","suffix":"slot","valueSize":1},{"declaration":9000,"isOffset":false,"isSlot":true,"src":"14472:9:28","suffix":"slot","valueSize":1}],"id":9008,"nodeType":"InlineAssembly","src":"14439:109:28"}]},"documentation":{"id":8996,"nodeType":"StructuredDocumentation","src":"14152:132:28","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9010,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14298:13:28","nodeType":"FunctionDefinition","parameters":{"id":9003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9000,"mutability":"mutable","name":"self","nameLocation":"14345:4:28","nodeType":"VariableDeclaration","scope":9010,"src":"14321:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":8998,"nodeType":"UserDefinedTypeName","pathNode":{"id":8997,"name":"Checkpoint208","nameLocations":["14321:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"14321:13:28"},"referencedDeclaration":8496,"src":"14321:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":8999,"nodeType":"ArrayTypeName","src":"14321:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$8496_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":9002,"mutability":"mutable","name":"pos","nameLocation":"14367:3:28","nodeType":"VariableDeclaration","scope":9010,"src":"14359:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9001,"name":"uint256","nodeType":"ElementaryTypeName","src":"14359:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14311:65:28"},"returnParameters":{"id":9007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9006,"mutability":"mutable","name":"result","nameLocation":"14421:6:28","nodeType":"VariableDeclaration","scope":9010,"src":"14399:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":9005,"nodeType":"UserDefinedTypeName","pathNode":{"id":9004,"name":"Checkpoint208","nameLocations":["14399:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8496,"src":"14399:13:28"},"referencedDeclaration":8496,"src":"14399:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$8496_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14398:30:28"},"scope":9535,"src":"14289:265:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":9015,"members":[{"constant":false,"id":9014,"mutability":"mutable","name":"_checkpoints","nameLocation":"14602:12:28","nodeType":"VariableDeclaration","scope":9015,"src":"14586:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9012,"nodeType":"UserDefinedTypeName","pathNode":{"id":9011,"name":"Checkpoint160","nameLocations":["14586:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"14586:13:28"},"referencedDeclaration":9020,"src":"14586:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9013,"nodeType":"ArrayTypeName","src":"14586:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14567:8:28","nodeType":"StructDefinition","scope":9535,"src":"14560:61:28","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":9020,"members":[{"constant":false,"id":9017,"mutability":"mutable","name":"_key","nameLocation":"14665:4:28","nodeType":"VariableDeclaration","scope":9020,"src":"14658:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9016,"name":"uint96","nodeType":"ElementaryTypeName","src":"14658:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9019,"mutability":"mutable","name":"_value","nameLocation":"14687:6:28","nodeType":"VariableDeclaration","scope":9020,"src":"14679:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9018,"name":"uint160","nodeType":"ElementaryTypeName","src":"14679:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14634:13:28","nodeType":"StructDefinition","scope":9535,"src":"14627:73:28","visibility":"public"},{"body":{"id":9042,"nodeType":"Block","src":"15161:62:28","statements":[{"expression":{"arguments":[{"expression":{"id":9036,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"15186:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15191:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"15186:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9038,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9026,"src":"15205:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9028,"src":"15210:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9035,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[8367,8891,9415],"referencedDeclaration":9415,"src":"15178:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":9040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15178:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9034,"id":9041,"nodeType":"Return","src":"15171:45:28"}]},"documentation":{"id":9021,"nodeType":"StructuredDocumentation","src":"14706:302:28","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":9043,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"15022:4:28","nodeType":"FunctionDefinition","parameters":{"id":9029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9024,"mutability":"mutable","name":"self","nameLocation":"15053:4:28","nodeType":"VariableDeclaration","scope":9043,"src":"15036:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9023,"nodeType":"UserDefinedTypeName","pathNode":{"id":9022,"name":"Trace160","nameLocations":["15036:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"15036:8:28"},"referencedDeclaration":9015,"src":"15036:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9026,"mutability":"mutable","name":"key","nameLocation":"15074:3:28","nodeType":"VariableDeclaration","scope":9043,"src":"15067:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9025,"name":"uint96","nodeType":"ElementaryTypeName","src":"15067:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9028,"mutability":"mutable","name":"value","nameLocation":"15095:5:28","nodeType":"VariableDeclaration","scope":9043,"src":"15087:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9027,"name":"uint160","nodeType":"ElementaryTypeName","src":"15087:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15026:80:28"},"returnParameters":{"id":9034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9031,"mutability":"mutable","name":"oldValue","nameLocation":"15133:8:28","nodeType":"VariableDeclaration","scope":9043,"src":"15125:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9030,"name":"uint160","nodeType":"ElementaryTypeName","src":"15125:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9033,"mutability":"mutable","name":"newValue","nameLocation":"15151:8:28","nodeType":"VariableDeclaration","scope":9043,"src":"15143:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9032,"name":"uint160","nodeType":"ElementaryTypeName","src":"15143:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15124:36:28"},"scope":9535,"src":"15013:210:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9082,"nodeType":"Block","src":"15476:207:28","statements":[{"assignments":[9055],"declarations":[{"constant":false,"id":9055,"mutability":"mutable","name":"len","nameLocation":"15494:3:28","nodeType":"VariableDeclaration","scope":9082,"src":"15486:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9054,"name":"uint256","nodeType":"ElementaryTypeName","src":"15486:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9059,"initialValue":{"expression":{"expression":{"id":9056,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"15500:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15505:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"15500:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15518:6:28","memberName":"length","nodeType":"MemberAccess","src":"15500:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15486:38:28"},{"assignments":[9061],"declarations":[{"constant":false,"id":9061,"mutability":"mutable","name":"pos","nameLocation":"15542:3:28","nodeType":"VariableDeclaration","scope":9082,"src":"15534:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9060,"name":"uint256","nodeType":"ElementaryTypeName","src":"15534:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9069,"initialValue":{"arguments":[{"expression":{"id":9063,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"15567:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15572:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"15567:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9065,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9049,"src":"15586:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9067,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"15594:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9062,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8471,8995,9519],"referencedDeclaration":9519,"src":"15548:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15548:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15534:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9070,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"15615:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9071,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"15622:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15615:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9075,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9047,"src":"15646:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15651:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"15646:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9077,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"15665:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9074,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"15632:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15632:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15670:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"15632:44:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15615:61:28","trueExpression":{"hexValue":"30","id":9073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9053,"id":9081,"nodeType":"Return","src":"15608:68:28"}]},"documentation":{"id":9044,"nodeType":"StructuredDocumentation","src":"15229:154:28","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":9083,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15397:11:28","nodeType":"FunctionDefinition","parameters":{"id":9050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"self","nameLocation":"15426:4:28","nodeType":"VariableDeclaration","scope":9083,"src":"15409:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9046,"nodeType":"UserDefinedTypeName","pathNode":{"id":9045,"name":"Trace160","nameLocations":["15409:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"15409:8:28"},"referencedDeclaration":9015,"src":"15409:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9049,"mutability":"mutable","name":"key","nameLocation":"15439:3:28","nodeType":"VariableDeclaration","scope":9083,"src":"15432:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9048,"name":"uint96","nodeType":"ElementaryTypeName","src":"15432:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15408:35:28"},"returnParameters":{"id":9053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9083,"src":"15467:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9051,"name":"uint160","nodeType":"ElementaryTypeName","src":"15467:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15466:9:28"},"scope":9535,"src":"15388:295:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9124,"nodeType":"Block","src":"15938:209:28","statements":[{"assignments":[9095],"declarations":[{"constant":false,"id":9095,"mutability":"mutable","name":"len","nameLocation":"15956:3:28","nodeType":"VariableDeclaration","scope":9124,"src":"15948:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9094,"name":"uint256","nodeType":"ElementaryTypeName","src":"15948:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9099,"initialValue":{"expression":{"expression":{"id":9096,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"15962:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15967:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"15962:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15980:6:28","memberName":"length","nodeType":"MemberAccess","src":"15962:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15948:38:28"},{"assignments":[9101],"declarations":[{"constant":false,"id":9101,"mutability":"mutable","name":"pos","nameLocation":"16004:3:28","nodeType":"VariableDeclaration","scope":9124,"src":"15996:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9100,"name":"uint256","nodeType":"ElementaryTypeName","src":"15996:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9109,"initialValue":{"arguments":[{"expression":{"id":9103,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"16029:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16034:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"16029:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9105,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9089,"src":"16048:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":9106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16053:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9107,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9095,"src":"16056:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9102,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":9467,"src":"16010:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16010:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15996:64:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9110,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"16077:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16084:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16077:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9115,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"16106:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16111:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"16106:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9117,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9101,"src":"16125:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16131:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16125:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9114,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"16092:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16092:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16134:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"16092:48:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16077:63:28","trueExpression":{"hexValue":"30","id":9113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16088:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9093,"id":9123,"nodeType":"Return","src":"16070:70:28"}]},"documentation":{"id":9084,"nodeType":"StructuredDocumentation","src":"15689:156:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":9125,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15859:11:28","nodeType":"FunctionDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9087,"mutability":"mutable","name":"self","nameLocation":"15888:4:28","nodeType":"VariableDeclaration","scope":9125,"src":"15871:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9086,"nodeType":"UserDefinedTypeName","pathNode":{"id":9085,"name":"Trace160","nameLocations":["15871:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"15871:8:28"},"referencedDeclaration":9015,"src":"15871:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9089,"mutability":"mutable","name":"key","nameLocation":"15901:3:28","nodeType":"VariableDeclaration","scope":9125,"src":"15894:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9088,"name":"uint96","nodeType":"ElementaryTypeName","src":"15894:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15870:35:28"},"returnParameters":{"id":9093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9125,"src":"15929:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9091,"name":"uint160","nodeType":"ElementaryTypeName","src":"15929:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15928:9:28"},"scope":9535,"src":"15850:297:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9209,"nodeType":"Block","src":"16546:512:28","statements":[{"assignments":[9137],"declarations":[{"constant":false,"id":9137,"mutability":"mutable","name":"len","nameLocation":"16564:3:28","nodeType":"VariableDeclaration","scope":9209,"src":"16556:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9136,"name":"uint256","nodeType":"ElementaryTypeName","src":"16556:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9141,"initialValue":{"expression":{"expression":{"id":9138,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"16570:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16575:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"16570:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16588:6:28","memberName":"length","nodeType":"MemberAccess","src":"16570:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16556:38:28"},{"assignments":[9143],"declarations":[{"constant":false,"id":9143,"mutability":"mutable","name":"low","nameLocation":"16613:3:28","nodeType":"VariableDeclaration","scope":9209,"src":"16605:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9142,"name":"uint256","nodeType":"ElementaryTypeName","src":"16605:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9145,"initialValue":{"hexValue":"30","id":9144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16619:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16605:15:28"},{"assignments":[9147],"declarations":[{"constant":false,"id":9147,"mutability":"mutable","name":"high","nameLocation":"16638:4:28","nodeType":"VariableDeclaration","scope":9209,"src":"16630:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9146,"name":"uint256","nodeType":"ElementaryTypeName","src":"16630:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9149,"initialValue":{"id":9148,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"16645:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16630:18:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9150,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"16663:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":9151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16669:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16663:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9184,"nodeType":"IfStatement","src":"16659:234:28","trueBody":{"id":9183,"nodeType":"Block","src":"16672:221:28","statements":[{"assignments":[9154],"declarations":[{"constant":false,"id":9154,"mutability":"mutable","name":"mid","nameLocation":"16694:3:28","nodeType":"VariableDeclaration","scope":9183,"src":"16686:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9153,"name":"uint256","nodeType":"ElementaryTypeName","src":"16686:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9161,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9155,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"16700:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":9158,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"16716:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9156,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"16706:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16711:4:28","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":5424,"src":"16706:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16706:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16700:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16686:34:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9162,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"16738:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":9164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"16758:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16763:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"16758:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"16777:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9163,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"16744:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16744:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16782:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9017,"src":"16744:42:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16738:48:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9181,"nodeType":"Block","src":"16837:46:28","statements":[{"expression":{"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9175,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"16855:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9176,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"16861:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16867:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16861:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16855:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9180,"nodeType":"ExpressionStatement","src":"16855:13:28"}]},"id":9182,"nodeType":"IfStatement","src":"16734:149:28","trueBody":{"id":9174,"nodeType":"Block","src":"16788:43:28","statements":[{"expression":{"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9170,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"16806:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9171,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"16813:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16806:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9173,"nodeType":"ExpressionStatement","src":"16806:10:28"}]}}]}},{"assignments":[9186],"declarations":[{"constant":false,"id":9186,"mutability":"mutable","name":"pos","nameLocation":"16911:3:28","nodeType":"VariableDeclaration","scope":9209,"src":"16903:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9185,"name":"uint256","nodeType":"ElementaryTypeName","src":"16903:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9194,"initialValue":{"arguments":[{"expression":{"id":9188,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"16936:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16941:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"16936:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":9190,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"16955:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9191,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"16960:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9192,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9147,"src":"16965:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9187,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[8419,8943,9467],"referencedDeclaration":9467,"src":"16917:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":9193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16917:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16903:67:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9195,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"16988:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16995:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16988:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9200,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"17017:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17022:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"17017:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9202,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9186,"src":"17036:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17042:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17036:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9199,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"17003:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17045:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"17003:48:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16988:63:28","trueExpression":{"hexValue":"30","id":9198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16999:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9135,"id":9208,"nodeType":"Return","src":"16981:70:28"}]},"documentation":{"id":9126,"nodeType":"StructuredDocumentation","src":"16153:294:28","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":9210,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16461:17:28","nodeType":"FunctionDefinition","parameters":{"id":9132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9129,"mutability":"mutable","name":"self","nameLocation":"16496:4:28","nodeType":"VariableDeclaration","scope":9210,"src":"16479:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9128,"nodeType":"UserDefinedTypeName","pathNode":{"id":9127,"name":"Trace160","nameLocations":["16479:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"16479:8:28"},"referencedDeclaration":9015,"src":"16479:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9131,"mutability":"mutable","name":"key","nameLocation":"16509:3:28","nodeType":"VariableDeclaration","scope":9210,"src":"16502:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9130,"name":"uint96","nodeType":"ElementaryTypeName","src":"16502:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16478:35:28"},"returnParameters":{"id":9135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9210,"src":"16537:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9133,"name":"uint160","nodeType":"ElementaryTypeName","src":"16537:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16536:9:28"},"scope":9535,"src":"16452:606:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9239,"nodeType":"Block","src":"17249:135:28","statements":[{"assignments":[9220],"declarations":[{"constant":false,"id":9220,"mutability":"mutable","name":"pos","nameLocation":"17267:3:28","nodeType":"VariableDeclaration","scope":9239,"src":"17259:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9219,"name":"uint256","nodeType":"ElementaryTypeName","src":"17259:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9224,"initialValue":{"expression":{"expression":{"id":9221,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"17273:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17278:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"17273:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17291:6:28","memberName":"length","nodeType":"MemberAccess","src":"17273:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17259:38:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9225,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"17314:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17321:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17314:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":9230,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9214,"src":"17343:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17348:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"17343:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9232,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"17362:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17368:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17362:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9229,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"17329:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17329:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17371:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"17329:48:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17314:63:28","trueExpression":{"hexValue":"30","id":9228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17325:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":9218,"id":9238,"nodeType":"Return","src":"17307:70:28"}]},"documentation":{"id":9211,"nodeType":"StructuredDocumentation","src":"17064:109:28","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"17187:6:28","nodeType":"FunctionDefinition","parameters":{"id":9215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9214,"mutability":"mutable","name":"self","nameLocation":"17211:4:28","nodeType":"VariableDeclaration","scope":9240,"src":"17194:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9213,"nodeType":"UserDefinedTypeName","pathNode":{"id":9212,"name":"Trace160","nameLocations":["17194:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"17194:8:28"},"referencedDeclaration":9015,"src":"17194:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17193:23:28"},"returnParameters":{"id":9218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9240,"src":"17240:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9216,"name":"uint160","nodeType":"ElementaryTypeName","src":"17240:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17239:9:28"},"scope":9535,"src":"17178:206:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9288,"nodeType":"Block","src":"17677:275:28","statements":[{"assignments":[9254],"declarations":[{"constant":false,"id":9254,"mutability":"mutable","name":"pos","nameLocation":"17695:3:28","nodeType":"VariableDeclaration","scope":9288,"src":"17687:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9253,"name":"uint256","nodeType":"ElementaryTypeName","src":"17687:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9258,"initialValue":{"expression":{"expression":{"id":9255,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"17701:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17706:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"17701:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17719:6:28","memberName":"length","nodeType":"MemberAccess","src":"17701:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17687:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9259,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"17739:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17746:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17739:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9286,"nodeType":"Block","src":"17800:146:28","statements":[{"assignments":[9270],"declarations":[{"constant":false,"id":9270,"mutability":"mutable","name":"ckpt","nameLocation":"17836:4:28","nodeType":"VariableDeclaration","scope":9286,"src":"17814:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9269,"nodeType":"UserDefinedTypeName","pathNode":{"id":9268,"name":"Checkpoint160","nameLocations":["17814:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"17814:13:28"},"referencedDeclaration":9020,"src":"17814:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9278,"initialValue":{"arguments":[{"expression":{"id":9272,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"17857:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17862:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"17857:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9274,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9254,"src":"17876:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17882:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17876:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9271,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"17843:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17843:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17814:70:28"},{"expression":{"components":[{"hexValue":"74727565","id":9279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17906:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":9280,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"17912:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17917:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9017,"src":"17912:9:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":9282,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"17923:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17928:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"17923:11:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17905:30:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":9252,"id":9285,"nodeType":"Return","src":"17898:37:28"}]},"id":9287,"nodeType":"IfStatement","src":"17735:211:28","trueBody":{"id":9267,"nodeType":"Block","src":"17749:45:28","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":9262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17771:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":9263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17778:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17781:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17770:13:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":9252,"id":9266,"nodeType":"Return","src":"17763:20:28"}]}}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"17390:168:28","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":9289,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17572:16:28","nodeType":"FunctionDefinition","parameters":{"id":9245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9244,"mutability":"mutable","name":"self","nameLocation":"17606:4:28","nodeType":"VariableDeclaration","scope":9289,"src":"17589:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9243,"nodeType":"UserDefinedTypeName","pathNode":{"id":9242,"name":"Trace160","nameLocations":["17589:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"17589:8:28"},"referencedDeclaration":9015,"src":"17589:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17588:23:28"},"returnParameters":{"id":9252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"exists","nameLocation":"17640:6:28","nodeType":"VariableDeclaration","scope":9289,"src":"17635:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9246,"name":"bool","nodeType":"ElementaryTypeName","src":"17635:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"_key","nameLocation":"17655:4:28","nodeType":"VariableDeclaration","scope":9289,"src":"17648:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9248,"name":"uint96","nodeType":"ElementaryTypeName","src":"17648:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9251,"mutability":"mutable","name":"_value","nameLocation":"17669:6:28","nodeType":"VariableDeclaration","scope":9289,"src":"17661:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9250,"name":"uint160","nodeType":"ElementaryTypeName","src":"17661:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17634:42:28"},"scope":9535,"src":"17563:389:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9302,"nodeType":"Block","src":"18091:48:28","statements":[{"expression":{"expression":{"expression":{"id":9298,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9293,"src":"18108:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18113:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"18108:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18126:6:28","memberName":"length","nodeType":"MemberAccess","src":"18108:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9297,"id":9301,"nodeType":"Return","src":"18101:31:28"}]},"documentation":{"id":9290,"nodeType":"StructuredDocumentation","src":"17958:57:28","text":" @dev Returns the number of checkpoint."},"id":9303,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"18029:6:28","nodeType":"FunctionDefinition","parameters":{"id":9294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9293,"mutability":"mutable","name":"self","nameLocation":"18053:4:28","nodeType":"VariableDeclaration","scope":9303,"src":"18036:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9292,"nodeType":"UserDefinedTypeName","pathNode":{"id":9291,"name":"Trace160","nameLocations":["18036:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"18036:8:28"},"referencedDeclaration":9015,"src":"18036:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"18035:23:28"},"returnParameters":{"id":9297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9303,"src":"18082:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9295,"name":"uint256","nodeType":"ElementaryTypeName","src":"18082:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18081:9:28"},"scope":9535,"src":"18020:119:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9320,"nodeType":"Block","src":"18303:46:28","statements":[{"expression":{"baseExpression":{"expression":{"id":9315,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9307,"src":"18320:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":9316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18325:12:28","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":9014,"src":"18320:17:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":9318,"indexExpression":{"id":9317,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9309,"src":"18338:3:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18320:22:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":9314,"id":9319,"nodeType":"Return","src":"18313:29:28"}]},"documentation":{"id":9304,"nodeType":"StructuredDocumentation","src":"18145:61:28","text":" @dev Returns checkpoint at given position."},"id":9321,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"18220:2:28","nodeType":"FunctionDefinition","parameters":{"id":9310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9307,"mutability":"mutable","name":"self","nameLocation":"18240:4:28","nodeType":"VariableDeclaration","scope":9321,"src":"18223:21:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":9306,"nodeType":"UserDefinedTypeName","pathNode":{"id":9305,"name":"Trace160","nameLocations":["18223:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":9015,"src":"18223:8:28"},"referencedDeclaration":9015,"src":"18223:8:28","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$9015_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":9309,"mutability":"mutable","name":"pos","nameLocation":"18253:3:28","nodeType":"VariableDeclaration","scope":9321,"src":"18246:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9308,"name":"uint32","nodeType":"ElementaryTypeName","src":"18246:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"18222:35:28"},"returnParameters":{"id":9314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9321,"src":"18281:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9312,"nodeType":"UserDefinedTypeName","pathNode":{"id":9311,"name":"Checkpoint160","nameLocations":["18281:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"18281:13:28"},"referencedDeclaration":9020,"src":"18281:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18280:22:28"},"scope":9535,"src":"18211:138:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9414,"nodeType":"Block","src":"18682:765:28","statements":[{"assignments":[9338],"declarations":[{"constant":false,"id":9338,"mutability":"mutable","name":"pos","nameLocation":"18700:3:28","nodeType":"VariableDeclaration","scope":9414,"src":"18692:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9337,"name":"uint256","nodeType":"ElementaryTypeName","src":"18692:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9341,"initialValue":{"expression":{"id":9339,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"18706:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18711:6:28","memberName":"length","nodeType":"MemberAccess","src":"18706:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18692:25:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9342,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"18732:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18738:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18732:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9412,"nodeType":"Block","src":"19333:108:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":9403,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"19378:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"19391:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9402,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9020,"src":"19357:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19372:4:28","19383:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19357:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9020_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"19347:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19352:4:28","memberName":"push","nodeType":"MemberAccess","src":"19347:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9020_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19347:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9407,"nodeType":"ExpressionStatement","src":"19347:52:28"},{"expression":{"components":[{"hexValue":"30","id":9408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19421:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":9409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"19424:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19420:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":9336,"id":9411,"nodeType":"Return","src":"19413:17:28"}]},"id":9413,"nodeType":"IfStatement","src":"18728:713:28","trueBody":{"id":9398,"nodeType":"Block","src":"18741:586:28","statements":[{"assignments":[9347],"declarations":[{"constant":false,"id":9347,"mutability":"mutable","name":"last","nameLocation":"18777:4:28","nodeType":"VariableDeclaration","scope":9398,"src":"18755:26:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9346,"nodeType":"UserDefinedTypeName","pathNode":{"id":9345,"name":"Checkpoint160","nameLocations":["18755:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"18755:13:28"},"referencedDeclaration":9020,"src":"18755:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":9354,"initialValue":{"arguments":[{"id":9349,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"18798:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9350,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9338,"src":"18804:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18810:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18804:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9348,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"18784:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18784:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18755:57:28"},{"assignments":[9356],"declarations":[{"constant":false,"id":9356,"mutability":"mutable","name":"lastKey","nameLocation":"18833:7:28","nodeType":"VariableDeclaration","scope":9398,"src":"18826:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9355,"name":"uint96","nodeType":"ElementaryTypeName","src":"18826:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":9359,"initialValue":{"expression":{"id":9357,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"18843:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18848:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9017,"src":"18843:9:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"18826:26:28"},{"assignments":[9361],"declarations":[{"constant":false,"id":9361,"mutability":"mutable","name":"lastValue","nameLocation":"18874:9:28","nodeType":"VariableDeclaration","scope":9398,"src":"18866:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9360,"name":"uint160","nodeType":"ElementaryTypeName","src":"18866:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":9364,"initialValue":{"expression":{"id":9362,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"18886:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18891:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"18886:11:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"18866:31:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9365,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"18971:7:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9366,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"18981:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18971:13:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9372,"nodeType":"IfStatement","src":"18967:89:28","trueBody":{"id":9371,"nodeType":"Block","src":"18986:70:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9368,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"19011:28:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19011:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9370,"nodeType":"RevertStatement","src":"19004:37:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9373,"name":"lastKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9356,"src":"19119:7:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9374,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"19130:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19119:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9392,"nodeType":"Block","src":"19193:85:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":9387,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9328,"src":"19242:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":9388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"19255:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9386,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9020,"src":"19221:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19236:4:28","19247:6:28"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19221:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$9020_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":9383,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9326,"src":"19211:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":9385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19216:4:28","memberName":"push","nodeType":"MemberAccess","src":"19211:9:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$9020_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":9390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19211:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9391,"nodeType":"ExpressionStatement","src":"19211:52:28"}]},"id":9393,"nodeType":"IfStatement","src":"19115:163:28","trueBody":{"id":9382,"nodeType":"Block","src":"19135:52:28","statements":[{"expression":{"id":9380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9376,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"19153:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19158:6:28","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":9019,"src":"19153:11:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"19167:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"19153:19:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":9381,"nodeType":"ExpressionStatement","src":"19153:19:28"}]}},{"expression":{"components":[{"id":9394,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"19299:9:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":9395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9330,"src":"19310:5:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":9396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19298:18:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":9336,"id":9397,"nodeType":"Return","src":"19291:25:28"}]}}]},"documentation":{"id":9322,"nodeType":"StructuredDocumentation","src":"18355:165:28","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":9415,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18534:7:28","nodeType":"FunctionDefinition","parameters":{"id":9331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9326,"mutability":"mutable","name":"self","nameLocation":"18575:4:28","nodeType":"VariableDeclaration","scope":9415,"src":"18551:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9324,"nodeType":"UserDefinedTypeName","pathNode":{"id":9323,"name":"Checkpoint160","nameLocations":["18551:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"18551:13:28"},"referencedDeclaration":9020,"src":"18551:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9325,"nodeType":"ArrayTypeName","src":"18551:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9328,"mutability":"mutable","name":"key","nameLocation":"18596:3:28","nodeType":"VariableDeclaration","scope":9415,"src":"18589:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9327,"name":"uint96","nodeType":"ElementaryTypeName","src":"18589:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9330,"mutability":"mutable","name":"value","nameLocation":"18617:5:28","nodeType":"VariableDeclaration","scope":9415,"src":"18609:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9329,"name":"uint160","nodeType":"ElementaryTypeName","src":"18609:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18541:87:28"},"returnParameters":{"id":9336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9333,"mutability":"mutable","name":"oldValue","nameLocation":"18654:8:28","nodeType":"VariableDeclaration","scope":9415,"src":"18646:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9332,"name":"uint160","nodeType":"ElementaryTypeName","src":"18646:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":9335,"mutability":"mutable","name":"newValue","nameLocation":"18672:8:28","nodeType":"VariableDeclaration","scope":9415,"src":"18664:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":9334,"name":"uint160","nodeType":"ElementaryTypeName","src":"18664:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18645:36:28"},"scope":9535,"src":"18525:922:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":9466,"nodeType":"Block","src":"19963:267:28","statements":[{"body":{"id":9462,"nodeType":"Block","src":"19992:211:28","statements":[{"assignments":[9435],"declarations":[{"constant":false,"id":9435,"mutability":"mutable","name":"mid","nameLocation":"20014:3:28","nodeType":"VariableDeclaration","scope":9462,"src":"20006:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9434,"name":"uint256","nodeType":"ElementaryTypeName","src":"20006:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9441,"initialValue":{"arguments":[{"id":9438,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"20033:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9439,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"20038:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9436,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"20020:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":9437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20025:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"20020:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20020:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20006:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9443,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9420,"src":"20075:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9444,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"20081:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9442,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"20061:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20061:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20086:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9017,"src":"20061:29:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9447,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9422,"src":"20093:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20061:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9460,"nodeType":"Block","src":"20147:46:28","statements":[{"expression":{"id":9458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9454,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"20165:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9455,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"20171:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20177:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20171:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20165:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9459,"nodeType":"ExpressionStatement","src":"20165:13:28"}]},"id":9461,"nodeType":"IfStatement","src":"20057:136:28","trueBody":{"id":9453,"nodeType":"Block","src":"20098:43:28","statements":[{"expression":{"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9449,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"20116:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9450,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"20123:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9452,"nodeType":"ExpressionStatement","src":"20116:10:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9431,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9424,"src":"19980:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9432,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"19986:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19980:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9463,"nodeType":"WhileStatement","src":"19973:230:28"},{"expression":{"id":9464,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9426,"src":"20219:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9430,"id":9465,"nodeType":"Return","src":"20212:11:28"}]},"documentation":{"id":9416,"nodeType":"StructuredDocumentation","src":"19453:339:28","text":" @dev Return the index of the first (oldest) checkpoint with key strictly bigger than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9467,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19806:18:28","nodeType":"FunctionDefinition","parameters":{"id":9427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9420,"mutability":"mutable","name":"self","nameLocation":"19858:4:28","nodeType":"VariableDeclaration","scope":9467,"src":"19834:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9418,"nodeType":"UserDefinedTypeName","pathNode":{"id":9417,"name":"Checkpoint160","nameLocations":["19834:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"19834:13:28"},"referencedDeclaration":9020,"src":"19834:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9419,"nodeType":"ArrayTypeName","src":"19834:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9422,"mutability":"mutable","name":"key","nameLocation":"19879:3:28","nodeType":"VariableDeclaration","scope":9467,"src":"19872:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9421,"name":"uint96","nodeType":"ElementaryTypeName","src":"19872:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9424,"mutability":"mutable","name":"low","nameLocation":"19900:3:28","nodeType":"VariableDeclaration","scope":9467,"src":"19892:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9423,"name":"uint256","nodeType":"ElementaryTypeName","src":"19892:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9426,"mutability":"mutable","name":"high","nameLocation":"19921:4:28","nodeType":"VariableDeclaration","scope":9467,"src":"19913:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9425,"name":"uint256","nodeType":"ElementaryTypeName","src":"19913:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19824:107:28"},"returnParameters":{"id":9430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9467,"src":"19954:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9428,"name":"uint256","nodeType":"ElementaryTypeName","src":"19954:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19953:9:28"},"scope":9535,"src":"19797:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9518,"nodeType":"Block","src":"20747:267:28","statements":[{"body":{"id":9514,"nodeType":"Block","src":"20776:211:28","statements":[{"assignments":[9487],"declarations":[{"constant":false,"id":9487,"mutability":"mutable","name":"mid","nameLocation":"20798:3:28","nodeType":"VariableDeclaration","scope":9514,"src":"20790:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9486,"name":"uint256","nodeType":"ElementaryTypeName","src":"20790:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9493,"initialValue":{"arguments":[{"id":9490,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"20817:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9491,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"20822:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9488,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"20804:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":9489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20809:7:28","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4697,"src":"20804:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20804:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20790:37:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9495,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9472,"src":"20859:4:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":9496,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"20865:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9494,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[8486,9010,9534],"referencedDeclaration":9534,"src":"20845:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$9020_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20845:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":9498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20870:4:28","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":9017,"src":"20845:29:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9499,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"20877:3:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20845:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9512,"nodeType":"Block","src":"20934:43:28","statements":[{"expression":{"id":9510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9508,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"20952:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9509,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"20959:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20952:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9511,"nodeType":"ExpressionStatement","src":"20952:10:28"}]},"id":9513,"nodeType":"IfStatement","src":"20841:136:28","trueBody":{"id":9507,"nodeType":"Block","src":"20882:46:28","statements":[{"expression":{"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9501,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"20900:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9502,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"20906:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":9503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20912:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20906:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20900:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9506,"nodeType":"ExpressionStatement","src":"20900:13:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9483,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9476,"src":"20764:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9484,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"20770:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20764:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9515,"nodeType":"WhileStatement","src":"20757:230:28"},{"expression":{"id":9516,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"21003:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9482,"id":9517,"nodeType":"Return","src":"20996:11:28"}]},"documentation":{"id":9468,"nodeType":"StructuredDocumentation","src":"20236:340:28","text":" @dev Return the index of the first (oldest) checkpoint with key greater or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":9519,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20590:18:28","nodeType":"FunctionDefinition","parameters":{"id":9479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9472,"mutability":"mutable","name":"self","nameLocation":"20642:4:28","nodeType":"VariableDeclaration","scope":9519,"src":"20618:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9470,"nodeType":"UserDefinedTypeName","pathNode":{"id":9469,"name":"Checkpoint160","nameLocations":["20618:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"20618:13:28"},"referencedDeclaration":9020,"src":"20618:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9471,"nodeType":"ArrayTypeName","src":"20618:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9474,"mutability":"mutable","name":"key","nameLocation":"20663:3:28","nodeType":"VariableDeclaration","scope":9519,"src":"20656:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":9473,"name":"uint96","nodeType":"ElementaryTypeName","src":"20656:6:28","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":9476,"mutability":"mutable","name":"low","nameLocation":"20684:3:28","nodeType":"VariableDeclaration","scope":9519,"src":"20676:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9475,"name":"uint256","nodeType":"ElementaryTypeName","src":"20676:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9478,"mutability":"mutable","name":"high","nameLocation":"20705:4:28","nodeType":"VariableDeclaration","scope":9519,"src":"20697:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9477,"name":"uint256","nodeType":"ElementaryTypeName","src":"20697:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20608:107:28"},"returnParameters":{"id":9482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9519,"src":"20738:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9480,"name":"uint256","nodeType":"ElementaryTypeName","src":"20738:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20737:9:28"},"scope":9535,"src":"20581:433:28","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9533,"nodeType":"Block","src":"21297:125:28","statements":[{"AST":{"nodeType":"YulBlock","src":"21316:100:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21337:1:28","type":"","value":"0"},{"name":"self.slot","nodeType":"YulIdentifier","src":"21340:9:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21330:6:28"},"nodeType":"YulFunctionCall","src":"21330:20:28"},"nodeType":"YulExpressionStatement","src":"21330:20:28"},{"nodeType":"YulAssignment","src":"21363:43:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21392:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21395:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21382:9:28"},"nodeType":"YulFunctionCall","src":"21382:18:28"},{"name":"pos","nodeType":"YulIdentifier","src":"21402:3:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21378:3:28"},"nodeType":"YulFunctionCall","src":"21378:28:28"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"21363:11:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9526,"isOffset":false,"isSlot":false,"src":"21402:3:28","valueSize":1},{"declaration":9530,"isOffset":false,"isSlot":true,"src":"21363:11:28","suffix":"slot","valueSize":1},{"declaration":9524,"isOffset":false,"isSlot":true,"src":"21340:9:28","suffix":"slot","valueSize":1}],"id":9532,"nodeType":"InlineAssembly","src":"21307:109:28"}]},"documentation":{"id":9520,"nodeType":"StructuredDocumentation","src":"21020:132:28","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":9534,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"21166:13:28","nodeType":"FunctionDefinition","parameters":{"id":9527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"self","nameLocation":"21213:4:28","nodeType":"VariableDeclaration","scope":9534,"src":"21189:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":9522,"nodeType":"UserDefinedTypeName","pathNode":{"id":9521,"name":"Checkpoint160","nameLocations":["21189:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"21189:13:28"},"referencedDeclaration":9020,"src":"21189:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":9523,"nodeType":"ArrayTypeName","src":"21189:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$9020_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":9526,"mutability":"mutable","name":"pos","nameLocation":"21235:3:28","nodeType":"VariableDeclaration","scope":9534,"src":"21227:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9525,"name":"uint256","nodeType":"ElementaryTypeName","src":"21227:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21179:65:28"},"returnParameters":{"id":9531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9530,"mutability":"mutable","name":"result","nameLocation":"21289:6:28","nodeType":"VariableDeclaration","scope":9534,"src":"21267:28:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":9529,"nodeType":"UserDefinedTypeName","pathNode":{"id":9528,"name":"Checkpoint160","nameLocations":["21267:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9020,"src":"21267:13:28"},"referencedDeclaration":9020,"src":"21267:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$9020_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"21266:30:28"},"scope":9535,"src":"21157:265:28","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":9536,"src":"668:20756:28","usedErrors":[7962],"usedEvents":[]}],"src":"201:21224:28"},"id":28},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[6045],"SafeCast":[7810],"Time":[9809]},"id":9810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9537,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":9539,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9810,"sourceUnit":6046,"src":"130:38:29","symbolAliases":[{"foreign":{"id":9538,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"138:4:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":9541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9810,"sourceUnit":7811,"src":"169:46:29","symbolAliases":[{"foreign":{"id":9540,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"177:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":9542,"nodeType":"StructuredDocumentation","src":"217:422:29","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":9809,"linearizedBaseContracts":[9809],"name":"Time","nameLocation":"648:4:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9544,"libraryName":{"id":9543,"name":"Time","nameLocations":["665:4:29"],"nodeType":"IdentifierPath","referencedDeclaration":9809,"src":"665:4:29"},"nodeType":"UsingForDirective","src":"659:17:29"},{"body":{"id":9556,"nodeType":"Block","src":"802:58:29","statements":[{"expression":{"arguments":[{"expression":{"id":9552,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"819:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":9551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:29","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6800,"src":"819:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9549,"id":9555,"nodeType":"Return","src":"812:41:29"}]},"documentation":{"id":9545,"nodeType":"StructuredDocumentation","src":"682:63:29","text":" @dev Get the block timestamp as a Timepoint."},"id":9557,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:29","nodeType":"FunctionDefinition","parameters":{"id":9546,"nodeType":"ParameterList","parameters":[],"src":"768:2:29"},"returnParameters":{"id":9549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9557,"src":"794:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9547,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:29"},"scope":9809,"src":"750:110:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9569,"nodeType":"Block","src":"985:55:29","statements":[{"expression":{"arguments":[{"expression":{"id":9565,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:29","memberName":"number","nodeType":"MemberAccess","src":"1020:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7810,"src":"1002:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7810_$","typeString":"type(library SafeCast)"}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:29","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":6800,"src":"1002:17:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":9562,"id":9568,"nodeType":"Return","src":"995:38:29"}]},"documentation":{"id":9558,"nodeType":"StructuredDocumentation","src":"866:60:29","text":" @dev Get the block number as a Timepoint."},"id":9570,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:29","nodeType":"FunctionDefinition","parameters":{"id":9559,"nodeType":"ParameterList","parameters":[],"src":"951:2:29"},"returnParameters":{"id":9562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9570,"src":"977:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9560,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:29"},"scope":9809,"src":"931:109:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":9572,"name":"Delay","nameLocation":"2377:5:29","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:29","underlyingType":{"id":9571,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":9586,"nodeType":"Block","src":"2572:44:29","statements":[{"expression":{"arguments":[{"id":9583,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"2600:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9581,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"2589:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9572_$","typeString":"type(Time.Delay)"}},"id":9582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:29","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:29","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"functionReturnParameters":9580,"id":9585,"nodeType":"Return","src":"2582:27:29"}]},"documentation":{"id":9573,"nodeType":"StructuredDocumentation","src":"2400:103:29","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":9587,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:29","nodeType":"FunctionDefinition","parameters":{"id":9576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9575,"mutability":"mutable","name":"duration","nameLocation":"2532:8:29","nodeType":"VariableDeclaration","scope":9587,"src":"2525:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9574,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:29"},"returnParameters":{"id":9580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9587,"src":"2565:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9578,"nodeType":"UserDefinedTypeName","pathNode":{"id":9577,"name":"Delay","nameLocations":["2565:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"2565:5:29"},"referencedDeclaration":9572,"src":"2565:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:29"},"scope":9809,"src":"2508:108:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9624,"nodeType":"Block","src":"3016:159:29","statements":[{"expression":{"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":9602,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9596,"src":"3027:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9603,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"3040:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9604,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"3052:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9605,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3026:33:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9606,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9591,"src":"3062:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"id":9607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3067:6:29","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":9770,"src":"3062:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9572_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"src":"3026:49:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9610,"nodeType":"ExpressionStatement","src":"3026:49:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9611,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"3092:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9612,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9593,"src":"3102:9:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3092:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":9618,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9596,"src":"3136:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9619,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"3149:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9620,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"3161:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3135:33:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":9622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3092:76:29","trueExpression":{"components":[{"id":9614,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9598,"src":"3115:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":9615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3127:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":9616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3130:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":9617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:18:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9601,"id":9623,"nodeType":"Return","src":"3085:83:29"}]},"documentation":{"id":9588,"nodeType":"StructuredDocumentation","src":"2622:241:29","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":9625,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:29","nodeType":"FunctionDefinition","parameters":{"id":9594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9591,"mutability":"mutable","name":"self","nameLocation":"2903:4:29","nodeType":"VariableDeclaration","scope":9625,"src":"2897:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9590,"nodeType":"UserDefinedTypeName","pathNode":{"id":9589,"name":"Delay","nameLocations":["2897:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"2897:5:29"},"referencedDeclaration":9572,"src":"2897:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9593,"mutability":"mutable","name":"timepoint","nameLocation":"2924:9:29","nodeType":"VariableDeclaration","scope":9625,"src":"2917:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9592,"name":"uint48","nodeType":"ElementaryTypeName","src":"2917:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:52:29"},"returnParameters":{"id":9601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9596,"mutability":"mutable","name":"valueBefore","nameLocation":"2969:11:29","nodeType":"VariableDeclaration","scope":9625,"src":"2962:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9595,"name":"uint32","nodeType":"ElementaryTypeName","src":"2962:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9598,"mutability":"mutable","name":"valueAfter","nameLocation":"2989:10:29","nodeType":"VariableDeclaration","scope":9625,"src":"2982:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9597,"name":"uint32","nodeType":"ElementaryTypeName","src":"2982:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9600,"mutability":"mutable","name":"effect","nameLocation":"3008:6:29","nodeType":"VariableDeclaration","scope":9625,"src":"3001:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9599,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2961:54:29"},"scope":9809,"src":"2868:307:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9644,"nodeType":"Block","src":"3499:53:29","statements":[{"expression":{"arguments":[{"id":9639,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"3527:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":9640,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9557,"src":"3533:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3533:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9638,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9625,"src":"3516:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$9572_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9637,"id":9643,"nodeType":"Return","src":"3509:36:29"}]},"documentation":{"id":9626,"nodeType":"StructuredDocumentation","src":"3181:207:29","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":9645,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3402:7:29","nodeType":"FunctionDefinition","parameters":{"id":9630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9629,"mutability":"mutable","name":"self","nameLocation":"3416:4:29","nodeType":"VariableDeclaration","scope":9645,"src":"3410:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9628,"nodeType":"UserDefinedTypeName","pathNode":{"id":9627,"name":"Delay","nameLocations":["3410:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"3410:5:29"},"referencedDeclaration":9572,"src":"3410:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3409:12:29"},"returnParameters":{"id":9637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9632,"mutability":"mutable","name":"valueBefore","nameLocation":"3452:11:29","nodeType":"VariableDeclaration","scope":9645,"src":"3445:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9631,"name":"uint32","nodeType":"ElementaryTypeName","src":"3445:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9634,"mutability":"mutable","name":"valueAfter","nameLocation":"3472:10:29","nodeType":"VariableDeclaration","scope":9645,"src":"3465:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9633,"name":"uint32","nodeType":"ElementaryTypeName","src":"3465:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9636,"mutability":"mutable","name":"effect","nameLocation":"3491:6:29","nodeType":"VariableDeclaration","scope":9645,"src":"3484:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9635,"name":"uint48","nodeType":"ElementaryTypeName","src":"3484:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3444:54:29"},"scope":9809,"src":"3393:159:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9662,"nodeType":"Block","src":"3665:74:29","statements":[{"assignments":[9655,null,null],"declarations":[{"constant":false,"id":9655,"mutability":"mutable","name":"delay","nameLocation":"3683:5:29","nodeType":"VariableDeclaration","scope":9662,"src":"3676:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9654,"name":"uint32","nodeType":"ElementaryTypeName","src":"3676:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":9659,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9656,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"3696:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"id":9657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3701:7:29","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":9645,"src":"3696:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9572_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":9658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3675:35:29"},{"expression":{"id":9660,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9655,"src":"3727:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":9653,"id":9661,"nodeType":"Return","src":"3720:12:29"}]},"documentation":{"id":9646,"nodeType":"StructuredDocumentation","src":"3558:46:29","text":" @dev Get the current value."},"id":9663,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3618:3:29","nodeType":"FunctionDefinition","parameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"self","nameLocation":"3628:4:29","nodeType":"VariableDeclaration","scope":9663,"src":"3622:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9648,"nodeType":"UserDefinedTypeName","pathNode":{"id":9647,"name":"Delay","nameLocations":["3622:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"3622:5:29"},"referencedDeclaration":9572,"src":"3622:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3621:12:29"},"returnParameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9663,"src":"3657:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9651,"name":"uint32","nodeType":"ElementaryTypeName","src":"3657:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3656:8:29"},"scope":9809,"src":"3609:130:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9718,"nodeType":"Block","src":"4189:234:29","statements":[{"assignments":[9680],"declarations":[{"constant":false,"id":9680,"mutability":"mutable","name":"value","nameLocation":"4206:5:29","nodeType":"VariableDeclaration","scope":9718,"src":"4199:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9679,"name":"uint32","nodeType":"ElementaryTypeName","src":"4199:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9684,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9681,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9667,"src":"4214:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"id":9682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4219:3:29","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":9663,"src":"4214:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$9572_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":9683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4199:25:29"},{"assignments":[9686],"declarations":[{"constant":false,"id":9686,"mutability":"mutable","name":"setback","nameLocation":"4241:7:29","nodeType":"VariableDeclaration","scope":9718,"src":"4234:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9685,"name":"uint32","nodeType":"ElementaryTypeName","src":"4234:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":9702,"initialValue":{"arguments":[{"arguments":[{"id":9691,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"4267:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"4279:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9693,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"4287:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4279:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4317:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4279:39:29","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"4298:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9696,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"4306:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4298:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":9689,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"4258:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6045_$","typeString":"type(library Math)"}},"id":9690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4263:3:29","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":4655,"src":"4258:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:61:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4251:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9687,"name":"uint32","nodeType":"ElementaryTypeName","src":"4251:6:29","typeDescriptions":{}}},"id":9701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:69:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4234:86:29"},{"expression":{"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9703,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"4330:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":9707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9704,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9557,"src":"4339:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":9705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4339:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9706,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"4353:7:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4339:21:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4330:30:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9709,"nodeType":"ExpressionStatement","src":"4330:30:29"},{"expression":{"components":[{"arguments":[{"id":9711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9680,"src":"4383:5:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9712,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"4390:8:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9713,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"4400:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9710,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"4378:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":9714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4378:29:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},{"id":9715,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"4409:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4377:39:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$9572_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":9678,"id":9717,"nodeType":"Return","src":"4370:46:29"}]},"documentation":{"id":9664,"nodeType":"StructuredDocumentation","src":"3745:283:29","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":9719,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"4042:10:29","nodeType":"FunctionDefinition","parameters":{"id":9672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9667,"mutability":"mutable","name":"self","nameLocation":"4068:4:29","nodeType":"VariableDeclaration","scope":9719,"src":"4062:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9666,"nodeType":"UserDefinedTypeName","pathNode":{"id":9665,"name":"Delay","nameLocations":["4062:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"4062:5:29"},"referencedDeclaration":9572,"src":"4062:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9669,"mutability":"mutable","name":"newValue","nameLocation":"4089:8:29","nodeType":"VariableDeclaration","scope":9719,"src":"4082:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9668,"name":"uint32","nodeType":"ElementaryTypeName","src":"4082:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9671,"mutability":"mutable","name":"minSetback","nameLocation":"4114:10:29","nodeType":"VariableDeclaration","scope":9719,"src":"4107:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9670,"name":"uint32","nodeType":"ElementaryTypeName","src":"4107:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4052:78:29"},"returnParameters":{"id":9678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9675,"mutability":"mutable","name":"updatedDelay","nameLocation":"4160:12:29","nodeType":"VariableDeclaration","scope":9719,"src":"4154:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9674,"nodeType":"UserDefinedTypeName","pathNode":{"id":9673,"name":"Delay","nameLocations":["4154:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"4154:5:29"},"referencedDeclaration":9572,"src":"4154:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":9677,"mutability":"mutable","name":"effect","nameLocation":"4181:6:29","nodeType":"VariableDeclaration","scope":9719,"src":"4174:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9676,"name":"uint48","nodeType":"ElementaryTypeName","src":"4174:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4153:35:29"},"scope":9809,"src":"4033:390:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9769,"nodeType":"Block","src":"4656:212:29","statements":[{"assignments":[9733],"declarations":[{"constant":false,"id":9733,"mutability":"mutable","name":"raw","nameLocation":"4674:3:29","nodeType":"VariableDeclaration","scope":9769,"src":"4666:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":9732,"name":"uint112","nodeType":"ElementaryTypeName","src":"4666:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":9738,"initialValue":{"arguments":[{"id":9736,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9723,"src":"4693:4:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}],"expression":{"id":9734,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"4680:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9572_$","typeString":"type(Time.Delay)"}},"id":9735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4686:6:29","memberName":"unwrap","nodeType":"MemberAccess","src":"4680:12:29","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$9572_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":9737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4666:32:29"},{"expression":{"id":9744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9739,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9728,"src":"4709:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9742,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"4729:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4722:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9740,"name":"uint32","nodeType":"ElementaryTypeName","src":"4722:6:29","typeDescriptions":{}}},"id":9743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4709:24:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9745,"nodeType":"ExpressionStatement","src":"4709:24:29"},{"expression":{"id":9753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9746,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9726,"src":"4743:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9749,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"4764:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":9750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4771:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4764:9:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4757:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9747,"name":"uint32","nodeType":"ElementaryTypeName","src":"4757:6:29","typeDescriptions":{}}},"id":9752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4757:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4743:31:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":9754,"nodeType":"ExpressionStatement","src":"4743:31:29"},{"expression":{"id":9762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9755,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"4784:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9758,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9733,"src":"4800:3:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4807:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4800:9:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":9757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4793:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":9756,"name":"uint48","nodeType":"ElementaryTypeName","src":"4793:6:29","typeDescriptions":{}}},"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4784:26:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":9763,"nodeType":"ExpressionStatement","src":"4784:26:29"},{"expression":{"components":[{"id":9764,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9726,"src":"4829:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9765,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9728,"src":"4842:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":9766,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"4854:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":9767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:33:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":9731,"id":9768,"nodeType":"Return","src":"4821:40:29"}]},"documentation":{"id":9720,"nodeType":"StructuredDocumentation","src":"4429:117:29","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":9770,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4560:6:29","nodeType":"FunctionDefinition","parameters":{"id":9724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9723,"mutability":"mutable","name":"self","nameLocation":"4573:4:29","nodeType":"VariableDeclaration","scope":9770,"src":"4567:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9722,"nodeType":"UserDefinedTypeName","pathNode":{"id":9721,"name":"Delay","nameLocations":["4567:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"4567:5:29"},"referencedDeclaration":9572,"src":"4567:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4566:12:29"},"returnParameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9726,"mutability":"mutable","name":"valueBefore","nameLocation":"4609:11:29","nodeType":"VariableDeclaration","scope":9770,"src":"4602:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9725,"name":"uint32","nodeType":"ElementaryTypeName","src":"4602:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9728,"mutability":"mutable","name":"valueAfter","nameLocation":"4629:10:29","nodeType":"VariableDeclaration","scope":9770,"src":"4622:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9727,"name":"uint32","nodeType":"ElementaryTypeName","src":"4622:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9730,"mutability":"mutable","name":"effect","nameLocation":"4648:6:29","nodeType":"VariableDeclaration","scope":9770,"src":"4641:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9729,"name":"uint48","nodeType":"ElementaryTypeName","src":"4641:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4601:54:29"},"scope":9809,"src":"4551:317:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9807,"nodeType":"Block","src":"5041:112:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9787,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9777,"src":"5078:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5070:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9785,"name":"uint112","nodeType":"ElementaryTypeName","src":"5070:7:29","typeDescriptions":{}}},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5070:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5070:21:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9791,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5069:23:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":9797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9794,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9773,"src":"5104:11:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5096:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9792,"name":"uint112","nodeType":"ElementaryTypeName","src":"5096:7:29","typeDescriptions":{}}},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":9796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5096:26:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":9798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5095:28:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:54:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9802,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9775,"src":"5134:10:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":9801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5126:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":9800,"name":"uint112","nodeType":"ElementaryTypeName","src":"5126:7:29","typeDescriptions":{}}},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5069:76:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":9783,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9572,"src":"5058:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$9572_$","typeString":"type(Time.Delay)"}},"id":9784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5064:4:29","memberName":"wrap","nodeType":"MemberAccess","src":"5058:10:29","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$9572_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5058:88:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"functionReturnParameters":9782,"id":9806,"nodeType":"Return","src":"5051:95:29"}]},"documentation":{"id":9771,"nodeType":"StructuredDocumentation","src":"4874:64:29","text":" @dev pack the components into a Delay object."},"id":9808,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4952:4:29","nodeType":"FunctionDefinition","parameters":{"id":9778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9773,"mutability":"mutable","name":"valueBefore","nameLocation":"4964:11:29","nodeType":"VariableDeclaration","scope":9808,"src":"4957:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9772,"name":"uint32","nodeType":"ElementaryTypeName","src":"4957:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9775,"mutability":"mutable","name":"valueAfter","nameLocation":"4984:10:29","nodeType":"VariableDeclaration","scope":9808,"src":"4977:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":9774,"name":"uint32","nodeType":"ElementaryTypeName","src":"4977:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":9777,"mutability":"mutable","name":"effect","nameLocation":"5003:6:29","nodeType":"VariableDeclaration","scope":9808,"src":"4996:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":9776,"name":"uint48","nodeType":"ElementaryTypeName","src":"4996:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4956:54:29"},"returnParameters":{"id":9782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9808,"src":"5034:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"},"typeName":{"id":9780,"nodeType":"UserDefinedTypeName","pathNode":{"id":9779,"name":"Delay","nameLocations":["5034:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":9572,"src":"5034:5:29"},"referencedDeclaration":9572,"src":"5034:5:29","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$9572","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"5033:7:29"},"scope":9809,"src":"4943:210:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9810,"src":"640:4515:29","usedErrors":[],"usedEvents":[]}],"src":"104:5052:29"},"id":29},"contracts/CustomERC20.sol":{"ast":{"absolutePath":"contracts/CustomERC20.sol","exportedSymbols":{"Context":[2012],"CustomERC20":[9852],"ERC20":[1476],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1946]},"id":9853,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9853,"sourceUnit":1477,"src":"61:55:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9813,"name":"ERC20","nameLocations":["144:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"144:5:30"},"id":9814,"nodeType":"InheritanceSpecifier","src":"144:5:30"}],"canonicalName":"CustomERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9852,"linearizedBaseContracts":[9852,1476,866,1946,1554,2012],"name":"CustomERC20","nameLocation":"129:11:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":9825,"nodeType":"Block","src":"231:2:30","statements":[]},"id":9826,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9821,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9816,"src":"217:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9822,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9818,"src":"223:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9823,"kind":"baseConstructorSpecifier","modifierName":{"id":9820,"name":"ERC20","nameLocations":["211:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"211:5:30"},"nodeType":"ModifierInvocation","src":"211:19:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9816,"mutability":"mutable","name":"name","nameLocation":"183:4:30","nodeType":"VariableDeclaration","scope":9826,"src":"169:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9815,"name":"string","nodeType":"ElementaryTypeName","src":"169:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9818,"mutability":"mutable","name":"symbol","nameLocation":"203:6:30","nodeType":"VariableDeclaration","scope":9826,"src":"189:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9817,"name":"string","nodeType":"ElementaryTypeName","src":"189:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"168:42:30"},"returnParameters":{"id":9824,"nodeType":"ParameterList","parameters":[],"src":"231:0:30"},"scope":9852,"src":"157:76:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9838,"nodeType":"Block","src":"298:36:30","statements":[{"expression":{"arguments":[{"id":9834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9828,"src":"315:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9835,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9830,"src":"319:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9833,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"309:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"309:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9837,"nodeType":"ExpressionStatement","src":"309:17:30"}]},"functionSelector":"40c10f19","id":9839,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"250:4:30","nodeType":"FunctionDefinition","parameters":{"id":9831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9828,"mutability":"mutable","name":"to","nameLocation":"263:2:30","nodeType":"VariableDeclaration","scope":9839,"src":"255:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9827,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9830,"mutability":"mutable","name":"amount","nameLocation":"275:6:30","nodeType":"VariableDeclaration","scope":9839,"src":"267:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9829,"name":"uint256","nodeType":"ElementaryTypeName","src":"267:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"254:28:30"},"returnParameters":{"id":9832,"nodeType":"ParameterList","parameters":[],"src":"298:0:30"},"scope":9852,"src":"241:93:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":9850,"nodeType":"Block","src":"387:44:30","statements":[{"expression":{"arguments":[{"expression":{"id":9845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"404:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"408:6:30","memberName":"sender","nodeType":"MemberAccess","src":"404:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9847,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9841,"src":"416:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9844,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"398:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"398:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9849,"nodeType":"ExpressionStatement","src":"398:25:30"}]},"functionSelector":"42966c68","id":9851,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"351:4:30","nodeType":"FunctionDefinition","parameters":{"id":9842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9841,"mutability":"mutable","name":"amount","nameLocation":"364:6:30","nodeType":"VariableDeclaration","scope":9851,"src":"356:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9840,"name":"uint256","nodeType":"ElementaryTypeName","src":"356:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"355:16:30"},"returnParameters":{"id":9843,"nodeType":"ParameterList","parameters":[],"src":"387:0:30"},"scope":9852,"src":"342:89:30","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":9853,"src":"120:314:30","usedErrors":[836,841,846,855,860,865],"usedEvents":[1488,1497]}],"src":"33:402:30"},"id":30},"contracts/NewToken.sol":{"ast":{"absolutePath":"contracts/NewToken.sol","exportedSymbols":{"Checkpoints":[9535],"Context":[2012],"CustomERC20":[9852],"ECDSA":[4138],"EIP712":[4365],"ERC20":[1476],"ERC20Burnable":[1600],"ERC20Pausable":[1634],"ERC20Permit":[1788],"ERC20Votes":[1920],"IERC20":[1554],"IERC20Errors":[866],"IERC20Metadata":[1946],"IERC20Permit":[1982],"NewToken":[10275],"Nonces":[2080],"Ownable":[147],"Pausable":[2249],"Votes":[773]},"id":10276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9854,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:31"},{"absolutePath":"contracts/CustomERC20.sol","file":"./CustomERC20.sol","id":9855,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":9853,"src":"61:27:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":9856,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":1601,"src":"90:74:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":9857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":1635,"src":"166:74:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9858,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":148,"src":"242:52:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":9859,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":1789,"src":"296:72:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":9860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10276,"sourceUnit":1921,"src":"370:71:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9861,"name":"CustomERC20","nameLocations":["466:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9852,"src":"466:11:31"},"id":9862,"nodeType":"InheritanceSpecifier","src":"466:11:31"},{"baseName":{"id":9863,"name":"ERC20Burnable","nameLocations":["479:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"479:13:31"},"id":9864,"nodeType":"InheritanceSpecifier","src":"479:13:31"},{"baseName":{"id":9865,"name":"ERC20Pausable","nameLocations":["494:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"494:13:31"},"id":9866,"nodeType":"InheritanceSpecifier","src":"494:13:31"},{"baseName":{"id":9867,"name":"Ownable","nameLocations":["509:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"509:7:31"},"id":9868,"nodeType":"InheritanceSpecifier","src":"509:7:31"},{"baseName":{"id":9869,"name":"ERC20Permit","nameLocations":["518:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"518:11:31"},"id":9870,"nodeType":"InheritanceSpecifier","src":"518:11:31"},{"baseName":{"id":9871,"name":"ERC20Votes","nameLocations":["531:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":1920,"src":"531:10:31"},"id":9872,"nodeType":"InheritanceSpecifier","src":"531:10:31"}],"canonicalName":"NewToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10275,"internalFunctionIDs":{"750":1,"764":2},"linearizedBaseContracts":[10275,1920,773,809,230,824,1788,2080,4365,798,1982,147,1634,2249,1600,9852,1476,866,1946,1554,2012],"name":"NewToken","nameLocation":"454:8:31","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9874,"mutability":"mutable","name":"_tokenMetadataURI","nameLocation":"588:17:31","nodeType":"VariableDeclaration","scope":10275,"src":"573:32:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9873,"name":"string","nodeType":"ElementaryTypeName","src":"573:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"functionSelector":"32cb6b0c","id":9881,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"636:10:31","nodeType":"VariableDeclaration","scope":10275,"src":"612:53:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9875,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":9880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":9876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"649:7:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"659:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"663:2:31","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"659:6:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"649:16:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"867378c5","id":9888,"mutability":"constant","name":"MIN_BALANCE","nameLocation":"715:11:31","nodeType":"VariableDeclaration","scope":10275,"src":"691:48:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9882,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"729:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":9886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:2:31","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":9885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"737:2:31","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"733:6:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"729:10:31","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"a9e75723","id":9890,"mutability":"mutable","name":"maxTransferAmount","nameLocation":"810:17:31","nodeType":"VariableDeclaration","scope":10275,"src":"795:32:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9889,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"48709a93","id":9892,"mutability":"mutable","name":"transferRestricted","nameLocation":"846:18:31","nodeType":"VariableDeclaration","scope":10275,"src":"834:30:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9891,"name":"bool","nodeType":"ElementaryTypeName","src":"834:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a8","id":9898,"name":"TokenMinted","nameLocation":"904:11:31","nodeType":"EventDefinition","parameters":{"id":9897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9894,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"932:2:31","nodeType":"VariableDeclaration","scope":9898,"src":"916:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9893,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9896,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"944:6:31","nodeType":"VariableDeclaration","scope":9898,"src":"936:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9895,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"915:36:31"},"src":"898:54:31"},{"anonymous":false,"eventSelector":"1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa2","id":9904,"name":"TokenBurned","nameLocation":"964:11:31","nodeType":"EventDefinition","parameters":{"id":9903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9900,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"992:4:31","nodeType":"VariableDeclaration","scope":9904,"src":"976:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9899,"name":"address","nodeType":"ElementaryTypeName","src":"976:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9902,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1006:6:31","nodeType":"VariableDeclaration","scope":9904,"src":"998:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9901,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"975:38:31"},"src":"958:56:31"},{"anonymous":false,"eventSelector":"1e7d225cb161c2f834852cd521d7ee05358af80025a0e937483c51e42bfc13de","id":9910,"name":"MaxTransferAmountUpdated","nameLocation":"1026:24:31","nodeType":"EventDefinition","parameters":{"id":9909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9906,"indexed":false,"mutability":"mutable","name":"oldAmount","nameLocation":"1059:9:31","nodeType":"VariableDeclaration","scope":9910,"src":"1051:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1051:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9908,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"1078:9:31","nodeType":"VariableDeclaration","scope":9910,"src":"1070:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1050:38:31"},"src":"1020:69:31"},{"anonymous":false,"eventSelector":"35b05563db5dd3045c31a9b46a385d3e34a1b6ad51cc00c23562eccb5619002a","id":9916,"name":"TransferRestrictionUpdated","nameLocation":"1101:26:31","nodeType":"EventDefinition","parameters":{"id":9915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9912,"indexed":false,"mutability":"mutable","name":"oldStatus","nameLocation":"1133:9:31","nodeType":"VariableDeclaration","scope":9916,"src":"1128:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9911,"name":"bool","nodeType":"ElementaryTypeName","src":"1128:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9914,"indexed":false,"mutability":"mutable","name":"newStatus","nameLocation":"1149:9:31","nodeType":"VariableDeclaration","scope":9916,"src":"1144:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9913,"name":"bool","nodeType":"ElementaryTypeName","src":"1144:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1127:32:31"},"src":"1095:65:31"},{"anonymous":false,"eventSelector":"5bb111c9b2ad41c6cc1754cdbee2cc303b7becb89d29d2d5f91165fcc0b0a49d","id":9920,"name":"TokenURISet","nameLocation":"1172:11:31","nodeType":"EventDefinition","parameters":{"id":9919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9918,"indexed":false,"mutability":"mutable","name":"newTokenURI","nameLocation":"1191:11:31","nodeType":"VariableDeclaration","scope":9920,"src":"1184:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9917,"name":"string","nodeType":"ElementaryTypeName","src":"1184:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1183:20:31"},"src":"1166:38:31"},{"body":{"id":9954,"nodeType":"Block","src":"1391:206:31","statements":[{"expression":{"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9940,"name":"_tokenMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"1402:17:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9941,"name":"metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"1422:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1402:31:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9943,"nodeType":"ExpressionStatement","src":"1402:31:31"},{"expression":{"id":9948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9944,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"1444:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":9945,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9881,"src":"1464:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":9946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1477:3:31","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1464:16:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1444:36:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9949,"nodeType":"ExpressionStatement","src":"1444:36:31"},{"expression":{"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9950,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"1536:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1557:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1536:25:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9953,"nodeType":"ExpressionStatement","src":"1536:25:31"}]},"id":9955,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9929,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"1339:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9930,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"1345:6:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9931,"kind":"baseConstructorSpecifier","modifierName":{"id":9928,"name":"CustomERC20","nameLocations":["1327:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9852,"src":"1327:11:31"},"nodeType":"ModifierInvocation","src":"1327:25:31"},{"arguments":[{"id":9933,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"1365:4:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9934,"kind":"baseConstructorSpecifier","modifierName":{"id":9932,"name":"ERC20Permit","nameLocations":["1353:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"1353:11:31"},"nodeType":"ModifierInvocation","src":"1353:17:31"},{"arguments":[{"expression":{"id":9936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1379:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1383:6:31","memberName":"sender","nodeType":"MemberAccess","src":"1379:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9938,"kind":"baseConstructorSpecifier","modifierName":{"id":9935,"name":"Ownable","nameLocations":["1371:7:31"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1371:7:31"},"nodeType":"ModifierInvocation","src":"1371:19:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9922,"mutability":"mutable","name":"name","nameLocation":"1248:4:31","nodeType":"VariableDeclaration","scope":9955,"src":"1234:18:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9921,"name":"string","nodeType":"ElementaryTypeName","src":"1234:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9924,"mutability":"mutable","name":"symbol","nameLocation":"1277:6:31","nodeType":"VariableDeclaration","scope":9955,"src":"1263:20:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9923,"name":"string","nodeType":"ElementaryTypeName","src":"1263:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9926,"mutability":"mutable","name":"metadataURI","nameLocation":"1308:11:31","nodeType":"VariableDeclaration","scope":9955,"src":"1294:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9925,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1223:103:31"},"returnParameters":{"id":9939,"nodeType":"ParameterList","parameters":[],"src":"1391:0:31"},"scope":10275,"src":"1212:385:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9839],"body":{"id":9988,"nodeType":"Block","src":"1783:158:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9967,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1802:11:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"1818:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9971,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9881,"src":"1828:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:36:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d617820737570706c79","id":9973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1840:20:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""},"value":"Exceeds max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611","typeString":"literal_string \"Exceeds max supply\""}],"id":9966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1794:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:67:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9975,"nodeType":"ExpressionStatement","src":"1794:67:31"},{"expression":{"arguments":[{"id":9979,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"1883:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9980,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"1887:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9976,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1872:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NewToken_$10275_$","typeString":"type(contract super NewToken)"}},"id":9978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1878:4:31","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":9839,"src":"1872:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9982,"nodeType":"ExpressionStatement","src":"1872:22:31"},{"eventCall":{"arguments":[{"id":9984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9958,"src":"1922:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9985,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"1926:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9983,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9898,"src":"1910:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1910:23:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9987,"nodeType":"EmitStatement","src":"1905:28:31"}]},"documentation":{"id":9956,"nodeType":"StructuredDocumentation","src":"1605:104:31","text":" @dev 铸造代币\n @param to 接收地址\n @param amount 铸造数量"},"functionSelector":"40c10f19","id":9989,"implemented":true,"kind":"function","modifiers":[{"id":9963,"kind":"modifierInvocation","modifierName":{"id":9962,"name":"onlyOwner","nameLocations":["1764:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1764:9:31"},"nodeType":"ModifierInvocation","src":"1764:9:31"}],"name":"mint","nameLocation":"1724:4:31","nodeType":"FunctionDefinition","overrides":{"id":9964,"nodeType":"OverrideSpecifier","overrides":[],"src":"1774:8:31"},"parameters":{"id":9961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9958,"mutability":"mutable","name":"to","nameLocation":"1737:2:31","nodeType":"VariableDeclaration","scope":9989,"src":"1729:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9957,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9960,"mutability":"mutable","name":"amount","nameLocation":"1749:6:31","nodeType":"VariableDeclaration","scope":9989,"src":"1741:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:28:31"},"returnParameters":{"id":9965,"nodeType":"ParameterList","parameters":[],"src":"1783:0:31"},"scope":10275,"src":"1715:226:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1578,9851],"body":{"id":10033,"nodeType":"Block","src":"2102:314:31","statements":[{"assignments":[9999],"declarations":[{"constant":false,"id":9999,"mutability":"mutable","name":"senderBalance","nameLocation":"2121:13:31","nodeType":"VariableDeclaration","scope":10033,"src":"2113:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9998,"name":"uint256","nodeType":"ElementaryTypeName","src":"2113:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10004,"initialValue":{"arguments":[{"expression":{"id":10001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2147:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2151:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2147:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10000,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2137:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2137:21:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2113:45:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10006,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9999,"src":"2177:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10007,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"2194:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2177:23:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":10009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2202:36:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":10005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2169:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:70:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10011,"nodeType":"ExpressionStatement","src":"2169:70:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10013,"name":"senderBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9999,"src":"2258:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"2274:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2258:22:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10016,"name":"MIN_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"2284:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2258:37:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d","id":10018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2297:34:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4","typeString":"literal_string \"Balance would fall below minimum\""},"value":"Balance would fall below minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4","typeString":"literal_string \"Balance would fall below minimum\""}],"id":10012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2250:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2250:82:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10020,"nodeType":"ExpressionStatement","src":"2250:82:31"},{"expression":{"arguments":[{"id":10024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"2354:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10021,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2343:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NewToken_$10275_$","typeString":"type(contract super NewToken)"}},"id":10023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2349:4:31","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"2343:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10026,"nodeType":"ExpressionStatement","src":"2343:18:31"},{"eventCall":{"arguments":[{"expression":{"id":10028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2389:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2393:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2389:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10030,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9992,"src":"2401:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10027,"name":"TokenBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"2377:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2377:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10032,"nodeType":"EmitStatement","src":"2372:36:31"}]},"documentation":{"id":9990,"nodeType":"StructuredDocumentation","src":"1949:73:31","text":" @dev 销毁代币\n @param amount 销毁数量"},"functionSelector":"42966c68","id":10034,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2037:4:31","nodeType":"FunctionDefinition","overrides":{"id":9996,"nodeType":"OverrideSpecifier","overrides":[{"id":9994,"name":"CustomERC20","nameLocations":["2074:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":9852,"src":"2074:11:31"},{"id":9995,"name":"ERC20Burnable","nameLocations":["2087:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"2087:13:31"}],"src":"2065:36:31"},"parameters":{"id":9993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9992,"mutability":"mutable","name":"amount","nameLocation":"2050:6:31","nodeType":"VariableDeclaration","scope":10034,"src":"2042:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9991,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:16:31"},"returnParameters":{"id":9997,"nodeType":"ParameterList","parameters":[],"src":"2102:0:31"},"scope":10275,"src":"2028:388:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10062,"nodeType":"Block","src":"2596:224:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10043,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"2615:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2615:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":10046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2630:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":10042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2607:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:55:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10048,"nodeType":"ExpressionStatement","src":"2607:55:31"},{"assignments":[10050],"declarations":[{"constant":false,"id":10050,"mutability":"mutable","name":"oldAmount","nameLocation":"2681:9:31","nodeType":"VariableDeclaration","scope":10062,"src":"2673:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2673:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10052,"initialValue":{"id":10051,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"2693:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2673:37:31"},{"expression":{"id":10055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10053,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"2721:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10054,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"2741:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2721:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10056,"nodeType":"ExpressionStatement","src":"2721:29:31"},{"eventCall":{"arguments":[{"id":10058,"name":"oldAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10050,"src":"2791:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10059,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10037,"src":"2802:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10057,"name":"MaxTransferAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"2766:24:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:46:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10061,"nodeType":"EmitStatement","src":"2761:51:31"}]},"documentation":{"id":10035,"nodeType":"StructuredDocumentation","src":"2424:100:31","text":" @dev 设置最大转账金额\n @param newAmount 新的最大转账金额"},"functionSelector":"8bf55409","id":10063,"implemented":true,"kind":"function","modifiers":[{"id":10040,"kind":"modifierInvocation","modifierName":{"id":10039,"name":"onlyOwner","nameLocations":["2586:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2586:9:31"},"nodeType":"ModifierInvocation","src":"2586:9:31"}],"name":"setMaxTransferAmount","nameLocation":"2539:20:31","nodeType":"FunctionDefinition","parameters":{"id":10038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10037,"mutability":"mutable","name":"newAmount","nameLocation":"2568:9:31","nodeType":"VariableDeclaration","scope":10063,"src":"2560:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2560:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2559:19:31"},"returnParameters":{"id":10041,"nodeType":"ParameterList","parameters":[],"src":"2596:0:31"},"scope":10275,"src":"2530:290:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10084,"nodeType":"Block","src":"2993:159:31","statements":[{"assignments":[10072],"declarations":[{"constant":false,"id":10072,"mutability":"mutable","name":"oldStatus","nameLocation":"3009:9:31","nodeType":"VariableDeclaration","scope":10084,"src":"3004:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10071,"name":"bool","nodeType":"ElementaryTypeName","src":"3004:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10074,"initialValue":{"id":10073,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"3021:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3004:35:31"},{"expression":{"id":10077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10075,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"3050:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10076,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10066,"src":"3071:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3050:30:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10078,"nodeType":"ExpressionStatement","src":"3050:30:31"},{"eventCall":{"arguments":[{"id":10080,"name":"oldStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10072,"src":"3123:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10081,"name":"newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10066,"src":"3134:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10079,"name":"TransferRestrictionUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9916,"src":"3096:26:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$_t_bool_$returns$__$","typeString":"function (bool,bool)"}},"id":10082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:48:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10083,"nodeType":"EmitStatement","src":"3091:53:31"}]},"documentation":{"id":10064,"nodeType":"StructuredDocumentation","src":"2828:94:31","text":" @dev 更新转账限制状态\n @param newStatus 新的限制状态"},"functionSelector":"0d659ec5","id":10085,"implemented":true,"kind":"function","modifiers":[{"id":10069,"kind":"modifierInvocation","modifierName":{"id":10068,"name":"onlyOwner","nameLocations":["2983:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2983:9:31"},"nodeType":"ModifierInvocation","src":"2983:9:31"}],"name":"setTransferRestriction","nameLocation":"2937:22:31","nodeType":"FunctionDefinition","parameters":{"id":10067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10066,"mutability":"mutable","name":"newStatus","nameLocation":"2965:9:31","nodeType":"VariableDeclaration","scope":10085,"src":"2960:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10065,"name":"bool","nodeType":"ElementaryTypeName","src":"2960:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2959:16:31"},"returnParameters":{"id":10070,"nodeType":"ParameterList","parameters":[],"src":"2993:0:31"},"scope":10275,"src":"2928:224:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10112,"nodeType":"Block","src":"3309:162:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":10096,"name":"newTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"3334:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3328:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":10094,"name":"bytes","nodeType":"ElementaryTypeName","src":"3328:5:31","typeDescriptions":{}}},"id":10097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3328:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3347:6:31","memberName":"length","nodeType":"MemberAccess","src":"3328:25:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3356:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3328:29:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5552492063616e6e6f7420626520656d707479","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3359:21:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""},"value":"URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231","typeString":"literal_string \"URI cannot be empty\""}],"id":10093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3320:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:61:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10103,"nodeType":"ExpressionStatement","src":"3320:61:31"},{"expression":{"id":10106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10104,"name":"_tokenMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"3392:17:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10105,"name":"newTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"3412:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3392:31:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":10107,"nodeType":"ExpressionStatement","src":"3392:31:31"},{"eventCall":{"arguments":[{"id":10109,"name":"newTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"3451:11:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10108,"name":"TokenURISet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9920,"src":"3439:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":10110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3439:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10111,"nodeType":"EmitStatement","src":"3434:29:31"}]},"documentation":{"id":10086,"nodeType":"StructuredDocumentation","src":"3160:78:31","text":" @dev 设置代币URI\n @param newTokenURI 新的URI"},"functionSelector":"e0df5b6f","id":10113,"implemented":true,"kind":"function","modifiers":[{"id":10091,"kind":"modifierInvocation","modifierName":{"id":10090,"name":"onlyOwner","nameLocations":["3299:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3299:9:31"},"nodeType":"ModifierInvocation","src":"3299:9:31"}],"name":"setTokenURI","nameLocation":"3253:11:31","nodeType":"FunctionDefinition","parameters":{"id":10089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10088,"mutability":"mutable","name":"newTokenURI","nameLocation":"3279:11:31","nodeType":"VariableDeclaration","scope":10113,"src":"3265:25:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10087,"name":"string","nodeType":"ElementaryTypeName","src":"3265:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3264:27:31"},"returnParameters":{"id":10092,"nodeType":"ParameterList","parameters":[],"src":"3309:0:31"},"scope":10275,"src":"3244:227:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10122,"nodeType":"Block","src":"3557:27:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10119,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3568:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3568:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10121,"nodeType":"ExpressionStatement","src":"3568:8:31"}]},"documentation":{"id":10114,"nodeType":"StructuredDocumentation","src":"3479:38:31","text":" @dev 暂停合约"},"functionSelector":"8456cb59","id":10123,"implemented":true,"kind":"function","modifiers":[{"id":10117,"kind":"modifierInvocation","modifierName":{"id":10116,"name":"onlyOwner","nameLocations":["3547:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3547:9:31"},"nodeType":"ModifierInvocation","src":"3547:9:31"}],"name":"pause","nameLocation":"3532:5:31","nodeType":"FunctionDefinition","parameters":{"id":10115,"nodeType":"ParameterList","parameters":[],"src":"3537:2:31"},"returnParameters":{"id":10118,"nodeType":"ParameterList","parameters":[],"src":"3557:0:31"},"scope":10275,"src":"3523:61:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10132,"nodeType":"Block","src":"3672:29:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10129,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"3683:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3683:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10131,"nodeType":"ExpressionStatement","src":"3683:10:31"}]},"documentation":{"id":10124,"nodeType":"StructuredDocumentation","src":"3592:38:31","text":" @dev 恢复合约"},"functionSelector":"3f4ba83a","id":10133,"implemented":true,"kind":"function","modifiers":[{"id":10127,"kind":"modifierInvocation","modifierName":{"id":10126,"name":"onlyOwner","nameLocations":["3662:9:31"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3662:9:31"},"nodeType":"ModifierInvocation","src":"3662:9:31"}],"name":"unpause","nameLocation":"3645:7:31","nodeType":"FunctionDefinition","parameters":{"id":10125,"nodeType":"ParameterList","parameters":[],"src":"3652:2:31"},"returnParameters":{"id":10128,"nodeType":"ParameterList","parameters":[],"src":"3672:0:31"},"scope":10275,"src":"3636:65:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10141,"nodeType":"Block","src":"3812:43:31","statements":[{"expression":{"id":10139,"name":"_tokenMetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9874,"src":"3830:17:31","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":10138,"id":10140,"nodeType":"Return","src":"3823:24:31"}]},"documentation":{"id":10134,"nodeType":"StructuredDocumentation","src":"3709:41:31","text":" @dev 获取代币URI"},"functionSelector":"3c130d90","id":10142,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3765:8:31","nodeType":"FunctionDefinition","parameters":{"id":10135,"nodeType":"ParameterList","parameters":[],"src":"3773:2:31"},"returnParameters":{"id":10138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10142,"src":"3797:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10136,"name":"string","nodeType":"ElementaryTypeName","src":"3797:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3796:15:31"},"scope":10275,"src":"3756:99:31","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1283,1633,1875],"body":{"id":10257,"nodeType":"Block","src":"4085:1312:31","statements":[{"expression":{"arguments":[{"id":10158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4104:9:31","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10156,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"4105:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4105:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572207768696c6520706175736564","id":10159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4115:29:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65","typeString":"literal_string \"Token transfer while paused\""},"value":"Token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65","typeString":"literal_string \"Token transfer while paused\""}],"id":10155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4096:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4096:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10161,"nodeType":"ExpressionStatement","src":"4096:49:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10163,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"4164:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10164,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"4172:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4164:10:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c66207472616e7366657273206e6f7420616c6c6f776564","id":10166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4176:28:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_d76b7a151b722efa9e67380f3f9aa677ca7dd4339eb7f1adecb5f9fcf5582bfd","typeString":"literal_string \"Self transfers not allowed\""},"value":"Self transfers not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d76b7a151b722efa9e67380f3f9aa677ca7dd4339eb7f1adecb5f9fcf5582bfd","typeString":"literal_string \"Self transfers not allowed\""}],"id":10162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4156:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10168,"nodeType":"ExpressionStatement","src":"4156:49:31"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"4230:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4238:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10170,"name":"address","nodeType":"ElementaryTypeName","src":"4238:7:31","typeDescriptions":{}}},"id":10173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4230:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"4252:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4266:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4258:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10176,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:31","typeDescriptions":{}}},"id":10179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4258:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4252:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4230:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10248,"nodeType":"IfStatement","src":"4226:1113:31","trueBody":{"id":10247,"nodeType":"Block","src":"4270:1069:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"4351:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4359:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":10186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4362:31:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":10182,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4343:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4343:51:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10188,"nodeType":"ExpressionStatement","src":"4343:51:31"},{"condition":{"id":10189,"name":"transferRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9892,"src":"4427:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10198,"nodeType":"IfStatement","src":"4423:125:31","trueBody":{"id":10197,"nodeType":"Block","src":"4447:101:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"4474:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10192,"name":"maxTransferAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"4483:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4474:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d6178207472616e7366657220616d6f756e74","id":10194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4502:29:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7b0f9fc974ffc98f5808ea83c662bf1a37c88eb737f04ede53b5ef967abfe48","typeString":"literal_string \"Exceeds max transfer amount\""},"value":"Exceeds max transfer amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7b0f9fc974ffc98f5808ea83c662bf1a37c88eb737f04ede53b5ef967abfe48","typeString":"literal_string \"Exceeds max transfer amount\""}],"id":10190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4466:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4466:66:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10196,"nodeType":"ExpressionStatement","src":"4466:66:31"}]}},{"assignments":[10200],"declarations":[{"constant":false,"id":10200,"mutability":"mutable","name":"fromBalance","nameLocation":"4622:11:31","nodeType":"VariableDeclaration","scope":10247,"src":"4614:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4614:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10204,"initialValue":{"arguments":[{"id":10202,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"4646:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10201,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"4636:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4614:37:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10206,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"4674:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"4689:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4674:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":10209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4696:22:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":10205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4666:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:53:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10211,"nodeType":"ExpressionStatement","src":"4666:53:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10213,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"4742:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"4756:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4742:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10216,"name":"MIN_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"4765:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4742:34:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d","id":10218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4778:34:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4","typeString":"literal_string \"Balance would fall below minimum\""},"value":"Balance would fall below minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4","typeString":"literal_string \"Balance would fall below minimum\""}],"id":10212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4734:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:79:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10220,"nodeType":"ExpressionStatement","src":"4734:79:31"},{"assignments":[10222],"declarations":[{"constant":false,"id":10222,"mutability":"mutable","name":"toBalance","nameLocation":"4850:9:31","nodeType":"VariableDeclaration","scope":10247,"src":"4842:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4842:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10226,"initialValue":{"arguments":[{"id":10224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"4872:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10223,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"4862:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4842:33:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10227,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10222,"src":"4894:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4906:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4894:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10245,"nodeType":"Block","src":"5120:208:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"5246:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10240,"name":"MIN_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"5255:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5246:20:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657220616d6f756e7420746f6f206c6f7720666f72206e657720726563697069656e74","id":10242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5268:43:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_c289beb9856767723ca1e73e75edd7897935313ece134ee5027929d7aa7afb72","typeString":"literal_string \"Transfer amount too low for new recipient\""},"value":"Transfer amount too low for new recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c289beb9856767723ca1e73e75edd7897935313ece134ee5027929d7aa7afb72","typeString":"literal_string \"Transfer amount too low for new recipient\""}],"id":10238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5238:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5238:74:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10244,"nodeType":"ExpressionStatement","src":"5238:74:31"}]},"id":10246,"nodeType":"IfStatement","src":"4890:438:31","trueBody":{"id":10237,"nodeType":"Block","src":"4909:205:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10231,"name":"toBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10222,"src":"5044:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10232,"name":"MIN_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"5057:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5044:24:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563697069656e742062616c616e636520746f6f206c6f77","id":10234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5070:27:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3dcb706470115d72d3ddb9880961be9c092a756fa5cced7fd4467d3947b3e5","typeString":"literal_string \"Recipient balance too low\""},"value":"Recipient balance too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3dcb706470115d72d3ddb9880961be9c092a756fa5cced7fd4467d3947b3e5","typeString":"literal_string \"Recipient balance too low\""}],"id":10230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5036:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5036:62:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10236,"nodeType":"ExpressionStatement","src":"5036:62:31"}]}}]}},{"expression":{"arguments":[{"id":10252,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"5373:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10253,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"5379:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"5383:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10249,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5359:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NewToken_$10275_$","typeString":"type(contract super NewToken)"}},"id":10251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5365:7:31","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1875,"src":"5359:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10256,"nodeType":"ExpressionStatement","src":"5359:30:31"}]},"id":10258,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3942:7:31","nodeType":"FunctionDefinition","overrides":{"id":10153,"nodeType":"OverrideSpecifier","overrides":[{"id":10150,"name":"ERC20","nameLocations":["4051:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":1476,"src":"4051:5:31"},{"id":10151,"name":"ERC20Pausable","nameLocations":["4058:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":1634,"src":"4058:13:31"},{"id":10152,"name":"ERC20Votes","nameLocations":["4073:10:31"],"nodeType":"IdentifierPath","referencedDeclaration":1920,"src":"4073:10:31"}],"src":"4042:42:31"},"parameters":{"id":10149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10144,"mutability":"mutable","name":"from","nameLocation":"3968:4:31","nodeType":"VariableDeclaration","scope":10258,"src":"3960:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10143,"name":"address","nodeType":"ElementaryTypeName","src":"3960:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10146,"mutability":"mutable","name":"to","nameLocation":"3991:2:31","nodeType":"VariableDeclaration","scope":10258,"src":"3983:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10145,"name":"address","nodeType":"ElementaryTypeName","src":"3983:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10148,"mutability":"mutable","name":"value","nameLocation":"4012:5:31","nodeType":"VariableDeclaration","scope":10258,"src":"4004:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3949:75:31"},"returnParameters":{"id":10154,"nodeType":"ParameterList","parameters":[],"src":"4085:0:31"},"scope":10275,"src":"3933:1464:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1777,2039],"body":{"id":10273,"nodeType":"Block","src":"5537:45:31","statements":[{"expression":{"arguments":[{"id":10270,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10260,"src":"5568:5:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10268,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5555:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NewToken_$10275_$","typeString":"type(contract super NewToken)"}},"id":10269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5561:6:31","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"5555:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":10271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5555:19:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10267,"id":10272,"nodeType":"Return","src":"5548:26:31"}]},"functionSelector":"7ecebe00","id":10274,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"5414:6:31","nodeType":"FunctionDefinition","overrides":{"id":10264,"nodeType":"OverrideSpecifier","overrides":[{"id":10262,"name":"ERC20Permit","nameLocations":["5484:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":1788,"src":"5484:11:31"},{"id":10263,"name":"Nonces","nameLocations":["5497:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"5497:6:31"}],"src":"5475:29:31"},"parameters":{"id":10261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10260,"mutability":"mutable","name":"owner","nameLocation":"5429:5:31","nodeType":"VariableDeclaration","scope":10274,"src":"5421:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10259,"name":"address","nodeType":"ElementaryTypeName","src":"5421:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5420:15:31"},"returnParameters":{"id":10267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10274,"src":"5523:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10265,"name":"uint256","nodeType":"ElementaryTypeName","src":"5523:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5522:9:31"},"scope":10275,"src":"5405:177:31","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":10276,"src":"445:5140:31","usedErrors":[13,18,155,281,288,836,841,846,855,860,865,1665,1672,1808,2022,2154,2157,2263,2265,3801,3806,3811,6055,7962],"usedEvents":[24,164,173,778,1488,1497,2146,2151,9898,9904,9910,9916,9920]}],"src":"33:5552:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC-20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {Votes-delegate} function directly, or by providing a signature to be used with {Votes-delegateBySig}. Voting power can be queried through the public accessors {Votes-getVotes} and {Votes-getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7fbe01f72229cd5dd66329186bf7e3f13906be0b7250c861889d07fd5574aa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7FBE01F72229CD5DD66329186BF7E3F13906BE0B7250C861889D07FD SSTORE PUSH21 0xAA64736F6C63430008140033000000000000000000 ","sourceMap":"1255:3026:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3026:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7fbe01f72229cd5dd66329186bf7e3f13906be0b7250c861889d07fd5574aa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7FBE01F72229CD5DD66329186BF7E3F13906BE0B7250C861889D07FD SSTORE PUSH21 0xAA64736F6C63430008140033000000000000000000 ","sourceMap":"1255:3026:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b302df8025cfede10cfa38224a456623b053166992191b1a0786cd301d3f5b164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x302DF8025CFEDE10CFA38224A456623B053166992191B1A0786CD301 0xD3 CREATE2 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3181:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b302df8025cfede10cfa38224a456623b053166992191b1a0786cd301d3f5b164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x302DF8025CFEDE10CFA38224A456623B053166992191B1A0786CD301 0xD3 CREATE2 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3181:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:27;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220065dfcecd06c079bcd2a242d23dc50dca0d9fc758e435626aedfca5eaa89f01664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0x5D 0xFC 0xEC 0xD0 PUSH13 0x79BCD2A242D23DC50DCA0D9FC PUSH22 0x8E435626AEDFCA5EAA89F01664736F6C634300081400 CALLER ","sourceMap":"668:20756:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;668:20756:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220065dfcecd06c079bcd2a242d23dc50dca0d9fc758e435626aedfca5eaa89f01664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0x5D 0xFC 0xEC 0xD0 PUSH13 0x79BCD2A242D23DC50DCA0D9FC PUSH22 0x8E435626AEDFCA5EAA89F01664736F6C634300081400 CALLER ","sourceMap":"668:20756:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208eef0c31adfa7d02d51e930817b4396edc84cefc39e6a46e0c99c48c959f995b64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEF 0xC BALANCE 0xAD STATICCALL PUSH30 0x2D51E930817B4396EDC84CEFC39E6A46E0C99C48C959F995B64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"640:4515:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;640:4515:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208eef0c31adfa7d02d51e930817b4396edc84cefc39e6a46e0c99c48c959f995b64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEF 0xC BALANCE 0xAD STATICCALL PUSH30 0x2D51E930817B4396EDC84CEFC39E6A46E0C99C48C959F995B64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"640:4515:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]}},\"version\":1}"}},"contracts/CustomERC20.sol":{"CustomERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1013":{"entryPoint":null,"id":1013,"parameterSlots":2,"returnSlots":0},"@_9826":{"entryPoint":null,"id":9826,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":291,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":457,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":94,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:32"},"nodeType":"YulFunctionCall","src":"66:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:32"},"nodeType":"YulFunctionCall","src":"56:31:32"},"nodeType":"YulExpressionStatement","src":"56:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:32"},"nodeType":"YulFunctionCall","src":"96:15:32"},"nodeType":"YulExpressionStatement","src":"96:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:32"},"nodeType":"YulFunctionCall","src":"120:15:32"},"nodeType":"YulExpressionStatement","src":"120:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:32"},{"body":{"nodeType":"YulBlock","src":"210:776:32","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:32"},"nodeType":"YulFunctionCall","src":"261:12:32"},"nodeType":"YulExpressionStatement","src":"261:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:32"},"nodeType":"YulFunctionCall","src":"234:17:32"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:32"},"nodeType":"YulFunctionCall","src":"230:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:32"},"nodeType":"YulFunctionCall","src":"223:35:32"},"nodeType":"YulIf","src":"220:55:32"},{"nodeType":"YulVariableDeclaration","src":"284:23:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:32"},"nodeType":"YulFunctionCall","src":"294:13:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:32"},"nodeType":"YulFunctionCall","src":"330:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:32"},"nodeType":"YulFunctionCall","src":"326:18:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:32"},"nodeType":"YulFunctionCall","src":"369:18:32"},"nodeType":"YulExpressionStatement","src":"369:18:32"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:32"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:32"},"nodeType":"YulFunctionCall","src":"356:10:32"},"nodeType":"YulIf","src":"353:36:32"},{"nodeType":"YulVariableDeclaration","src":"398:17:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:32"},"nodeType":"YulFunctionCall","src":"408:7:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:32"},"nodeType":"YulFunctionCall","src":"438:9:32"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:32"},"nodeType":"YulFunctionCall","src":"498:13:32"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:32"},"nodeType":"YulFunctionCall","src":"494:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:32","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:32"},"nodeType":"YulFunctionCall","src":"490:31:32"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:32"},"nodeType":"YulFunctionCall","src":"486:40:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:32"},"nodeType":"YulFunctionCall","src":"474:53:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:32"},"nodeType":"YulFunctionCall","src":"588:18:32"},"nodeType":"YulExpressionStatement","src":"588:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:32"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:32"},"nodeType":"YulFunctionCall","src":"542:18:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:32"},"nodeType":"YulFunctionCall","src":"562:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:32"},"nodeType":"YulFunctionCall","src":"539:46:32"},"nodeType":"YulIf","src":"536:72:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:32"},"nodeType":"YulFunctionCall","src":"617:22:32"},"nodeType":"YulExpressionStatement","src":"617:22:32"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:32"},"nodeType":"YulFunctionCall","src":"648:18:32"},"nodeType":"YulExpressionStatement","src":"648:18:32"},{"nodeType":"YulVariableDeclaration","src":"675:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:32","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:32"},"nodeType":"YulFunctionCall","src":"737:12:32"},"nodeType":"YulExpressionStatement","src":"737:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:32"},"nodeType":"YulFunctionCall","src":"708:15:32"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:32"},"nodeType":"YulFunctionCall","src":"704:24:32"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:32"},"nodeType":"YulFunctionCall","src":"701:33:32"},"nodeType":"YulIf","src":"698:53:32"},{"nodeType":"YulVariableDeclaration","src":"760:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:32","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:32"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:32"},"nodeType":"YulFunctionCall","src":"850:14:32"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:32"},"nodeType":"YulFunctionCall","src":"846:23:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:32"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:32"},"nodeType":"YulFunctionCall","src":"881:14:32"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:32"},"nodeType":"YulFunctionCall","src":"877:23:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:32"},"nodeType":"YulFunctionCall","src":"871:30:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:32"},"nodeType":"YulFunctionCall","src":"839:63:32"},"nodeType":"YulExpressionStatement","src":"839:63:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:32"},"nodeType":"YulFunctionCall","src":"787:9:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:32","statements":[{"nodeType":"YulAssignment","src":"799:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:32"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:32"},"nodeType":"YulFunctionCall","src":"804:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:32","statements":[]},"src":"779:133:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:32"},"nodeType":"YulFunctionCall","src":"932:15:32"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:32"},"nodeType":"YulFunctionCall","src":"928:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:32"},"nodeType":"YulFunctionCall","src":"921:35:32"},"nodeType":"YulExpressionStatement","src":"921:35:32"},{"nodeType":"YulAssignment","src":"965:15:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:32"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:32"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:32","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:32","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:32","type":""}],"src":"146:840:32"},{"body":{"nodeType":"YulBlock","src":"1109:444:32","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:32"},"nodeType":"YulFunctionCall","src":"1157:12:32"},"nodeType":"YulExpressionStatement","src":"1157:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:32"},"nodeType":"YulFunctionCall","src":"1126:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:32"},"nodeType":"YulFunctionCall","src":"1122:32:32"},"nodeType":"YulIf","src":"1119:52:32"},{"nodeType":"YulVariableDeclaration","src":"1180:30:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:32"},"nodeType":"YulFunctionCall","src":"1194:16:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:32"},"nodeType":"YulFunctionCall","src":"1233:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:32"},"nodeType":"YulFunctionCall","src":"1229:18:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:32"},"nodeType":"YulFunctionCall","src":"1276:12:32"},"nodeType":"YulExpressionStatement","src":"1276:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:32"},"nodeType":"YulFunctionCall","src":"1259:14:32"},"nodeType":"YulIf","src":"1256:34:32"},{"nodeType":"YulAssignment","src":"1299:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:32"},"nodeType":"YulFunctionCall","src":"1338:22:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:32"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:32"},"nodeType":"YulFunctionCall","src":"1309:61:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:32"},"nodeType":"YulFunctionCall","src":"1401:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:32"},"nodeType":"YulFunctionCall","src":"1395:25:32"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:32"},"nodeType":"YulFunctionCall","src":"1451:12:32"},"nodeType":"YulExpressionStatement","src":"1451:12:32"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:32"},"nodeType":"YulFunctionCall","src":"1432:16:32"},"nodeType":"YulIf","src":"1429:36:32"},{"nodeType":"YulAssignment","src":"1474:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:32"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:32"},"nodeType":"YulFunctionCall","src":"1513:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:32"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:32"},"nodeType":"YulFunctionCall","src":"1484:63:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:32"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:32","type":""}],"src":"991:562:32"},{"body":{"nodeType":"YulBlock","src":"1613:325:32","statements":[{"nodeType":"YulAssignment","src":"1623:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:32"},"nodeType":"YulFunctionCall","src":"1633:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:32"},"nodeType":"YulFunctionCall","src":"1680:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:32","statements":[{"nodeType":"YulAssignment","src":"1733:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:32"},"nodeType":"YulFunctionCall","src":"1743:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:32"},"nodeType":"YulFunctionCall","src":"1704:26:32"},"nodeType":"YulIf","src":"1701:61:32"},{"body":{"nodeType":"YulBlock","src":"1821:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:32"},"nodeType":"YulFunctionCall","src":"1845:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:32"},"nodeType":"YulFunctionCall","src":"1835:31:32"},"nodeType":"YulExpressionStatement","src":"1835:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:32"},"nodeType":"YulFunctionCall","src":"1879:15:32"},"nodeType":"YulExpressionStatement","src":"1879:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:32"},"nodeType":"YulFunctionCall","src":"1907:15:32"},"nodeType":"YulExpressionStatement","src":"1907:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:32"},"nodeType":"YulFunctionCall","src":"1797:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:32"},"nodeType":"YulFunctionCall","src":"1774:38:32"},"nodeType":"YulIf","src":"1771:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:32","type":""}],"src":"1558:380:32"},{"body":{"nodeType":"YulBlock","src":"1999:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:32"},"nodeType":"YulFunctionCall","src":"2009:14:32"},"nodeType":"YulExpressionStatement","src":"2009:14:32"},{"nodeType":"YulAssignment","src":"2032:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:32"},"nodeType":"YulFunctionCall","src":"2040:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:32","type":""}],"src":"1943:121:32"},{"body":{"nodeType":"YulBlock","src":"2150:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:32"},"nodeType":"YulFunctionCall","src":"2221:17:32"},"nodeType":"YulExpressionStatement","src":"2221:17:32"},{"nodeType":"YulVariableDeclaration","src":"2251:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:32"},"nodeType":"YulFunctionCall","src":"2263:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:32"},"nodeType":"YulFunctionCall","src":"2331:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:32"},"nodeType":"YulFunctionCall","src":"2324:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:32"},"nodeType":"YulFunctionCall","src":"2314:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:32","statements":[{"nodeType":"YulAssignment","src":"2391:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:32"},"nodeType":"YulFunctionCall","src":"2368:20:32"},"nodeType":"YulIf","src":"2365:47:32"},{"nodeType":"YulVariableDeclaration","src":"2425:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:32"},"nodeType":"YulFunctionCall","src":"2452:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:32"},"nodeType":"YulFunctionCall","src":"2445:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:32"},"nodeType":"YulFunctionCall","src":"2435:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:32"},"nodeType":"YulFunctionCall","src":"2579:17:32"},"nodeType":"YulExpressionStatement","src":"2579:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:32"},"nodeType":"YulFunctionCall","src":"2524:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:32","statements":[{"nodeType":"YulAssignment","src":"2540:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:32"},"nodeType":"YulFunctionCall","src":"2549:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:32","statements":[]},"src":"2516:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:32"},"nodeType":"YulFunctionCall","src":"2163:11:32"},"nodeType":"YulIf","src":"2160:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:32","type":""}],"src":"2069:545:32"},{"body":{"nodeType":"YulBlock","src":"2704:81:32","statements":[{"nodeType":"YulAssignment","src":"2714:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:32"},"nodeType":"YulFunctionCall","src":"2743:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:32"},"nodeType":"YulFunctionCall","src":"2756:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:32"},"nodeType":"YulFunctionCall","src":"2739:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:32"},"nodeType":"YulFunctionCall","src":"2735:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:32"},"nodeType":"YulFunctionCall","src":"2725:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:32"},"nodeType":"YulFunctionCall","src":"2767:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:32"},"nodeType":"YulFunctionCall","src":"2722:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:32","type":""}],"src":"2619:166:32"},{"body":{"nodeType":"YulBlock","src":"2886:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:32"},"nodeType":"YulFunctionCall","src":"2910:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:32"},"nodeType":"YulFunctionCall","src":"2965:18:32"},"nodeType":"YulExpressionStatement","src":"2965:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:32"},"nodeType":"YulFunctionCall","src":"2947:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:32"},"nodeType":"YulFunctionCall","src":"2943:18:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:32"},"nodeType":"YulFunctionCall","src":"2932:30:32"},"nodeType":"YulIf","src":"2929:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:32"},"nodeType":"YulFunctionCall","src":"3070:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:32"},"nodeType":"YulFunctionCall","src":"3044:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:32"},"nodeType":"YulFunctionCall","src":"2994:97:32"},"nodeType":"YulExpressionStatement","src":"2994:97:32"},{"nodeType":"YulVariableDeclaration","src":"3100:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:32","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:32"},"nodeType":"YulFunctionCall","src":"3270:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:32"},"nodeType":"YulFunctionCall","src":"3258:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:32"},"nodeType":"YulFunctionCall","src":"3305:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:32"},"nodeType":"YulFunctionCall","src":"3479:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:32"},"nodeType":"YulFunctionCall","src":"3473:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:32"},"nodeType":"YulFunctionCall","src":"3458:42:32"},"nodeType":"YulExpressionStatement","src":"3458:42:32"},{"nodeType":"YulAssignment","src":"3517:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:32"},"nodeType":"YulFunctionCall","src":"3527:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:32"}]},{"nodeType":"YulAssignment","src":"3558:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:32"},"nodeType":"YulFunctionCall","src":"3571:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:32"},"nodeType":"YulFunctionCall","src":"3384:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:32","statements":[{"nodeType":"YulAssignment","src":"3401:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:32"},"nodeType":"YulFunctionCall","src":"3406:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:32","statements":[]},"src":"3376:236:32"},{"body":{"nodeType":"YulBlock","src":"3660:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:32"},"nodeType":"YulFunctionCall","src":"3701:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:32"},"nodeType":"YulFunctionCall","src":"3695:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:32"},"nodeType":"YulFunctionCall","src":"3780:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:32"},"nodeType":"YulFunctionCall","src":"3776:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:32"},"nodeType":"YulFunctionCall","src":"3802:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:32"},"nodeType":"YulFunctionCall","src":"3772:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:32"},"nodeType":"YulFunctionCall","src":"3768:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:32"},"nodeType":"YulFunctionCall","src":"3753:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:32"},"nodeType":"YulFunctionCall","src":"3738:74:32"},"nodeType":"YulExpressionStatement","src":"3738:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:32"},"nodeType":"YulFunctionCall","src":"3628:19:32"},"nodeType":"YulIf","src":"3625:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:32"},"nodeType":"YulFunctionCall","src":"3856:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:32"},"nodeType":"YulFunctionCall","src":"3852:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:32"},"nodeType":"YulFunctionCall","src":"3839:36:32"},"nodeType":"YulExpressionStatement","src":"3839:36:32"}]},"nodeType":"YulCase","src":"3222:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:32","statements":[{"nodeType":"YulAssignment","src":"3983:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:32"},"nodeType":"YulFunctionCall","src":"3998:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:32"},"nodeType":"YulFunctionCall","src":"3992:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:32"},"nodeType":"YulIf","src":"3943:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:32"},"nodeType":"YulFunctionCall","src":"4058:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:32"},"nodeType":"YulFunctionCall","src":"4045:81:32"},"nodeType":"YulExpressionStatement","src":"4045:81:32"}]},"nodeType":"YulCase","src":"3894:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:32"},"nodeType":"YulFunctionCall","src":"3199:14:32"},"nodeType":"YulSwitch","src":"3192:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:32","type":""}],"src":"2790:1352:32"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000af738038062000af7833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107ff80620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461012357806342966c681461013857806370a082311461014b57806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610630565b60405180910390f35b6100df6100da36600461069a565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106c4565b610274565b604051601281526020016100c3565b61013661013136600461069a565b610298565b005b610136610146366004610700565b6102a6565b6100f3610159366004610719565b6001600160a01b031660009081526020819052604090205490565b6100b66102b3565b6100df61018a36600461069a565b6102c2565b6100f361019d36600461073b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d79061076e565b80601f01602080910402602001604051908101604052809291908181526020018280546102039061076e565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6000336102688185856102d0565b60019150505b92915050565b6000336102828582856102e2565b61028d858585610366565b506001949350505050565b6102a282826103c5565b5050565b6102b033826103fb565b50565b6060600480546101d79061076e565b600033610268818585610366565b6102dd8383836001610431565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610360578181101561035157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036084848484036000610431565b50505050565b6001600160a01b03831661039057604051634b637e8f60e11b815260006004820152602401610348565b6001600160a01b0382166103ba5760405163ec442f0560e01b815260006004820152602401610348565b6102dd838383610506565b6001600160a01b0382166103ef5760405163ec442f0560e01b815260006004820152602401610348565b6102a260008383610506565b6001600160a01b03821661042557604051634b637e8f60e11b815260006004820152602401610348565b6102a282600083610506565b6001600160a01b03841661045b5760405163e602df0560e01b815260006004820152602401610348565b6001600160a01b03831661048557604051634a1406b160e11b815260006004820152602401610348565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f891815260200190565b60405180910390a350505050565b6001600160a01b03831661053157806002600082825461052691906107a8565b909155506105a39050565b6001600160a01b038316600090815260208190526040902054818110156105845760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105bf576002805482900390556105de565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561065d57858101830151858201604001528201610641565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461069557600080fd5b919050565b600080604083850312156106ad57600080fd5b6106b68361067e565b946020939093013593505050565b6000806000606084860312156106d957600080fd5b6106e28461067e565b92506106f06020850161067e565b9150604084013590509250925092565b60006020828403121561071257600080fd5b5035919050565b60006020828403121561072b57600080fd5b6107348261067e565b9392505050565b6000806040838503121561074e57600080fd5b6107578361067e565b91506107656020840161067e565b90509250929050565b600181811c9082168061078257607f821691505b6020821081036107a257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026e57634e487b7160e01b600052601160045260246000fdfea26469706673582212208a519f18d91c491e10fbe5eca7662459ec98df0eb05fa92b41696602349b61c464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAF7 CODESIZE SUB DUP1 PUSH3 0xAF7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP POP POP POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x7FF DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0x76E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x250 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x225 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x250 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A2 DUP3 DUP3 PUSH2 0x3C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2B0 CALLER DUP3 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x431 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x360 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x360 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x431 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2A2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x360 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x531 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5A3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x65D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x641 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B6 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E2 DUP5 PUSH2 0x67E JUMP JUMPDEST SWAP3 POP PUSH2 0x6F0 PUSH1 0x20 DUP6 ADD PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x757 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH2 0x765 PUSH1 0x20 DUP5 ADD PUSH2 0x67E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x782 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MLOAD SWAP16 XOR 0xD9 SHR 0x49 0x1E LT 0xFB 0xE5 0xEC 0xA7 PUSH7 0x2459EC98DF0EB0 PUSH0 0xA9 0x2B COINBASE PUSH10 0x6602349B61C464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"120:314:30:-:0;;;157:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;217:4;223:6;1667:5:7;:13;217:4:30;1667:5:7;:13;:::i;:::-;-1:-1:-1;1690:7:7;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;157:76:30;;120:314;;14:127:32;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:32;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:32;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:32:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:32;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:32;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:32;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:32;;;3992:26;3943:89;-1:-1:-1;;2747:1:32;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:32;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:32;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:32;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:32:o;:::-;120:314:30;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1367":{"entryPoint":720,"id":1367,"parameterSlots":3,"returnSlots":0},"@_approve_1427":{"entryPoint":1073,"id":1427,"parameterSlots":4,"returnSlots":0},"@_burn_1349":{"entryPoint":1019,"id":1349,"parameterSlots":2,"returnSlots":0},"@_mint_1316":{"entryPoint":965,"id":1316,"parameterSlots":2,"returnSlots":0},"@_msgSender_1994":{"entryPoint":null,"id":1994,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1475":{"entryPoint":738,"id":1475,"parameterSlots":3,"returnSlots":0},"@_transfer_1206":{"entryPoint":870,"id":1206,"parameterSlots":3,"returnSlots":0},"@_update_1283":{"entryPoint":1286,"id":1283,"parameterSlots":3,"returnSlots":0},"@allowance_1103":{"entryPoint":null,"id":1103,"parameterSlots":2,"returnSlots":1},"@approve_1127":{"entryPoint":602,"id":1127,"parameterSlots":2,"returnSlots":1},"@balanceOf_1062":{"entryPoint":null,"id":1062,"parameterSlots":1,"returnSlots":1},"@burn_9851":{"entryPoint":678,"id":9851,"parameterSlots":1,"returnSlots":0},"@decimals_1040":{"entryPoint":null,"id":1040,"parameterSlots":0,"returnSlots":1},"@mint_9839":{"entryPoint":664,"id":9839,"parameterSlots":2,"returnSlots":0},"@name_1022":{"entryPoint":456,"id":1022,"parameterSlots":0,"returnSlots":1},"@symbol_1031":{"entryPoint":691,"id":1031,"parameterSlots":0,"returnSlots":1},"@totalSupply_1049":{"entryPoint":null,"id":1049,"parameterSlots":0,"returnSlots":1},"@transferFrom_1159":{"entryPoint":628,"id":1159,"parameterSlots":3,"returnSlots":1},"@transfer_1086":{"entryPoint":706,"id":1086,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1817,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1851,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1732,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1690,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1960,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1902,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3708:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:32","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:32"},"nodeType":"YulFunctionCall","src":"166:21:32"},"nodeType":"YulExpressionStatement","src":"166:21:32"},{"nodeType":"YulVariableDeclaration","src":"196:27:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:32"},"nodeType":"YulFunctionCall","src":"210:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:32"},"nodeType":"YulFunctionCall","src":"239:18:32"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:32"},"nodeType":"YulFunctionCall","src":"232:34:32"},"nodeType":"YulExpressionStatement","src":"232:34:32"},{"nodeType":"YulVariableDeclaration","src":"275:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:32","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:32"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:32"},"nodeType":"YulFunctionCall","src":"369:17:32"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:32"},"nodeType":"YulFunctionCall","src":"365:26:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:32"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:32"},"nodeType":"YulFunctionCall","src":"403:14:32"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:32"},"nodeType":"YulFunctionCall","src":"399:23:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:32"},"nodeType":"YulFunctionCall","src":"393:30:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:32"},"nodeType":"YulFunctionCall","src":"358:66:32"},"nodeType":"YulExpressionStatement","src":"358:66:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:32"},"nodeType":"YulFunctionCall","src":"302:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:32","statements":[{"nodeType":"YulAssignment","src":"318:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:32"},"nodeType":"YulFunctionCall","src":"323:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:32","statements":[]},"src":"294:140:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:32"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:32"},"nodeType":"YulFunctionCall","src":"454:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:32"},"nodeType":"YulFunctionCall","src":"450:31:32"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:32"},"nodeType":"YulFunctionCall","src":"443:42:32"},"nodeType":"YulExpressionStatement","src":"443:42:32"},{"nodeType":"YulAssignment","src":"494:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:32"},"nodeType":"YulFunctionCall","src":"525:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:32"},"nodeType":"YulFunctionCall","src":"542:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:32"},"nodeType":"YulFunctionCall","src":"521:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:32"},"nodeType":"YulFunctionCall","src":"506:45:32"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:32"},"nodeType":"YulFunctionCall","src":"502:54:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:32","type":""}],"src":"14:548:32"},{"body":{"nodeType":"YulBlock","src":"616:124:32","statements":[{"nodeType":"YulAssignment","src":"626:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:32"},"nodeType":"YulFunctionCall","src":"635:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:32"}]},{"body":{"nodeType":"YulBlock","src":"718:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:32"},"nodeType":"YulFunctionCall","src":"720:12:32"},"nodeType":"YulExpressionStatement","src":"720:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:32"},"nodeType":"YulFunctionCall","src":"699:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:32"},"nodeType":"YulFunctionCall","src":"695:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:32"},"nodeType":"YulFunctionCall","src":"684:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:32"},"nodeType":"YulFunctionCall","src":"674:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:32"},"nodeType":"YulFunctionCall","src":"667:50:32"},"nodeType":"YulIf","src":"664:70:32"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:32","type":""}],"src":"567:173:32"},{"body":{"nodeType":"YulBlock","src":"832:167:32","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:32"},"nodeType":"YulFunctionCall","src":"880:12:32"},"nodeType":"YulExpressionStatement","src":"880:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:32"},"nodeType":"YulFunctionCall","src":"849:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:32"},"nodeType":"YulFunctionCall","src":"845:32:32"},"nodeType":"YulIf","src":"842:52:32"},{"nodeType":"YulAssignment","src":"903:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:32"},"nodeType":"YulFunctionCall","src":"913:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:32"}]},{"nodeType":"YulAssignment","src":"951:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:32"},"nodeType":"YulFunctionCall","src":"974:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:32"},"nodeType":"YulFunctionCall","src":"961:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:32","type":""}],"src":"745:254:32"},{"body":{"nodeType":"YulBlock","src":"1099:92:32","statements":[{"nodeType":"YulAssignment","src":"1109:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:32"},"nodeType":"YulFunctionCall","src":"1117:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:32"},"nodeType":"YulFunctionCall","src":"1169:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:32"},"nodeType":"YulFunctionCall","src":"1162:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:32"},"nodeType":"YulFunctionCall","src":"1144:41:32"},"nodeType":"YulExpressionStatement","src":"1144:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:32","type":""}],"src":"1004:187:32"},{"body":{"nodeType":"YulBlock","src":"1297:76:32","statements":[{"nodeType":"YulAssignment","src":"1307:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:32"},"nodeType":"YulFunctionCall","src":"1315:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:32"},"nodeType":"YulFunctionCall","src":"1342:25:32"},"nodeType":"YulExpressionStatement","src":"1342:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:32","type":""}],"src":"1196:177:32"},{"body":{"nodeType":"YulBlock","src":"1482:224:32","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:32"},"nodeType":"YulFunctionCall","src":"1530:12:32"},"nodeType":"YulExpressionStatement","src":"1530:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:32"},"nodeType":"YulFunctionCall","src":"1499:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:32"},"nodeType":"YulFunctionCall","src":"1495:32:32"},"nodeType":"YulIf","src":"1492:52:32"},{"nodeType":"YulAssignment","src":"1553:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:32"},"nodeType":"YulFunctionCall","src":"1563:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:32"}]},{"nodeType":"YulAssignment","src":"1601:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:32"},"nodeType":"YulFunctionCall","src":"1630:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:32"},"nodeType":"YulFunctionCall","src":"1611:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:32"}]},{"nodeType":"YulAssignment","src":"1658:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:32"},"nodeType":"YulFunctionCall","src":"1681:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:32"},"nodeType":"YulFunctionCall","src":"1668:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:32","type":""}],"src":"1378:328:32"},{"body":{"nodeType":"YulBlock","src":"1808:87:32","statements":[{"nodeType":"YulAssignment","src":"1818:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:32"},"nodeType":"YulFunctionCall","src":"1826:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:32"},"nodeType":"YulFunctionCall","src":"1871:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:32"},"nodeType":"YulFunctionCall","src":"1853:36:32"},"nodeType":"YulExpressionStatement","src":"1853:36:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:32","type":""}],"src":"1711:184:32"},{"body":{"nodeType":"YulBlock","src":"1970:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:32"},"nodeType":"YulFunctionCall","src":"2018:12:32"},"nodeType":"YulExpressionStatement","src":"2018:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:32"},"nodeType":"YulFunctionCall","src":"1987:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:32"},"nodeType":"YulFunctionCall","src":"1983:32:32"},"nodeType":"YulIf","src":"1980:52:32"},{"nodeType":"YulAssignment","src":"2041:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2051:12:32"},"nodeType":"YulFunctionCall","src":"2051:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:32","type":""}],"src":"1900:180:32"},{"body":{"nodeType":"YulBlock","src":"2155:116:32","statements":[{"body":{"nodeType":"YulBlock","src":"2201:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2203:6:32"},"nodeType":"YulFunctionCall","src":"2203:12:32"},"nodeType":"YulExpressionStatement","src":"2203:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2176:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:32"},"nodeType":"YulFunctionCall","src":"2172:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2197:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2168:3:32"},"nodeType":"YulFunctionCall","src":"2168:32:32"},"nodeType":"YulIf","src":"2165:52:32"},{"nodeType":"YulAssignment","src":"2226:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2236:18:32"},"nodeType":"YulFunctionCall","src":"2236:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2226:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2121:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2132:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2144:6:32","type":""}],"src":"2085:186:32"},{"body":{"nodeType":"YulBlock","src":"2363:173:32","statements":[{"body":{"nodeType":"YulBlock","src":"2409:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2418:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2421:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2411:6:32"},"nodeType":"YulFunctionCall","src":"2411:12:32"},"nodeType":"YulExpressionStatement","src":"2411:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2384:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2380:3:32"},"nodeType":"YulFunctionCall","src":"2380:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2405:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2376:3:32"},"nodeType":"YulFunctionCall","src":"2376:32:32"},"nodeType":"YulIf","src":"2373:52:32"},{"nodeType":"YulAssignment","src":"2434:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2444:18:32"},"nodeType":"YulFunctionCall","src":"2444:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2434:6:32"}]},{"nodeType":"YulAssignment","src":"2482:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2515:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2526:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2511:3:32"},"nodeType":"YulFunctionCall","src":"2511:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2492:18:32"},"nodeType":"YulFunctionCall","src":"2492:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2482:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2321:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2332:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2344:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2352:6:32","type":""}],"src":"2276:260:32"},{"body":{"nodeType":"YulBlock","src":"2596:325:32","statements":[{"nodeType":"YulAssignment","src":"2606:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2620:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2623:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2616:3:32"},"nodeType":"YulFunctionCall","src":"2616:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2637:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2667:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"2673:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2663:3:32"},"nodeType":"YulFunctionCall","src":"2663:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2641:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2714:31:32","statements":[{"nodeType":"YulAssignment","src":"2716:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2730:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2738:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2726:3:32"},"nodeType":"YulFunctionCall","src":"2726:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2716:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2694:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2687:6:32"},"nodeType":"YulFunctionCall","src":"2687:26:32"},"nodeType":"YulIf","src":"2684:61:32"},{"body":{"nodeType":"YulBlock","src":"2804:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2832:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2837:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2828:3:32"},"nodeType":"YulFunctionCall","src":"2828:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:32"},"nodeType":"YulFunctionCall","src":"2818:31:32"},"nodeType":"YulExpressionStatement","src":"2818:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2872:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2862:6:32"},"nodeType":"YulFunctionCall","src":"2862:15:32"},"nodeType":"YulExpressionStatement","src":"2862:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2897:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2900:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2890:6:32"},"nodeType":"YulFunctionCall","src":"2890:15:32"},"nodeType":"YulExpressionStatement","src":"2890:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2760:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2783:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2791:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2780:2:32"},"nodeType":"YulFunctionCall","src":"2780:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2757:2:32"},"nodeType":"YulFunctionCall","src":"2757:38:32"},"nodeType":"YulIf","src":"2754:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2576:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2585:6:32","type":""}],"src":"2541:380:32"},{"body":{"nodeType":"YulBlock","src":"3083:188:32","statements":[{"nodeType":"YulAssignment","src":"3093:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:32"},"nodeType":"YulFunctionCall","src":"3101:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3093:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3135:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3150:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3166:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3171:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3162:3:32"},"nodeType":"YulFunctionCall","src":"3162:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3175:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3158:3:32"},"nodeType":"YulFunctionCall","src":"3158:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3146:3:32"},"nodeType":"YulFunctionCall","src":"3146:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3128:6:32"},"nodeType":"YulFunctionCall","src":"3128:51:32"},"nodeType":"YulExpressionStatement","src":"3128:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:32"},"nodeType":"YulFunctionCall","src":"3195:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"3215:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3188:6:32"},"nodeType":"YulFunctionCall","src":"3188:34:32"},"nodeType":"YulExpressionStatement","src":"3188:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3242:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3253:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3238:3:32"},"nodeType":"YulFunctionCall","src":"3238:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"3258:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3231:6:32"},"nodeType":"YulFunctionCall","src":"3231:34:32"},"nodeType":"YulExpressionStatement","src":"3231:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3036:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3047:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3055:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3063:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3074:4:32","type":""}],"src":"2926:345:32"},{"body":{"nodeType":"YulBlock","src":"3377:102:32","statements":[{"nodeType":"YulAssignment","src":"3387:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3399:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3410:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3395:3:32"},"nodeType":"YulFunctionCall","src":"3395:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3387:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3429:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3444:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3460:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3465:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3456:3:32"},"nodeType":"YulFunctionCall","src":"3456:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3469:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3452:3:32"},"nodeType":"YulFunctionCall","src":"3452:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3440:3:32"},"nodeType":"YulFunctionCall","src":"3440:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3422:6:32"},"nodeType":"YulFunctionCall","src":"3422:51:32"},"nodeType":"YulExpressionStatement","src":"3422:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3346:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3357:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3368:4:32","type":""}],"src":"3276:203:32"},{"body":{"nodeType":"YulBlock","src":"3532:174:32","statements":[{"nodeType":"YulAssignment","src":"3542:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3553:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"3556:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:32"},"nodeType":"YulFunctionCall","src":"3549:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3542:3:32"}]},{"body":{"nodeType":"YulBlock","src":"3589:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3610:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3617:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3622:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3613:3:32"},"nodeType":"YulFunctionCall","src":"3613:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3603:6:32"},"nodeType":"YulFunctionCall","src":"3603:31:32"},"nodeType":"YulExpressionStatement","src":"3603:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3654:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3657:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3647:6:32"},"nodeType":"YulFunctionCall","src":"3647:15:32"},"nodeType":"YulExpressionStatement","src":"3647:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3682:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3685:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3675:6:32"},"nodeType":"YulFunctionCall","src":"3675:15:32"},"nodeType":"YulExpressionStatement","src":"3675:15:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3573:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"3576:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3570:2:32"},"nodeType":"YulFunctionCall","src":"3570:10:32"},"nodeType":"YulIf","src":"3567:133:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3515:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"3518:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3524:3:32","type":""}],"src":"3484:222:32"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461012357806342966c681461013857806370a082311461014b57806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610630565b60405180910390f35b6100df6100da36600461069a565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106c4565b610274565b604051601281526020016100c3565b61013661013136600461069a565b610298565b005b610136610146366004610700565b6102a6565b6100f3610159366004610719565b6001600160a01b031660009081526020819052604090205490565b6100b66102b3565b6100df61018a36600461069a565b6102c2565b6100f361019d36600461073b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d79061076e565b80601f01602080910402602001604051908101604052809291908181526020018280546102039061076e565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6000336102688185856102d0565b60019150505b92915050565b6000336102828582856102e2565b61028d858585610366565b506001949350505050565b6102a282826103c5565b5050565b6102b033826103fb565b50565b6060600480546101d79061076e565b600033610268818585610366565b6102dd8383836001610431565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610360578181101561035157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036084848484036000610431565b50505050565b6001600160a01b03831661039057604051634b637e8f60e11b815260006004820152602401610348565b6001600160a01b0382166103ba5760405163ec442f0560e01b815260006004820152602401610348565b6102dd838383610506565b6001600160a01b0382166103ef5760405163ec442f0560e01b815260006004820152602401610348565b6102a260008383610506565b6001600160a01b03821661042557604051634b637e8f60e11b815260006004820152602401610348565b6102a282600083610506565b6001600160a01b03841661045b5760405163e602df0560e01b815260006004820152602401610348565b6001600160a01b03831661048557604051634a1406b160e11b815260006004820152602401610348565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f891815260200190565b60405180910390a350505050565b6001600160a01b03831661053157806002600082825461052691906107a8565b909155506105a39050565b6001600160a01b038316600090815260208190526040902054818110156105845760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105bf576002805482900390556105de565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561065d57858101830151858201604001528201610641565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461069557600080fd5b919050565b600080604083850312156106ad57600080fd5b6106b68361067e565b946020939093013593505050565b6000806000606084860312156106d957600080fd5b6106e28461067e565b92506106f06020850161067e565b9150604084013590509250925092565b60006020828403121561071257600080fd5b5035919050565b60006020828403121561072b57600080fd5b6107348261067e565b9392505050565b6000806040838503121561074e57600080fd5b6107578361067e565b91506107656020840161067e565b90509250929050565b600181811c9082168061078257607f821691505b6020821081036107a257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026e57634e487b7160e01b600052601160045260246000fdfea26469706673582212208a519f18d91c491e10fbe5eca7662459ec98df0eb05fa92b41696602349b61c464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x69A JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x73B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x203 SWAP1 PUSH2 0x76E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x250 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x225 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x250 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x233 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x282 DUP6 DUP3 DUP6 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x28D DUP6 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A2 DUP3 DUP3 PUSH2 0x3C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2B0 CALLER DUP3 PUSH2 0x3FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D7 SWAP1 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x268 DUP2 DUP6 DUP6 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x431 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x360 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x360 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x431 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH2 0x2A2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x506 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x485 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x360 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x531 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5A3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BF JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x65D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x641 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B6 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E2 DUP5 PUSH2 0x67E JUMP JUMPDEST SWAP3 POP PUSH2 0x6F0 PUSH1 0x20 DUP6 ADD PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP3 PUSH2 0x67E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x757 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH2 0x765 PUSH1 0x20 DUP5 ADD PUSH2 0x67E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x782 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x26E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 MLOAD SWAP16 XOR 0xD9 SHR 0x49 0x1E LT 0xFB 0xE5 0xEC 0xA7 PUSH7 0x2459EC98DF0EB0 PUSH0 0xA9 0x2B COINBASE PUSH10 0x6602349B61C464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"120:314:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:32;;1162:22;1144:41;;1132:2;1117:18;3998:186:7;1004:187:32;2849:97:7;2927:12;;2849:97;;;1342:25:32;;;1330:2;1315:18;2849:97:7;1196:177:32;4776:244:7;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:32;;1841:2;1826:18;2707:82:7;1711:184:32;241:93:30;;;;;;:::i;:::-;;:::i;:::-;;342:89;;;;;;:::i;:::-;;:::i;3004:116:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:7;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:7;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:15;4125:31:7;735:10:15;4141:7:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:15;4919:37:7;4935:4;735:10:15;4950:5:7;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:7;;4776:244;-1:-1:-1;;;;4776:244:7:o;241:93:30:-;309:17;315:2;319:6;309:5;:17::i;:::-;241:93;;:::o;342:89::-;398:25;404:10;416:6;398:5;:25::i;:::-;342:89;:::o;1981:93:7:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:15;3438:27:7;735:10:15;3455:2:7;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:7;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:7;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:7;;-1:-1:-1;;;;;3146:32:32;;10687:60:7;;;3128:51:32;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;10687:60:7;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:7;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:7;;5544:1;5517:30;;;3422:51:32;3395:18;;5517:30:7;3276:203:32;5472:86:7;-1:-1:-1;;;;;5571:16:7;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:7;;5639:1;5610:32;;;3422:51:32;3395:18;;5610:32:7;3276:203:32;5567:86:7;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7458:208::-;-1:-1:-1;;;;;7528:21:7;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:7;;7601:1;7572:32;;;3422:51:32;3395:18;;7572:32:7;3276:203:32;7524:91:7;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;7984:206::-;-1:-1:-1;;;;;8054:21:7;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:7;;8125:1;8098:30;;;3422:51:32;3395:18;;8098:30:7;3276:203:32;8050:89:7;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:7;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:7;;9884:1;9855:32;;;3422:51:32;3395:18;;9855:32:7;3276:203:32;9809:89:7;-1:-1:-1;;;;;9911:21:7;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:7;;9983:1;9955:31;;;3422:51:32;3395:18;;9955:31:7;3276:203:32;9907:90:7;-1:-1:-1;;;;;10006:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:7;10094:5;-1:-1:-1;;;;;10085:31:7;;10110:5;10085:31;;;;1342:25:32;;1330:2;1315:18;;1196:177;10085:31:7;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:7;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:7;;-1:-1:-1;6093:540:7;;-1:-1:-1;;;;;6307:15:7;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:7;;-1:-1:-1;;;;;3146:32:32;;6386:50:7;;;3128:51:32;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;6386:50:7;2926:345:32;6336:115:7;-1:-1:-1;;;;;6571:15:7;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:7;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:7;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:7;7092:4;-1:-1:-1;;;;;7083:25:7;;7102:5;7083:25;;;;1342::32;;1330:2;1315:18;;1196:177;7083:25:7;;;;;;;;6008:1107;;;:::o;14:548:32:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:32;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:32:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:32;;1900:180;-1:-1:-1;1900:180:32:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:32:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;3484:222::-;3549:9;;;3570:10;;;3567:133;;;3622:10;3617:3;3613:20;3610:1;3603:31;3657:4;3654:1;3647:15;3685:4;3682:1;3675:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomERC20.sol\":\"CustomERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0xaf7fa858aef71661986fb4f58080e4f1d50d2a876b2acc8b56c506057b0e9a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b941f5427e8a2214cd40fe228839e30b32ef748901800a42b6fda4c1dd9f5d6\",\"dweb:/ipfs/QmU7QDLFRKXhVaXUSDtiov9ynvfKSGBjJT1zDjBLR5U4ub\"]}},\"version\":1}"}},"contracts/NewToken.sol":{"NewToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"MaxTransferAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"newTokenURI","type":"string"}],"name":"TokenURISet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"oldStatus","type":"bool"},{"indexed":false,"internalType":"bool","name":"newStatus","type":"bool"}],"name":"TransferRestrictionUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransferAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"setMaxTransferAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newTokenURI","type":"string"}],"name":"setTokenURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"newStatus","type":"bool"}],"name":"setTransferRestriction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferRestricted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1013":{"entryPoint":null,"id":1013,"parameterSlots":2,"returnSlots":0},"@_1683":{"entryPoint":null,"id":1683,"parameterSlots":1,"returnSlots":0},"@_2166":{"entryPoint":null,"id":2166,"parameterSlots":0,"returnSlots":0},"@_4235":{"entryPoint":null,"id":4235,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9826":{"entryPoint":null,"id":9826,"parameterSlots":2,"returnSlots":0},"@_9955":{"entryPoint":null,"id":9955,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_4282":{"entryPoint":null,"id":4282,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":435,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2567":{"entryPoint":null,"id":2567,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2407":{"entryPoint":525,"id":2407,"parameterSlots":2,"returnSlots":1},"@toShortString_2309":{"entryPoint":582,"id":2309,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":709,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":854,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1381,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1346,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1059,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1434,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":671,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":999,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":649,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6089:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:32"},"nodeType":"YulFunctionCall","src":"66:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:32"},"nodeType":"YulFunctionCall","src":"56:31:32"},"nodeType":"YulExpressionStatement","src":"56:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:32"},"nodeType":"YulFunctionCall","src":"96:15:32"},"nodeType":"YulExpressionStatement","src":"96:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:32"},"nodeType":"YulFunctionCall","src":"120:15:32"},"nodeType":"YulExpressionStatement","src":"120:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:32"},{"body":{"nodeType":"YulBlock","src":"212:184:32","statements":[{"nodeType":"YulVariableDeclaration","src":"222:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"231:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"226:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:63:32","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"316:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"321:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:32"},"nodeType":"YulFunctionCall","src":"312:11:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"335:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"340:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:32"},"nodeType":"YulFunctionCall","src":"331:11:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"325:5:32"},"nodeType":"YulFunctionCall","src":"325:18:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"305:6:32"},"nodeType":"YulFunctionCall","src":"305:39:32"},"nodeType":"YulExpressionStatement","src":"305:39:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"252:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"255:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"249:2:32"},"nodeType":"YulFunctionCall","src":"249:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"263:19:32","statements":[{"nodeType":"YulAssignment","src":"265:15:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"274:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"277:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"270:3:32"},"nodeType":"YulFunctionCall","src":"270:10:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"265:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"245:3:32","statements":[]},"src":"241:113:32"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"374:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:32"},"nodeType":"YulFunctionCall","src":"370:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"388:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"363:6:32"},"nodeType":"YulFunctionCall","src":"363:27:32"},"nodeType":"YulExpressionStatement","src":"363:27:32"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"190:3:32","type":""},{"name":"dst","nodeType":"YulTypedName","src":"195:3:32","type":""},{"name":"length","nodeType":"YulTypedName","src":"200:6:32","type":""}],"src":"146:250:32"},{"body":{"nodeType":"YulBlock","src":"465:635:32","statements":[{"body":{"nodeType":"YulBlock","src":"514:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"523:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"526:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"516:6:32"},"nodeType":"YulFunctionCall","src":"516:12:32"},"nodeType":"YulExpressionStatement","src":"516:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"493:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"501:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:32"},"nodeType":"YulFunctionCall","src":"489:17:32"},{"name":"end","nodeType":"YulIdentifier","src":"508:3:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"485:3:32"},"nodeType":"YulFunctionCall","src":"485:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"478:6:32"},"nodeType":"YulFunctionCall","src":"478:35:32"},"nodeType":"YulIf","src":"475:55:32"},{"nodeType":"YulVariableDeclaration","src":"539:23:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"555:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"549:5:32"},"nodeType":"YulFunctionCall","src":"549:13:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"543:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"571:28:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"589:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"593:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"585:3:32"},"nodeType":"YulFunctionCall","src":"585:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"597:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"581:3:32"},"nodeType":"YulFunctionCall","src":"581:18:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"575:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"622:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"624:16:32"},"nodeType":"YulFunctionCall","src":"624:18:32"},"nodeType":"YulExpressionStatement","src":"624:18:32"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"614:2:32"},{"name":"_2","nodeType":"YulIdentifier","src":"618:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"611:2:32"},"nodeType":"YulFunctionCall","src":"611:10:32"},"nodeType":"YulIf","src":"608:36:32"},{"nodeType":"YulVariableDeclaration","src":"653:17:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"667:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"663:3:32"},"nodeType":"YulFunctionCall","src":"663:7:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"657:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"679:23:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"699:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"693:5:32"},"nodeType":"YulFunctionCall","src":"693:9:32"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"683:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"711:71:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"733:6:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"757:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"761:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"753:3:32"},"nodeType":"YulFunctionCall","src":"753:13:32"},{"name":"_3","nodeType":"YulIdentifier","src":"768:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"749:3:32"},"nodeType":"YulFunctionCall","src":"749:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"773:2:32","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:32"},"nodeType":"YulFunctionCall","src":"745:31:32"},{"name":"_3","nodeType":"YulIdentifier","src":"778:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"741:3:32"},"nodeType":"YulFunctionCall","src":"741:40:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"729:3:32"},"nodeType":"YulFunctionCall","src":"729:53:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"715:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"841:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"843:16:32"},"nodeType":"YulFunctionCall","src":"843:18:32"},"nodeType":"YulExpressionStatement","src":"843:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"800:10:32"},{"name":"_2","nodeType":"YulIdentifier","src":"812:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"797:2:32"},"nodeType":"YulFunctionCall","src":"797:18:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"820:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"832:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:32"},"nodeType":"YulFunctionCall","src":"817:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"794:2:32"},"nodeType":"YulFunctionCall","src":"794:46:32"},"nodeType":"YulIf","src":"791:72:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"879:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"883:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"872:6:32"},"nodeType":"YulFunctionCall","src":"872:22:32"},"nodeType":"YulExpressionStatement","src":"872:22:32"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"910:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"918:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"903:6:32"},"nodeType":"YulFunctionCall","src":"903:18:32"},"nodeType":"YulExpressionStatement","src":"903:18:32"},{"body":{"nodeType":"YulBlock","src":"969:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"978:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"981:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"971:6:32"},"nodeType":"YulFunctionCall","src":"971:12:32"},"nodeType":"YulExpressionStatement","src":"971:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"944:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"952:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"940:3:32"},"nodeType":"YulFunctionCall","src":"940:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"957:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:32"},"nodeType":"YulFunctionCall","src":"936:26:32"},{"name":"end","nodeType":"YulIdentifier","src":"964:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"933:2:32"},"nodeType":"YulFunctionCall","src":"933:35:32"},"nodeType":"YulIf","src":"930:55:32"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1033:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1041:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1029:3:32"},"nodeType":"YulFunctionCall","src":"1029:17:32"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1052:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"1060:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:32"},"nodeType":"YulFunctionCall","src":"1048:17:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1067:2:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"994:34:32"},"nodeType":"YulFunctionCall","src":"994:76:32"},"nodeType":"YulExpressionStatement","src":"994:76:32"},{"nodeType":"YulAssignment","src":"1079:15:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1088:6:32"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1079:5:32"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"439:6:32","type":""},{"name":"end","nodeType":"YulTypedName","src":"447:3:32","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"455:5:32","type":""}],"src":"401:699:32"},{"body":{"nodeType":"YulBlock","src":"1250:621:32","statements":[{"body":{"nodeType":"YulBlock","src":"1296:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1305:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1308:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1298:6:32"},"nodeType":"YulFunctionCall","src":"1298:12:32"},"nodeType":"YulExpressionStatement","src":"1298:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1271:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1280:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1267:3:32"},"nodeType":"YulFunctionCall","src":"1267:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1292:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1263:3:32"},"nodeType":"YulFunctionCall","src":"1263:32:32"},"nodeType":"YulIf","src":"1260:52:32"},{"nodeType":"YulVariableDeclaration","src":"1321:30:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1341:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1335:5:32"},"nodeType":"YulFunctionCall","src":"1335:16:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1325:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1360:28:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1378:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1382:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1374:3:32"},"nodeType":"YulFunctionCall","src":"1374:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1370:3:32"},"nodeType":"YulFunctionCall","src":"1370:18:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1364:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1415:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1424:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1427:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1417:6:32"},"nodeType":"YulFunctionCall","src":"1417:12:32"},"nodeType":"YulExpressionStatement","src":"1417:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1403:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1411:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1400:2:32"},"nodeType":"YulFunctionCall","src":"1400:14:32"},"nodeType":"YulIf","src":"1397:34:32"},{"nodeType":"YulAssignment","src":"1440:71:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1483:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"1494:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1479:3:32"},"nodeType":"YulFunctionCall","src":"1479:22:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:32"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1450:28:32"},"nodeType":"YulFunctionCall","src":"1450:61:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1440:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1520:41:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1546:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1557:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1542:3:32"},"nodeType":"YulFunctionCall","src":"1542:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1536:5:32"},"nodeType":"YulFunctionCall","src":"1536:25:32"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1524:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1590:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1599:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1602:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1592:6:32"},"nodeType":"YulFunctionCall","src":"1592:12:32"},"nodeType":"YulExpressionStatement","src":"1592:12:32"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1576:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1586:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1573:2:32"},"nodeType":"YulFunctionCall","src":"1573:16:32"},"nodeType":"YulIf","src":"1570:36:32"},{"nodeType":"YulAssignment","src":"1615:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1658:9:32"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1669:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:32"},"nodeType":"YulFunctionCall","src":"1654:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1680:7:32"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1625:28:32"},"nodeType":"YulFunctionCall","src":"1625:63:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1615:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1697:41:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1723:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:32"},"nodeType":"YulFunctionCall","src":"1719:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1713:5:32"},"nodeType":"YulFunctionCall","src":"1713:25:32"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"1701:8:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1767:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1776:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1779:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1769:6:32"},"nodeType":"YulFunctionCall","src":"1769:12:32"},"nodeType":"YulExpressionStatement","src":"1769:12:32"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"1753:8:32"},{"name":"_1","nodeType":"YulIdentifier","src":"1763:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1750:2:32"},"nodeType":"YulFunctionCall","src":"1750:16:32"},"nodeType":"YulIf","src":"1747:36:32"},{"nodeType":"YulAssignment","src":"1792:73:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1835:9:32"},{"name":"offset_2","nodeType":"YulIdentifier","src":"1846:8:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1831:3:32"},"nodeType":"YulFunctionCall","src":"1831:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1857:7:32"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1802:28:32"},"nodeType":"YulFunctionCall","src":"1802:63:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1792:6:32"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1200:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1211:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1223:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1231:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1239:6:32","type":""}],"src":"1105:766:32"},{"body":{"nodeType":"YulBlock","src":"1931:325:32","statements":[{"nodeType":"YulAssignment","src":"1941:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1955:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1958:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1951:3:32"},"nodeType":"YulFunctionCall","src":"1951:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1941:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1972:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2002:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"2008:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1998:3:32"},"nodeType":"YulFunctionCall","src":"1998:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1976:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2049:31:32","statements":[{"nodeType":"YulAssignment","src":"2051:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2065:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2073:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2061:3:32"},"nodeType":"YulFunctionCall","src":"2061:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2051:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2029:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2022:6:32"},"nodeType":"YulFunctionCall","src":"2022:26:32"},"nodeType":"YulIf","src":"2019:61:32"},{"body":{"nodeType":"YulBlock","src":"2139:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2160:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2167:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2172:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2163:3:32"},"nodeType":"YulFunctionCall","src":"2163:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2153:6:32"},"nodeType":"YulFunctionCall","src":"2153:31:32"},"nodeType":"YulExpressionStatement","src":"2153:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2204:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2207:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2197:6:32"},"nodeType":"YulFunctionCall","src":"2197:15:32"},"nodeType":"YulExpressionStatement","src":"2197:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2232:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2235:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2225:6:32"},"nodeType":"YulFunctionCall","src":"2225:15:32"},"nodeType":"YulExpressionStatement","src":"2225:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2095:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2126:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2115:2:32"},"nodeType":"YulFunctionCall","src":"2115:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2092:2:32"},"nodeType":"YulFunctionCall","src":"2092:38:32"},"nodeType":"YulIf","src":"2089:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1911:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1920:6:32","type":""}],"src":"1876:380:32"},{"body":{"nodeType":"YulBlock","src":"2317:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2337:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2327:6:32"},"nodeType":"YulFunctionCall","src":"2327:14:32"},"nodeType":"YulExpressionStatement","src":"2327:14:32"},{"nodeType":"YulAssignment","src":"2350:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2371:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2358:9:32"},"nodeType":"YulFunctionCall","src":"2358:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2350:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2300:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2308:4:32","type":""}],"src":"2261:121:32"},{"body":{"nodeType":"YulBlock","src":"2468:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"2501:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"2515:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"2525:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2519:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2546:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"2550:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2539:6:32"},"nodeType":"YulFunctionCall","src":"2539:17:32"},"nodeType":"YulExpressionStatement","src":"2539:17:32"},{"nodeType":"YulVariableDeclaration","src":"2569:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2591:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"2595:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2581:9:32"},"nodeType":"YulFunctionCall","src":"2581:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2573:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2613:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2636:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2646:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2653:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2665:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2649:3:32"},"nodeType":"YulFunctionCall","src":"2649:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2642:3:32"},"nodeType":"YulFunctionCall","src":"2642:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2632:3:32"},"nodeType":"YulFunctionCall","src":"2632:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2617:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2707:23:32","statements":[{"nodeType":"YulAssignment","src":"2709:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"2724:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2709:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2689:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"2701:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2686:2:32"},"nodeType":"YulFunctionCall","src":"2686:20:32"},"nodeType":"YulIf","src":"2683:47:32"},{"nodeType":"YulVariableDeclaration","src":"2743:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2757:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2767:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2774:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2779:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2770:3:32"},"nodeType":"YulFunctionCall","src":"2770:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2763:3:32"},"nodeType":"YulFunctionCall","src":"2763:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2753:3:32"},"nodeType":"YulFunctionCall","src":"2753:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2747:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2797:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2810:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2801:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2895:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2904:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"2911:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2897:6:32"},"nodeType":"YulFunctionCall","src":"2897:17:32"},"nodeType":"YulExpressionStatement","src":"2897:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2845:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"2852:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2842:2:32"},"nodeType":"YulFunctionCall","src":"2842:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2856:26:32","statements":[{"nodeType":"YulAssignment","src":"2858:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2871:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"2878:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2867:3:32"},"nodeType":"YulFunctionCall","src":"2867:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2858:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"2838:3:32","statements":[]},"src":"2834:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2484:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"2489:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2481:2:32"},"nodeType":"YulFunctionCall","src":"2481:11:32"},"nodeType":"YulIf","src":"2478:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2440:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"2447:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2452:10:32","type":""}],"src":"2387:545:32"},{"body":{"nodeType":"YulBlock","src":"3022:81:32","statements":[{"nodeType":"YulAssignment","src":"3032:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3047:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3065:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3068:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3061:3:32"},"nodeType":"YulFunctionCall","src":"3061:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3078:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3074:3:32"},"nodeType":"YulFunctionCall","src":"3074:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3057:3:32"},"nodeType":"YulFunctionCall","src":"3057:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3053:3:32"},"nodeType":"YulFunctionCall","src":"3053:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3043:3:32"},"nodeType":"YulFunctionCall","src":"3043:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3092:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3085:3:32"},"nodeType":"YulFunctionCall","src":"3085:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3040:2:32"},"nodeType":"YulFunctionCall","src":"3040:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3032:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2999:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"3005:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3013:4:32","type":""}],"src":"2937:166:32"},{"body":{"nodeType":"YulBlock","src":"3204:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3214:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3234:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3228:5:32"},"nodeType":"YulFunctionCall","src":"3228:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3218:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3281:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3283:16:32"},"nodeType":"YulFunctionCall","src":"3283:18:32"},"nodeType":"YulExpressionStatement","src":"3283:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3253:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:2:32","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3273:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3265:3:32"},"nodeType":"YulFunctionCall","src":"3265:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"3277:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3261:3:32"},"nodeType":"YulFunctionCall","src":"3261:18:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3250:2:32"},"nodeType":"YulFunctionCall","src":"3250:30:32"},"nodeType":"YulIf","src":"3247:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3356:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3394:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3388:5:32"},"nodeType":"YulFunctionCall","src":"3388:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3362:25:32"},"nodeType":"YulFunctionCall","src":"3362:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3402:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3312:43:32"},"nodeType":"YulFunctionCall","src":"3312:97:32"},"nodeType":"YulExpressionStatement","src":"3312:97:32"},{"nodeType":"YulVariableDeclaration","src":"3418:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3435:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3422:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3445:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3464:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3449:11:32","type":""}]},{"nodeType":"YulAssignment","src":"3477:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3490:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3477:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3547:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3561:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3580:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3592:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3588:3:32"},"nodeType":"YulFunctionCall","src":"3588:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3576:3:32"},"nodeType":"YulFunctionCall","src":"3576:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3565:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3609:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3653:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3623:29:32"},"nodeType":"YulFunctionCall","src":"3623:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3613:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3671:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3680:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3675:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3758:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3783:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3801:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3806:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3797:3:32"},"nodeType":"YulFunctionCall","src":"3797:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3791:5:32"},"nodeType":"YulFunctionCall","src":"3791:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3776:6:32"},"nodeType":"YulFunctionCall","src":"3776:42:32"},"nodeType":"YulExpressionStatement","src":"3776:42:32"},{"nodeType":"YulAssignment","src":"3835:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3849:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3857:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3845:3:32"},"nodeType":"YulFunctionCall","src":"3845:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3835:6:32"}]},{"nodeType":"YulAssignment","src":"3876:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3893:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3904:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3889:3:32"},"nodeType":"YulFunctionCall","src":"3889:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3876:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3705:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3708:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3702:2:32"},"nodeType":"YulFunctionCall","src":"3702:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3717:28:32","statements":[{"nodeType":"YulAssignment","src":"3719:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3728:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3731:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3724:3:32"},"nodeType":"YulFunctionCall","src":"3724:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3719:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"3698:3:32","statements":[]},"src":"3694:236:32"},{"body":{"nodeType":"YulBlock","src":"3978:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"3996:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4023:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4028:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4019:3:32"},"nodeType":"YulFunctionCall","src":"4019:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4013:5:32"},"nodeType":"YulFunctionCall","src":"4013:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4000:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4063:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4075:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4102:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4105:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4098:3:32"},"nodeType":"YulFunctionCall","src":"4098:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"4114:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4094:3:32"},"nodeType":"YulFunctionCall","src":"4094:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4124:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4120:3:32"},"nodeType":"YulFunctionCall","src":"4120:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4090:3:32"},"nodeType":"YulFunctionCall","src":"4090:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4086:3:32"},"nodeType":"YulFunctionCall","src":"4086:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4071:3:32"},"nodeType":"YulFunctionCall","src":"4071:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4056:6:32"},"nodeType":"YulFunctionCall","src":"4056:74:32"},"nodeType":"YulExpressionStatement","src":"4056:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3949:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"3958:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3946:2:32"},"nodeType":"YulFunctionCall","src":"3946:19:32"},"nodeType":"YulIf","src":"3943:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4164:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4178:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4181:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4174:3:32"},"nodeType":"YulFunctionCall","src":"4174:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"4190:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4170:3:32"},"nodeType":"YulFunctionCall","src":"4170:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4157:6:32"},"nodeType":"YulFunctionCall","src":"4157:36:32"},"nodeType":"YulExpressionStatement","src":"4157:36:32"}]},"nodeType":"YulCase","src":"3540:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3545:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4220:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"4234:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"4247:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4238:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4283:67:32","statements":[{"nodeType":"YulAssignment","src":"4301:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4320:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4325:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4316:3:32"},"nodeType":"YulFunctionCall","src":"4316:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4310:5:32"},"nodeType":"YulFunctionCall","src":"4310:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4301:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4264:6:32"},"nodeType":"YulIf","src":"4261:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4370:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4429:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"4436:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4376:52:32"},"nodeType":"YulFunctionCall","src":"4376:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4363:6:32"},"nodeType":"YulFunctionCall","src":"4363:81:32"},"nodeType":"YulExpressionStatement","src":"4363:81:32"}]},"nodeType":"YulCase","src":"4212:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3520:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3528:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3517:2:32"},"nodeType":"YulFunctionCall","src":"3517:14:32"},"nodeType":"YulSwitch","src":"3510:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3189:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"3195:3:32","type":""}],"src":"3108:1352:32"},{"body":{"nodeType":"YulBlock","src":"4566:102:32","statements":[{"nodeType":"YulAssignment","src":"4576:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4588:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4599:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:32"},"nodeType":"YulFunctionCall","src":"4584:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4576:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4618:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4633:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4649:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4654:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4645:3:32"},"nodeType":"YulFunctionCall","src":"4645:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"4658:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4641:3:32"},"nodeType":"YulFunctionCall","src":"4641:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4629:3:32"},"nodeType":"YulFunctionCall","src":"4629:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4611:6:32"},"nodeType":"YulFunctionCall","src":"4611:51:32"},"nodeType":"YulExpressionStatement","src":"4611:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4535:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4546:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4557:4:32","type":""}],"src":"4465:203:32"},{"body":{"nodeType":"YulBlock","src":"4719:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"4750:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4771:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4778:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4783:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4774:3:32"},"nodeType":"YulFunctionCall","src":"4774:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4764:6:32"},"nodeType":"YulFunctionCall","src":"4764:31:32"},"nodeType":"YulExpressionStatement","src":"4764:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4815:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4818:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4808:6:32"},"nodeType":"YulFunctionCall","src":"4808:15:32"},"nodeType":"YulExpressionStatement","src":"4808:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4843:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4846:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4836:6:32"},"nodeType":"YulFunctionCall","src":"4836:15:32"},"nodeType":"YulExpressionStatement","src":"4836:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4739:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4732:6:32"},"nodeType":"YulFunctionCall","src":"4732:9:32"},"nodeType":"YulIf","src":"4729:132:32"},{"nodeType":"YulAssignment","src":"4870:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4879:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"4882:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4875:3:32"},"nodeType":"YulFunctionCall","src":"4875:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4870:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4704:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"4707:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4713:1:32","type":""}],"src":"4673:217:32"},{"body":{"nodeType":"YulBlock","src":"5108:276:32","statements":[{"nodeType":"YulAssignment","src":"5118:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5130:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5141:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5126:3:32"},"nodeType":"YulFunctionCall","src":"5126:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5118:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5161:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"5172:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5154:6:32"},"nodeType":"YulFunctionCall","src":"5154:25:32"},"nodeType":"YulExpressionStatement","src":"5154:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5199:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5195:3:32"},"nodeType":"YulFunctionCall","src":"5195:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"5215:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5188:6:32"},"nodeType":"YulFunctionCall","src":"5188:34:32"},"nodeType":"YulExpressionStatement","src":"5188:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5242:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5253:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5238:3:32"},"nodeType":"YulFunctionCall","src":"5238:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5258:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5231:6:32"},"nodeType":"YulFunctionCall","src":"5231:34:32"},"nodeType":"YulExpressionStatement","src":"5231:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5285:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5296:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5281:3:32"},"nodeType":"YulFunctionCall","src":"5281:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"5301:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5274:6:32"},"nodeType":"YulFunctionCall","src":"5274:34:32"},"nodeType":"YulExpressionStatement","src":"5274:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5328:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5339:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5324:3:32"},"nodeType":"YulFunctionCall","src":"5324:19:32"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5349:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5365:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5370:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5361:3:32"},"nodeType":"YulFunctionCall","src":"5361:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"5374:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5357:3:32"},"nodeType":"YulFunctionCall","src":"5357:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5345:3:32"},"nodeType":"YulFunctionCall","src":"5345:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5317:6:32"},"nodeType":"YulFunctionCall","src":"5317:61:32"},"nodeType":"YulExpressionStatement","src":"5317:61:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5045:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5056:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5064:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5072:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5080:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5088:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5099:4:32","type":""}],"src":"4895:489:32"},{"body":{"nodeType":"YulBlock","src":"5510:275:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5527:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5538:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5520:6:32"},"nodeType":"YulFunctionCall","src":"5520:21:32"},"nodeType":"YulExpressionStatement","src":"5520:21:32"},{"nodeType":"YulVariableDeclaration","src":"5550:27:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5570:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5564:5:32"},"nodeType":"YulFunctionCall","src":"5564:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5554:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5597:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5608:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5593:3:32"},"nodeType":"YulFunctionCall","src":"5593:18:32"},{"name":"length","nodeType":"YulIdentifier","src":"5613:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:32"},"nodeType":"YulFunctionCall","src":"5586:34:32"},"nodeType":"YulExpressionStatement","src":"5586:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5668:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5676:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5664:3:32"},"nodeType":"YulFunctionCall","src":"5664:15:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:32"},"nodeType":"YulFunctionCall","src":"5681:18:32"},{"name":"length","nodeType":"YulIdentifier","src":"5701:6:32"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5629:34:32"},"nodeType":"YulFunctionCall","src":"5629:79:32"},"nodeType":"YulExpressionStatement","src":"5629:79:32"},{"nodeType":"YulAssignment","src":"5717:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5752:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5760:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5748:3:32"},"nodeType":"YulFunctionCall","src":"5748:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5769:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5765:3:32"},"nodeType":"YulFunctionCall","src":"5765:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5744:3:32"},"nodeType":"YulFunctionCall","src":"5744:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:32"},"nodeType":"YulFunctionCall","src":"5729:45:32"},{"kind":"number","nodeType":"YulLiteral","src":"5776:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5725:3:32"},"nodeType":"YulFunctionCall","src":"5725:54:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5717:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5479:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5490:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5501:4:32","type":""}],"src":"5389:396:32"},{"body":{"nodeType":"YulBlock","src":"5884:203:32","statements":[{"nodeType":"YulVariableDeclaration","src":"5894:26:32","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5914:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5908:5:32"},"nodeType":"YulFunctionCall","src":"5908:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:32","type":""}]},{"nodeType":"YulAssignment","src":"5929:32:32","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5948:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"5955:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:32"},"nodeType":"YulFunctionCall","src":"5944:16:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5938:5:32"},"nodeType":"YulFunctionCall","src":"5938:23:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5929:5:32"}]},{"body":{"nodeType":"YulBlock","src":"5998:83:32","statements":[{"nodeType":"YulAssignment","src":"6012:59:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6025:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6040:1:32","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6047:4:32","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"6053:6:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6043:3:32"},"nodeType":"YulFunctionCall","src":"6043:17:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6036:3:32"},"nodeType":"YulFunctionCall","src":"6036:25:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6067:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6063:3:32"},"nodeType":"YulFunctionCall","src":"6063:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6032:3:32"},"nodeType":"YulFunctionCall","src":"6032:38:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6021:3:32"},"nodeType":"YulFunctionCall","src":"6021:50:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6012:5:32"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5976:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"5984:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5973:2:32"},"nodeType":"YulFunctionCall","src":"5973:16:32"},"nodeType":"YulIf","src":"5970:111:32"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"5864:5:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5874:5:32","type":""}],"src":"5790:297:32"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b506040516200309338038062003093833981016040819052620000359162000356565b6040805180820190915260018152603160f81b6020820152839081903382868181600362000064838262000476565b50600462000073828262000476565b50506005805460ff191690555050506001600160a01b038116620000b257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000bd81620001b3565b50620000cb8260066200020d565b61012052620000dc8160076200020d565b61014052815160208084019190912060e052815190820120610100524660a0526200016a60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250600c62000182828262000476565b506200019a606469d3c21bcecceda100000062000542565b600d555050600e805460ff1916600117905550620005bf565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020835110156200022d57620002258362000246565b905062000240565b816200023a848262000476565b5060ff90505b92915050565b600080829050601f8151111562000274578260405163305a27a960e01b8152600401620000a9919062000565565b805162000281826200059a565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002bc578181015183820152602001620002a2565b50506000910152565b600082601f830112620002d757600080fd5b81516001600160401b0380821115620002f457620002f462000289565b604051601f8301601f19908116603f011681019082821181831017156200031f576200031f62000289565b816040528381528660208588010111156200033957600080fd5b6200034c8460208301602089016200029f565b9695505050505050565b6000806000606084860312156200036c57600080fd5b83516001600160401b03808211156200038457600080fd5b6200039287838801620002c5565b94506020860151915080821115620003a957600080fd5b620003b787838801620002c5565b93506040860151915080821115620003ce57600080fd5b50620003dd86828701620002c5565b9150509250925092565b600181811c90821680620003fc57607f821691505b6020821081036200041d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200047157600081815260208120601f850160051c810160208610156200044c5750805b601f850160051c820191505b818110156200046d5782815560010162000458565b5050505b505050565b81516001600160401b0381111562000492576200049262000289565b620004aa81620004a38454620003e7565b8462000423565b602080601f831160018114620004e25760008415620004c95750858301515b600019600386901b1c1916600185901b1785556200046d565b600085815260208120601f198616915b828110156200051357888601518255948401946001909101908401620004f2565b5085821015620005325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000826200056057634e487b7160e01b600052601260045260246000fd5b500490565b6020815260008251806020840152620005868160408501602087016200029f565b601f01601f19169190910160400192915050565b805160208083015191908110156200041d5760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051612a796200061a600039600061139d015260006113700152600061102301526000610ffb01526000610f5601526000610f8001526000610faa0152612a796000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063715018a61161013b57806395d89b41116100b8578063d505accf1161007c578063d505accf14610506578063dd62ed3e14610519578063e0df5b6f14610552578063f1127ed814610565578063f2fde38b146105a457600080fd5b806395d89b41146104bc5780639ab24eb0146104c4578063a9059cbb146104d7578063a9e75723146104ea578063c3cda520146104f357600080fd5b8063867378c5116100ff578063867378c5146104525780638bf55409146104615780638da5cb5b146104745780638e539e8c1461048a57806391ddadf41461049d57600080fd5b8063715018a61461040157806379cc6790146104095780637ecebe001461041c5780638456cb591461042f57806384b0196e1461043757600080fd5b80633f4ba83a116101c9578063587cde1e1161018d578063587cde1e1461034e5780635c19a95c146103925780635c975abb146103a55780636fcfff45146103b057806370a08231146103d857600080fd5b80633f4ba83a1461030b57806340c10f191461031357806342966c681461032657806348709a93146103395780634bf5d7e91461034657600080fd5b8063313ce56711610210578063313ce567146102c857806332cb6b0c146102d75780633644e515146102e85780633a46b1a8146102f05780633c130d901461030357600080fd5b806306fdde031461024d578063095ea7b31461026b5780630d659ec51461028e57806318160ddd146102a357806323b872dd146102b5575b600080fd5b6102556105b7565b6040516102629190612486565b60405180910390f35b61027e6102793660046124b5565b610649565b6040519015158152602001610262565b6102a161029c3660046124df565b610663565b005b6002545b604051908152602001610262565b61027e6102c3366004612501565b6106c2565b60405160128152602001610262565b6102a769d3c21bcecceda100000081565b6102a76106e6565b6102a76102fe3660046124b5565b6106f5565b610255610731565b6102a1610740565b6102a16103213660046124b5565b610752565b6102a161033436600461253d565b610812565b600e5461027e9060ff1681565b610255610919565b61037a61035c366004612556565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b039091168152602001610262565b6102a16103a0366004612556565b610991565b60055460ff1661027e565b6103c36103be366004612556565b6109a0565b60405163ffffffff9091168152602001610262565b6102a76103e6366004612556565b6001600160a01b031660009081526020819052604090205490565b6102a16109ab565b6102a16104173660046124b5565b6109bd565b6102a761042a366004612556565b6109d2565b6102a16109dd565b61043f6109ed565b6040516102629796959493929190612571565b6102a7670de0b6b3a764000081565b6102a161046f36600461253d565b610a33565b60055461010090046001600160a01b031661037a565b6102a761049836600461253d565b610ac9565b6104a5610aee565b60405165ffffffffffff9091168152602001610262565b610255610af8565b6102a76104d2366004612556565b610b07565b61027e6104e53660046124b5565b610b28565b6102a7600d5481565b6102a1610501366004612618565b610b36565b6102a1610514366004612670565b610bf3565b6102a76105273660046126da565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a1610560366004612723565b610d2d565b6105786105733660046127d4565b610dc3565b60408051825165ffffffffffff1681526020928301516001600160d01b03169281019290925201610262565b6102a16105b2366004612556565b610de8565b6060600380546105c690612814565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290612814565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b5050505050905090565b600033610657818585610e26565b60019150505b92915050565b61066b610e38565b600e805482151560ff19821681179092556040805160ff909216801515835260208301939093527f35b05563db5dd3045c31a9b46a385d3e34a1b6ad51cc00c23562eccb5619002a91015b60405180910390a15050565b6000336106d0858285610e6b565b6106db858585610eea565b506001949350505050565b60006106f0610f49565b905090565b600061072161070383611074565b6001600160a01b0385166000908152600a60205260409020906110c3565b6001600160d01b03169392505050565b6060600c80546105c690612814565b610748610e38565b610750611179565b565b61075a610e38565b69d3c21bcecceda10000008161076f60025490565b6107799190612864565b11156107c15760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b6107cb82826111cb565b816001600160a01b03167fb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a88260405161080691815260200190565b60405180910390a25050565b336000908152602081905260409020548181101561087d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107b8565b670de0b6b3a76400006108908383612877565b10156108de5760405162461bcd60e51b815260206004820181905260248201527f42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d60448201526064016107b8565b6108e7826111d5565b60405182815233907f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa290602001610806565b60606109236111df565b65ffffffffffff16610933610aee565b65ffffffffffff1614610959576040516301bfc1c560e61b815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b3361099c81836111ea565b5050565b600061065d8261125c565b6109b3610e38565b610750600061127e565b6109c8823383610e6b565b61099c82826112d8565b600061065d8261130e565b6109e5610e38565b61075061132c565b600060608060008060006060610a01611369565b610a09611396565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b610a3b610e38565b60008111610a8b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016107b8565b600d80549082905560408051828152602081018490527f1e7d225cb161c2f834852cd521d7ee05358af80025a0e937483c51e42bfc13de91016106b6565b6000610adf610ad783611074565b600b906110c3565b6001600160d01b031692915050565b60006106f06111df565b6060600480546105c690612814565b6001600160a01b0381166000908152600a60205260408120610adf906113c3565b600033610657818585610eea565b83421115610b5a57604051632341d78760e11b8152600481018590526024016107b8565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610bd490610bcc9060a001604051602081830303815290604052805190602001206113fc565b858585611429565b9050610be08187611457565b610bea81886111ea565b50505050505050565b83421115610c175760405163313c898160e11b8152600481018590526024016107b8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c648c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cbf826113fc565b90506000610ccf82878787611429565b9050896001600160a01b0316816001600160a01b031614610d16576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016107b8565b610d218a8a8a610e26565b50505050505050505050565b610d35610e38565b6000815111610d7c5760405162461bcd60e51b81526020600482015260136024820152725552492063616e6e6f7420626520656d70747960681b60448201526064016107b8565b600c610d8882826128d8565b507f5bb111c9b2ad41c6cc1754cdbee2cc303b7becb89d29d2d5f91165fcc0b0a49d81604051610db89190612486565b60405180910390a150565b6040805180820190915260008082526020820152610de183836114aa565b9392505050565b610df0610e38565b6001600160a01b038116610e1a57604051631e4fbdf760e01b8152600060048201526024016107b8565b610e238161127e565b50565b610e3383838360016114e0565b505050565b6005546001600160a01b036101009091041633146107505760405163118cdaa760e01b81523360048201526024016107b8565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610ee45781811015610ed557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b8565b610ee4848484840360006114e0565b50505050565b6001600160a01b038316610f1457604051634b637e8f60e11b8152600060048201526024016107b8565b6001600160a01b038216610f3e5760405163ec442f0560e01b8152600060048201526024016107b8565b610e338383836115b5565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fa257507f000000000000000000000000000000000000000000000000000000000000000046145b15610fcc57507f000000000000000000000000000000000000000000000000000000000000000090565b6106f0604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008061107f610aee565b90508065ffffffffffff1683106110ba57604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044016107b8565b610de1836118f0565b8154600090818160058111156111225760006110de84611927565b6110e89085612877565b60008881526020902090915081015465ffffffffffff908116908716101561111257809150611120565b61111d816001612864565b92505b505b600061113087878585611a80565b9050801561116b5761115587611147600184612877565b600091825260209091200190565b54600160301b90046001600160d01b031661116e565b60005b979650505050505050565b611181611ae2565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61099c8282611b05565b610e2333826112d8565b60006106f0436118f0565b6001600160a01b0382811660008181526009602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e33818361125786611b3b565b611b59565b6001600160a01b0381166000908152600a602052604081205461065d90611cc5565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661130257604051634b637e8f60e11b8152600060048201526024016107b8565b61099c826000836115b5565b6001600160a01b03811660009081526008602052604081205461065d565b611334611cf6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111ae3390565b60606106f07f00000000000000000000000000000000000000000000000000000000000000006006611d1a565b60606106f07f00000000000000000000000000000000000000000000000000000000000000006007611d1a565b805460009080156113f3576113dd83611147600184612877565b54600160301b90046001600160d01b0316610de1565b60009392505050565b600061065d611409610f49565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061143b88888888611dc5565b92509250925061144b8282611e94565b50909695505050505050565b6001600160a01b0382166000908152600860205260409020805460018101909155818114610e33576040516301d4b62360e61b81526001600160a01b0384166004820152602481018290526044016107b8565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020610de19083611f4d565b6001600160a01b03841661150a5760405163e602df0560e01b8152600060048201526024016107b8565b6001600160a01b03831661153457604051634a1406b160e11b8152600060048201526024016107b8565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ee457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115a791815260200190565b60405180910390a350505050565b60055460ff16156116085760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e207472616e73666572207768696c6520706175736564000000000060448201526064016107b8565b816001600160a01b0316836001600160a01b0316036116695760405162461bcd60e51b815260206004820152601a60248201527f53656c66207472616e7366657273206e6f7420616c6c6f77656400000000000060448201526064016107b8565b6001600160a01b0383161580159061168957506001600160a01b03821615155b156118e557600081116116de5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016107b8565b600e5460ff161561173b57600d5481111561173b5760405162461bcd60e51b815260206004820152601b60248201527f45786365656473206d6178207472616e7366657220616d6f756e74000000000060448201526064016107b8565b6001600160a01b0383166000908152602081905260409020548181101561179b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107b8565b670de0b6b3a76400006117ae8383612877565b10156117fc5760405162461bcd60e51b815260206004820181905260248201527f42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d60448201526064016107b8565b6001600160a01b038316600090815260208190526040902054801561187857670de0b6b3a76400008110156118735760405162461bcd60e51b815260206004820152601960248201527f526563697069656e742062616c616e636520746f6f206c6f770000000000000060448201526064016107b8565b6118e2565b670de0b6b3a76400008310156118e25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e7420746f6f206c6f7720666f72206e6577206044820152681c9958da5c1a595b9d60ba1b60648201526084016107b8565b50505b610e33838383611fbd565b600065ffffffffffff821115611923576040516306dfcc6560e41b815260306004820152602481018390526044016107b8565b5090565b600060018211611935575090565b816001600160801b821061194e5760809190911c9060401b5b6801000000000000000082106119695760409190911c9060201b5b64010000000082106119805760209190911c9060101b5b6201000082106119955760109190911c9060081b5b61010082106119a95760089190911c9060041b5b601082106119bc5760049190911c9060021b5b600482106119c85760011b5b600302600190811c908185816119e0576119e0612998565b048201901c905060018185816119f8576119f8612998565b048201901c90506001818581611a1057611a10612998565b048201901c90506001818581611a2857611a28612998565b048201901c90506001818581611a4057611a40612998565b048201901c90506001818581611a5857611a58612998565b048201901c9050611a77818581611a7157611a71612998565b04821190565b90039392505050565b60005b81831015611ada576000611a978484612024565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff161115611ac657809250611ad4565b611ad1816001612864565b93505b50611a83565b509392505050565b60055460ff1661075057604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b038216611b2f5760405163ec442f0560e01b8152600060048201526024016107b8565b61099c600083836115b5565b6001600160a01b03811660009081526020819052604081205461065d565b816001600160a01b0316836001600160a01b031614158015611b7b5750600081115b15610e33576001600160a01b03831615611c23576001600160a01b0383166000908152600a602052604081208190611bbe9061203f611bb98661204b565b61207f565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c18929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610e33576001600160a01b0382166000908152600a602052604081208190611c5c906120b8611bb98661204b565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611cb6929190918252602082015260400190565b60405180910390a25050505050565b600063ffffffff821115611923576040516306dfcc6560e41b815260206004820152602481018390526044016107b8565b60055460ff16156107505760405163d93c066560e01b815260040160405180910390fd5b606060ff8314611d3457611d2d836120c4565b905061065d565b818054611d4090612814565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6c90612814565b8015611db95780601f10611d8e57610100808354040283529160200191611db9565b820191906000526020600020905b815481529060010190602001808311611d9c57829003601f168201915b5050505050905061065d565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611e005750600091506003905082611e8a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611e54573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e8057506000925060019150829050611e8a565b9250600091508190505b9450945094915050565b6000826003811115611ea857611ea86129ae565b03611eb1575050565b6001826003811115611ec557611ec56129ae565b03611ee35760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ef757611ef76129ae565b03611f185760405163fce698f760e01b8152600481018290526024016107b8565b6003826003811115611f2c57611f2c6129ae565b0361099c576040516335e2f38360e21b8152600481018290526024016107b8565b6040805180820190915260008082526020820152826000018263ffffffff1681548110611f7c57611f7c6129c4565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b611fc8838383612103565b6001600160a01b038316612019576000611fe160025490565b90506001600160d01b038082111561201657604051630e58ae9360e11b815260048101839052602481018290526044016107b8565b50505b610e33838383612116565b600061203360028484186129da565b610de190848416612864565b6000610de182846129fc565b60006001600160d01b03821115611923576040516306dfcc6560e41b815260d06004820152602481018390526044016107b8565b6000806120ab61208d610aee565b6120a3612099886113c3565b868863ffffffff16565b87919061218c565b915091505b935093915050565b6000610de18284612a23565b606060006120d18361219a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b61210b611cf6565b610e338383836121c2565b6001600160a01b03831661213857612135600b6120b8611bb98461204b565b50505b6001600160a01b03821661215a57612157600b61203f611bb98461204b565b50505b6001600160a01b03838116600090815260096020526040808220548584168352912054610e3392918216911683611b59565b6000806120ab8585856122ec565b600060ff8216601f81111561065d57604051632cd44ac360e21b815260040160405180910390fd5b6001600160a01b0383166121ed5780600260008282546121e29190612864565b9091555061225f9050565b6001600160a01b038316600090815260208190526040902054818110156122405760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107b8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661227b5760028054829003905561229a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122df91815260200190565b60405180910390a3505050565b8254600090819080156123e557600061230a87611147600185612877565b805490915065ffffffffffff80821691600160301b90046001600160d01b031690881682111561234d57604051632520601d60e01b815260040160405180910390fd5b8765ffffffffffff168265ffffffffffff160361238657825465ffffffffffff16600160301b6001600160d01b038916021783556123d7565b6040805180820190915265ffffffffffff808a1682526001600160d01b03808a1660208085019182528d54600181018f5560008f81529190912094519151909216600160301b029216919091179101555b94508593506120b092505050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b0291909316179201919091559050816120b0565b6000815180845260005b818110156124665760208185018101518683018201520161244a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610de16020830184612440565b80356001600160a01b03811681146124b057600080fd5b919050565b600080604083850312156124c857600080fd5b6124d183612499565b946020939093013593505050565b6000602082840312156124f157600080fd5b81358015158114610de157600080fd5b60008060006060848603121561251657600080fd5b61251f84612499565b925061252d60208501612499565b9150604084013590509250925092565b60006020828403121561254f57600080fd5b5035919050565b60006020828403121561256857600080fd5b610de182612499565b60ff60f81b881681526000602060e08184015261259160e084018a612440565b83810360408501526125a3818a612440565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156125f5578351835292840192918401916001016125d9565b50909c9b505050505050505050505050565b803560ff811681146124b057600080fd5b60008060008060008060c0878903121561263157600080fd5b61263a87612499565b9550602087013594506040870135935061265660608801612607565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561268b57600080fd5b61269488612499565b96506126a260208901612499565b955060408801359450606088013593506126be60808901612607565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156126ed57600080fd5b6126f683612499565b915061270460208401612499565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561273557600080fd5b813567ffffffffffffffff8082111561274d57600080fd5b818401915084601f83011261276157600080fd5b8135818111156127735761277361270d565b604051601f8201601f19908116603f0116810190838211818310171561279b5761279b61270d565b816040528281528760208487010111156127b457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156127e757600080fd5b6127f083612499565b9150602083013563ffffffff8116811461280957600080fd5b809150509250929050565b600181811c9082168061282857607f821691505b60208210810361284857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561065d5761065d61284e565b8181038181111561065d5761065d61284e565b601f821115610e3357600081815260208120601f850160051c810160208610156128b15750805b601f850160051c820191505b818110156128d0578281556001016128bd565b505050505050565b815167ffffffffffffffff8111156128f2576128f261270d565b612906816129008454612814565b8461288a565b602080601f83116001811461293b57600084156129235750858301515b600019600386901b1c1916600185901b1785556128d0565b600085815260208120601f198616915b8281101561296a5788860151825594840194600190910190840161294b565b50858210156129885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000826129f757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160d01b03828116828216039080821115612a1c57612a1c61284e565b5092915050565b6001600160d01b03818116838216019080821115612a1c57612a1c61284e56fea264697066735822122005bbca7fb1da3b0d11549a657b8ef1e241f943afba40caf508adb37bb364f83664736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3093 CODESIZE SUB DUP1 PUSH3 0x3093 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x356 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP1 DUP2 SWAP1 CALLER DUP3 DUP7 DUP2 DUP2 PUSH1 0x3 PUSH3 0x64 DUP4 DUP3 PUSH3 0x476 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x73 DUP3 DUP3 PUSH3 0x476 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBD DUP2 PUSH3 0x1B3 JUMP JUMPDEST POP PUSH3 0xCB DUP3 PUSH1 0x6 PUSH3 0x20D JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xDC DUP2 PUSH1 0x7 PUSH3 0x20D JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x16A PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH1 0xC PUSH3 0x182 DUP3 DUP3 PUSH3 0x476 JUMP JUMPDEST POP PUSH3 0x19A PUSH1 0x64 PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x542 JUMP JUMPDEST PUSH1 0xD SSTORE POP POP PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH3 0x5BF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x22D JUMPI PUSH3 0x225 DUP4 PUSH3 0x246 JUMP JUMPDEST SWAP1 POP PUSH3 0x240 JUMP JUMPDEST DUP2 PUSH3 0x23A DUP5 DUP3 PUSH3 0x476 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x274 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA9 SWAP2 SWAP1 PUSH3 0x565 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x281 DUP3 PUSH3 0x59A JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x2A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2F4 JUMPI PUSH3 0x2F4 PUSH3 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x31F JUMPI PUSH3 0x31F PUSH3 0x289 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x34C DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x29F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x392 DUP8 DUP4 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3B7 DUP8 DUP4 DUP9 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3DD DUP7 DUP3 DUP8 ADD PUSH3 0x2C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x41D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x471 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x44C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x46D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x458 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x492 JUMPI PUSH3 0x492 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x4AA DUP2 PUSH3 0x4A3 DUP5 SLOAD PUSH3 0x3E7 JUMP JUMPDEST DUP5 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4E2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4C9 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x46D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x513 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x4F2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x532 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x560 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x586 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x29F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x41D JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2A79 PUSH3 0x61A PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x139D ADD MSTORE PUSH1 0x0 PUSH2 0x1370 ADD MSTORE PUSH1 0x0 PUSH2 0x1023 ADD MSTORE PUSH1 0x0 PUSH2 0xFFB ADD MSTORE PUSH1 0x0 PUSH2 0xF56 ADD MSTORE PUSH1 0x0 PUSH2 0xF80 ADD MSTORE PUSH1 0x0 PUSH2 0xFAA ADD MSTORE PUSH2 0x2A79 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xA9E75723 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8BF55409 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3C130D90 EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xD659EC5 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A7 PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x27E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x27E JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x43F PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0x2A7 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37A JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x2670 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x560 CALLDATASIZE PUSH1 0x4 PUSH2 0x2723 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x578 PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x614 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x622 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66B PUSH2 0xE38 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP1 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x35B05563DB5DD3045C31A9B46A385D3E34A1B6AD51CC00C23562ECCB5619002A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6D0 DUP6 DUP3 DUP6 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x6DB DUP6 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 PUSH2 0x703 DUP4 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH2 0x748 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x1179 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x75A PUSH2 0xE38 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x76F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST GT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP3 DUP3 PUSH2 0x11CB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB9144C96C86541F6FA89C9F2F02495CCCF4B08CD6643E26D34EE00AA586558A8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x806 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x890 DUP4 DUP4 PUSH2 0x2877 JUMP JUMPDEST LT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E636520776F756C642066616C6C2062656C6F77206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x8E7 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 SWAP1 PUSH1 0x20 ADD PUSH2 0x806 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x923 PUSH2 0x11DF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0xAEE JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH2 0x99C DUP2 DUP4 PUSH2 0x11EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH1 0x0 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x9C8 DUP3 CALLER DUP4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x9E5 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA01 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1E7D225CB161C2F834852CD521D7EE05358AF80025A0E937483C51E42BFC13DE SWAP2 ADD PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADF PUSH2 0xAD7 DUP4 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0xB SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xADF SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBD4 SWAP1 PUSH2 0xBCC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13FC JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP PUSH2 0xBE0 DUP2 DUP8 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0xBEA DUP2 DUP9 PUSH2 0x11EA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xC64 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCBF DUP3 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCCF DUP3 DUP8 DUP8 DUP8 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xD21 DUP11 DUP11 DUP11 PUSH2 0xE26 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5552492063616E6E6F7420626520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xC PUSH2 0xD88 DUP3 DUP3 PUSH2 0x28D8 JUMP JUMPDEST POP PUSH32 0x5BB111C9B2AD41C6CC1754CDBEE2CC303B7BECB89D29D2D5F91165FCC0B0A49D DUP2 PUSH1 0x40 MLOAD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDE1 DUP4 DUP4 PUSH2 0x14AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDF0 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xE23 DUP2 PUSH2 0x127E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xEE4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xEE4 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xFA2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xFCC JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6F0 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107F PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xDE1 DUP4 PUSH2 0x18F0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 PUSH2 0x10DE DUP5 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x10E8 SWAP1 DUP6 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x1112 JUMPI DUP1 SWAP2 POP PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x111D DUP2 PUSH1 0x1 PUSH2 0x2864 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1130 DUP8 DUP8 DUP6 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x116B JUMPI PUSH2 0x1155 DUP8 PUSH2 0x1147 PUSH1 0x1 DUP5 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1181 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0xE23 CALLER DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 NUMBER PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP4 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xE33 DUP2 DUP4 PUSH2 0x1257 DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1302 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x99C DUP3 PUSH1 0x0 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1334 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x11AE CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6F0 PUSH32 0x0 PUSH1 0x6 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6F0 PUSH32 0x0 PUSH1 0x7 PUSH2 0x1D1A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13DD DUP4 PUSH2 0x1147 PUSH1 0x1 DUP5 PUSH2 0x2877 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D PUSH2 0x1409 PUSH2 0xF49 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x143B DUP9 DUP9 DUP9 DUP9 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x144B DUP3 DUP3 PUSH2 0x1E94 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP2 DUP2 EQ PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xDE1 SWAP1 DUP4 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572207768696C65207061757365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C66207472616E7366657273206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP2 GT PUSH2 0x16DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x173B JUMPI PUSH1 0xD SLOAD DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x179B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x17AE DUP4 DUP4 PUSH2 0x2877 JUMP JUMPDEST LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E636520776F756C642066616C6C2062656C6F77206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1878 JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E742062616C616E636520746F6F206C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 LT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420746F6F206C6F7720666F72206E657720 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C9958DA5C1A595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1935 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x194E JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 SHL JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1969 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 SHL JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1980 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 SHL JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1995 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 SHL JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19A9 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 SHL JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19BC JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SHL JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19C8 JUMPI PUSH1 0x1 SHL JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SWAP1 DUP2 SHR SWAP1 DUP2 DUP6 DUP2 PUSH2 0x19E0 JUMPI PUSH2 0x19E0 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19F8 JUMPI PUSH2 0x19F8 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A28 JUMPI PUSH2 0x1A28 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A40 JUMPI PUSH2 0x1A40 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A58 JUMPI PUSH2 0x1A58 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A77 DUP2 DUP6 DUP2 PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 PUSH2 0x1A97 DUP5 DUP5 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1AC6 JUMPI DUP1 SWAP3 POP PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH1 0x1 PUSH2 0x2864 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1A83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B2F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x99C PUSH1 0x0 DUP4 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xE33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1C23 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1BBE SWAP1 PUSH2 0x203F PUSH2 0x1BB9 DUP7 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x207F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C18 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1C5C SWAP1 PUSH2 0x20B8 PUSH2 0x1BB9 DUP7 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CB6 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1D34 JUMPI PUSH2 0x1D2D DUP4 PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x65D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1D40 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6C SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x65D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1E00 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E80 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1E8A JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA8 JUMPI PUSH2 0x1EA8 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1EB1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC5 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1EE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF7 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1F18 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F2C JUMPI PUSH2 0x1F2C PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1F7C JUMPI PUSH2 0x1F7C PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FC8 DUP4 DUP4 DUP4 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2019 JUMPI PUSH1 0x0 PUSH2 0x1FE1 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2033 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x29DA JUMP JUMPDEST PUSH2 0xDE1 SWAP1 DUP5 DUP5 AND PUSH2 0x2864 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 DUP5 PUSH2 0x29FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20AB PUSH2 0x208D PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x20A3 PUSH2 0x2099 DUP9 PUSH2 0x13C3 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 DUP5 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x20D1 DUP4 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x210B PUSH2 0x1CF6 JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2138 JUMPI PUSH2 0x2135 PUSH1 0xB PUSH2 0x20B8 PUSH2 0x1BB9 DUP5 PUSH2 0x204B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x215A JUMPI PUSH2 0x2157 PUSH1 0xB PUSH2 0x203F PUSH2 0x1BB9 DUP5 PUSH2 0x204B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xE33 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20AB DUP6 DUP6 DUP6 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x21ED JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21E2 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x225F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x227B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x229A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x22DF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x23E5 JUMPI PUSH1 0x0 PUSH2 0x230A DUP8 PUSH2 0x1147 PUSH1 0x1 DUP6 PUSH2 0x2877 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 DUP9 AND DUP3 GT ISZERO PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2386 JUMPI DUP3 SLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP10 AND MUL OR DUP4 SSTORE PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP11 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP11 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP14 SLOAD PUSH1 0x1 DUP2 ADD DUP16 SSTORE PUSH1 0x0 DUP16 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST SWAP5 POP DUP6 SWAP4 POP PUSH2 0x20B0 SWAP3 POP POP POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x30 SHL MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x244A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2440 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D1 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251F DUP5 PUSH2 0x2499 JUMP JUMPDEST SWAP3 POP PUSH2 0x252D PUSH1 0x20 DUP6 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE1 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x2591 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x2440 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x25A3 DUP2 DUP11 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25F5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x25D9 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x263A DUP8 PUSH2 0x2499 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2656 PUSH1 0x60 DUP9 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x268B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2694 DUP9 PUSH2 0x2499 JUMP JUMPDEST SWAP7 POP PUSH2 0x26A2 PUSH1 0x20 DUP10 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x26BE PUSH1 0x80 DUP10 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F6 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH2 0x2704 PUSH1 0x20 DUP5 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x274D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2773 JUMPI PUSH2 0x2773 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x279B JUMPI PUSH2 0x279B PUSH2 0x270D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F0 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2828 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2848 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x65D JUMPI PUSH2 0x65D PUSH2 0x284E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x65D JUMPI PUSH2 0x65D PUSH2 0x284E JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x28B1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28D0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28BD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28F2 JUMPI PUSH2 0x28F2 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x2906 DUP2 PUSH2 0x2900 DUP5 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP5 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x293B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2923 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x294B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2988 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2A1C JUMPI PUSH2 0x2A1C PUSH2 0x284E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2A1C JUMPI PUSH2 0x2A1C PUSH2 0x284E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xBB 0xCA PUSH32 0xB1DA3B0D11549A657B8EF1E241F943AFBA40CAF508ADB37BB364F83664736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"445:5140:31:-:0;;;1212:385;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3328:431:23;;;;;;;;;;;;-1:-1:-1;;;3328:431:23;;;;1365:4:31;;;;1379:10;1365:4;1345:6;1365:4;1345:6;1667:5:7;:13;1365:4:31;1667:5:7;:13;:::i;:::-;-1:-1:-1;1690:7:7;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;1231:7:18;:15;;-1:-1:-1;;1231:15:18;;;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4611:51:32;4584:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:23;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;5154:25:32;5195:18;;;5188:34;;;;5238:18;;;5231:34;4255:13:23;5281:18:32;;;5274:34;4278:4:23;5324:19:32;;;5317:61;4168:7:23;;5126:19:32;;4204:80:23;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:23;3725:27;;-1:-1:-1;1402:17:31::3;:31;1422:11:::0;1402:17;:31:::3;:::i;:::-;-1:-1:-1::0;1464:16:31::3;1477:3;649:16;1464;:::i;:::-;1444:17;:36:::0;-1:-1:-1;;1536:18:31::3;:25:::0;;-1:-1:-1;;1536:25:31::3;1557:4;1536:25;::::0;;-1:-1:-1;445:5140:31;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2887:340:19:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:19;;-1:-1:-1;3006:215:19;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:19;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:19:o;14:127:32:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:32;370:16;;363:27;146:250::o;401:699::-;455:5;508:3;501:4;493:6;489:17;485:27;475:55;;526:1;523;516:12;475:55;549:13;;-1:-1:-1;;;;;611:10:32;;;608:36;;;624:18;;:::i;:::-;699:2;693:9;667:2;753:13;;-1:-1:-1;;749:22:32;;;773:2;745:31;741:40;729:53;;;797:18;;;817:22;;;794:46;791:72;;;843:18;;:::i;:::-;883:10;879:2;872:22;918:2;910:6;903:18;964:3;957:4;952:2;944:6;940:15;936:26;933:35;930:55;;;981:1;978;971:12;930:55;994:76;1067:2;1060:4;1052:6;1048:17;1041:4;1033:6;1029:17;994:76;:::i;:::-;1088:6;401:699;-1:-1:-1;;;;;;401:699:32:o;1105:766::-;1223:6;1231;1239;1292:2;1280:9;1271:7;1267:23;1263:32;1260:52;;;1308:1;1305;1298:12;1260:52;1335:16;;-1:-1:-1;;;;;1400:14:32;;;1397:34;;;1427:1;1424;1417:12;1397:34;1450:61;1503:7;1494:6;1483:9;1479:22;1450:61;:::i;:::-;1440:71;;1557:2;1546:9;1542:18;1536:25;1520:41;;1586:2;1576:8;1573:16;1570:36;;;1602:1;1599;1592:12;1570:36;1625:63;1680:7;1669:8;1658:9;1654:24;1625:63;:::i;:::-;1615:73;;1734:2;1723:9;1719:18;1713:25;1697:41;;1763:2;1753:8;1750:16;1747:36;;;1779:1;1776;1769:12;1747:36;;1802:63;1857:7;1846:8;1835:9;1831:24;1802:63;:::i;:::-;1792:73;;;1105:766;;;;;:::o;1876:380::-;1955:1;1951:12;;;;1998;;;2019:61;;2073:4;2065:6;2061:17;2051:27;;2019:61;2126:2;2118:6;2115:14;2095:18;2092:38;2089:161;;2172:10;2167:3;2163:20;2160:1;2153:31;2207:4;2204:1;2197:15;2235:4;2232:1;2225:15;2089:161;;1876:380;;;:::o;2387:545::-;2489:2;2484:3;2481:11;2478:448;;;2525:1;2550:5;2546:2;2539:17;2595:4;2591:2;2581:19;2665:2;2653:10;2649:19;2646:1;2642:27;2636:4;2632:38;2701:4;2689:10;2686:20;2683:47;;;-1:-1:-1;2724:4:32;2683:47;2779:2;2774:3;2770:12;2767:1;2763:20;2757:4;2753:31;2743:41;;2834:82;2852:2;2845:5;2842:13;2834:82;;;2897:17;;;2878:1;2867:13;2834:82;;;2838:3;;;2478:448;2387:545;;;:::o;3108:1352::-;3228:10;;-1:-1:-1;;;;;3250:30:32;;3247:56;;;3283:18;;:::i;:::-;3312:97;3402:6;3362:38;3394:4;3388:11;3362:38;:::i;:::-;3356:4;3312:97;:::i;:::-;3464:4;;3528:2;3517:14;;3545:1;3540:663;;;;4247:1;4264:6;4261:89;;;-1:-1:-1;4316:19:32;;;4310:26;4261:89;-1:-1:-1;;3065:1:32;3061:11;;;3057:24;3053:29;3043:40;3089:1;3085:11;;;3040:57;4363:81;;3510:944;;3540:663;2334:1;2327:14;;;2371:4;2358:18;;-1:-1:-1;;3576:20:32;;;3694:236;3708:7;3705:1;3702:14;3694:236;;;3797:19;;;3791:26;3776:42;;3889:27;;;;3857:1;3845:14;;;;3724:19;;3694:236;;;3698:3;3958:6;3949:7;3946:19;3943:201;;;4019:19;;;4013:26;-1:-1:-1;;4102:1:32;4098:14;;;4114:3;4094:24;4090:37;4086:42;4071:58;4056:74;;3943:201;-1:-1:-1;;;;;4190:1:32;4174:14;;;4170:22;4157:36;;-1:-1:-1;3108:1352:32:o;4673:217::-;4713:1;4739;4729:132;;4783:10;4778:3;4774:20;4771:1;4764:31;4818:4;4815:1;4808:15;4846:4;4843:1;4836:15;4729:132;-1:-1:-1;4875:9:32;;4673:217::o;5389:396::-;5538:2;5527:9;5520:21;5501:4;5570:6;5564:13;5613:6;5608:2;5597:9;5593:18;5586:34;5629:79;5701:6;5696:2;5685:9;5681:18;5676:2;5668:6;5664:15;5629:79;:::i;:::-;5769:2;5748:15;-1:-1:-1;;5744:29:32;5729:45;;;;5776:2;5725:54;;5389:396;-1:-1:-1;;5389:396:32:o;5790:297::-;5908:12;;5955:4;5944:16;;;5938:23;;5908:12;5973:16;;5970:111;;;-1:-1:-1;;6047:4:32;6043:17;;;;6040:1;6036:25;6032:38;6021:50;;5790:297;-1:-1:-1;5790:297:32:o;:::-;445:5140:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_319":{"entryPoint":2329,"id":319,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_1787":{"entryPoint":1766,"id":1787,"parameterSlots":0,"returnSlots":1},"@MAX_SUPPLY_9881":{"entryPoint":null,"id":9881,"parameterSlots":0,"returnSlots":0},"@MIN_BALANCE_9888":{"entryPoint":null,"id":9888,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_4352":{"entryPoint":4969,"id":4352,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4364":{"entryPoint":5014,"id":4364,"parameterSlots":0,"returnSlots":1},"@_add_750":{"entryPoint":8376,"id":750,"parameterSlots":2,"returnSlots":1},"@_approve_1367":{"entryPoint":3622,"id":1367,"parameterSlots":3,"returnSlots":0},"@_approve_1427":{"entryPoint":5344,"id":1427,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4282":{"entryPoint":null,"id":4282,"parameterSlots":0,"returnSlots":1},"@_burn_1349":{"entryPoint":4824,"id":1349,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3640,"id":84,"parameterSlots":0,"returnSlots":0},"@_checkpoints_701":{"entryPoint":5290,"id":701,"parameterSlots":2,"returnSlots":1},"@_delegate_531":{"entryPoint":4586,"id":531,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4261":{"entryPoint":3913,"id":4261,"parameterSlots":0,"returnSlots":1},"@_getVotingUnits_1889":{"entryPoint":6971,"id":1889,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_4298":{"entryPoint":5116,"id":4298,"parameterSlots":1,"returnSlots":1},"@_insert_8891":{"entryPoint":8940,"id":8891,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1821":{"entryPoint":null,"id":1821,"parameterSlots":0,"returnSlots":1},"@_mint_1316":{"entryPoint":6917,"id":1316,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_664":{"entryPoint":7001,"id":664,"parameterSlots":3,"returnSlots":0},"@_msgSender_1994":{"entryPoint":null,"id":1994,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_682":{"entryPoint":4700,"id":682,"parameterSlots":1,"returnSlots":1},"@_pause_2232":{"entryPoint":4908,"id":2232,"parameterSlots":0,"returnSlots":0},"@_push_736":{"entryPoint":8319,"id":736,"parameterSlots":3,"returnSlots":2},"@_requireNotPaused_2203":{"entryPoint":7414,"id":2203,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2216":{"entryPoint":6882,"id":2216,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1475":{"entryPoint":3691,"id":1475,"parameterSlots":3,"returnSlots":0},"@_subtract_764":{"entryPoint":8255,"id":764,"parameterSlots":2,"returnSlots":1},"@_throwError_4137":{"entryPoint":7828,"id":4137,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4734,"id":146,"parameterSlots":1,"returnSlots":0},"@_transferVotingUnits_586":{"entryPoint":8470,"id":586,"parameterSlots":3,"returnSlots":0},"@_transfer_1206":{"entryPoint":3818,"id":1206,"parameterSlots":3,"returnSlots":0},"@_unpause_2248":{"entryPoint":4473,"id":2248,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_9010":{"entryPoint":null,"id":9010,"parameterSlots":2,"returnSlots":1},"@_update_10258":{"entryPoint":5557,"id":10258,"parameterSlots":3,"returnSlots":0},"@_update_1283":{"entryPoint":8642,"id":1283,"parameterSlots":3,"returnSlots":0},"@_update_1633":{"entryPoint":8451,"id":1633,"parameterSlots":3,"returnSlots":0},"@_update_1875":{"entryPoint":8125,"id":1875,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_8943":{"entryPoint":6784,"id":8943,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_2079":{"entryPoint":5207,"id":2079,"parameterSlots":2,"returnSlots":0},"@_useNonce_2054":{"entryPoint":null,"id":2054,"parameterSlots":1,"returnSlots":1},"@_validateTimepoint_347":{"entryPoint":4212,"id":347,"parameterSlots":1,"returnSlots":1},"@allowance_1103":{"entryPoint":null,"id":1103,"parameterSlots":2,"returnSlots":1},"@approve_1127":{"entryPoint":1609,"id":1127,"parameterSlots":2,"returnSlots":1},"@at_8797":{"entryPoint":8013,"id":8797,"parameterSlots":2,"returnSlots":1},"@average_4697":{"entryPoint":8228,"id":4697,"parameterSlots":2,"returnSlots":1},"@balanceOf_1062":{"entryPoint":null,"id":1062,"parameterSlots":1,"returnSlots":1},"@blockNumber_9570":{"entryPoint":4575,"id":9570,"parameterSlots":0,"returnSlots":1},"@burnFrom_1599":{"entryPoint":2493,"id":1599,"parameterSlots":2,"returnSlots":0},"@burn_10034":{"entryPoint":2066,"id":10034,"parameterSlots":1,"returnSlots":0},"@burn_1578":{"entryPoint":4565,"id":1578,"parameterSlots":1,"returnSlots":0},"@byteLength_2367":{"entryPoint":8602,"id":2367,"parameterSlots":1,"returnSlots":1},"@checkpoints_1919":{"entryPoint":3523,"id":1919,"parameterSlots":2,"returnSlots":1},"@clock_299":{"entryPoint":2798,"id":299,"parameterSlots":0,"returnSlots":1},"@decimals_1040":{"entryPoint":null,"id":1040,"parameterSlots":0,"returnSlots":1},"@delegateBySig_496":{"entryPoint":2870,"id":496,"parameterSlots":6,"returnSlots":0},"@delegate_439":{"entryPoint":2449,"id":439,"parameterSlots":1,"returnSlots":0},"@delegates_422":{"entryPoint":null,"id":422,"parameterSlots":1,"returnSlots":1},"@eip712Domain_4340":{"entryPoint":2541,"id":4340,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_398":{"entryPoint":2761,"id":398,"parameterSlots":1,"returnSlots":1},"@getPastVotes_382":{"entryPoint":1781,"id":382,"parameterSlots":2,"returnSlots":1},"@getVotes_362":{"entryPoint":2823,"id":362,"parameterSlots":1,"returnSlots":1},"@latest_8716":{"entryPoint":5059,"id":8716,"parameterSlots":1,"returnSlots":1},"@length_8779":{"entryPoint":null,"id":8779,"parameterSlots":1,"returnSlots":1},"@maxTransferAmount_9890":{"entryPoint":null,"id":9890,"parameterSlots":0,"returnSlots":0},"@mint_9839":{"entryPoint":4555,"id":9839,"parameterSlots":2,"returnSlots":0},"@mint_9989":{"entryPoint":1874,"id":9989,"parameterSlots":2,"returnSlots":0},"@name_1022":{"entryPoint":1463,"id":1022,"parameterSlots":0,"returnSlots":1},"@nonces_10274":{"entryPoint":2514,"id":10274,"parameterSlots":1,"returnSlots":1},"@nonces_1777":{"entryPoint":4878,"id":1777,"parameterSlots":1,"returnSlots":1},"@nonces_2039":{"entryPoint":null,"id":2039,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1902":{"entryPoint":2464,"id":1902,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_10123":{"entryPoint":2525,"id":10123,"parameterSlots":0,"returnSlots":0},"@paused_2191":{"entryPoint":null,"id":2191,"parameterSlots":0,"returnSlots":1},"@permit_1760":{"entryPoint":3059,"id":1760,"parameterSlots":7,"returnSlots":0},"@push_8519":{"entryPoint":8588,"id":8519,"parameterSlots":3,"returnSlots":2},"@recover_4088":{"entryPoint":5161,"id":4088,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2475,"id":98,"parameterSlots":0,"returnSlots":0},"@setMaxTransferAmount_10063":{"entryPoint":2611,"id":10063,"parameterSlots":1,"returnSlots":0},"@setTokenURI_10113":{"entryPoint":3373,"id":10113,"parameterSlots":1,"returnSlots":0},"@setTransferRestriction_10085":{"entryPoint":1635,"id":10085,"parameterSlots":1,"returnSlots":0},"@sqrt_5424":{"entryPoint":6439,"id":5424,"parameterSlots":1,"returnSlots":1},"@symbol_1031":{"entryPoint":2808,"id":1031,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2434":{"entryPoint":7450,"id":2434,"parameterSlots":2,"returnSlots":1},"@toString_2335":{"entryPoint":8388,"id":2335,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4438":{"entryPoint":null,"id":4438,"parameterSlots":2,"returnSlots":1},"@toUint208_6240":{"entryPoint":8267,"id":6240,"parameterSlots":1,"returnSlots":1},"@toUint32_6856":{"entryPoint":7365,"id":6856,"parameterSlots":1,"returnSlots":1},"@toUint48_6800":{"entryPoint":6384,"id":6800,"parameterSlots":1,"returnSlots":1},"@toUint_7809":{"entryPoint":null,"id":7809,"parameterSlots":1,"returnSlots":1},"@tokenURI_10142":{"entryPoint":1841,"id":10142,"parameterSlots":0,"returnSlots":1},"@totalSupply_1049":{"entryPoint":null,"id":1049,"parameterSlots":0,"returnSlots":1},"@transferFrom_1159":{"entryPoint":1730,"id":1159,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3560,"id":126,"parameterSlots":1,"returnSlots":0},"@transferRestricted_9892":{"entryPoint":null,"id":9892,"parameterSlots":0,"returnSlots":0},"@transfer_1086":{"entryPoint":2856,"id":1086,"parameterSlots":2,"returnSlots":1},"@tryRecover_4052":{"entryPoint":7621,"id":4052,"parameterSlots":4,"returnSlots":3},"@unpause_10133":{"entryPoint":1856,"id":10133,"parameterSlots":0,"returnSlots":0},"@upperLookupRecent_8686":{"entryPoint":4291,"id":8686,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":9369,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9946,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9473,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9840,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9397,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9752,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":10196,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":9439,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":10019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":9735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":9280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9585,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3dcb706470115d72d3ddb9880961be9c092a756fa5cced7fd4467d3947b3e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b7b0f9fc974ffc98f5808ea83c662bf1a37c88eb737f04ede53b5ef967abfe48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c289beb9856767723ca1e73e75edd7897935313ece134ee5027929d7aa7afb72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d76b7a151b722efa9e67380f3f9aa677ca7dd4339eb7f1adecb5f9fcf5582bfd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$8496_memory_ptr__to_t_struct$_Checkpoint208_$8496_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":10787,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10340,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10714,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":10748,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10359,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":10378,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10456,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10260,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10318,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10648,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10670,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10692,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9997,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20492:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:373:32","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:32"},"nodeType":"YulFunctionCall","src":"88:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:32","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:32"},"nodeType":"YulFunctionCall","src":"109:19:32"},"nodeType":"YulExpressionStatement","src":"109:19:32"},{"nodeType":"YulVariableDeclaration","src":"137:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:32","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:32","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:32"},"nodeType":"YulFunctionCall","src":"260:11:32"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:32"},"nodeType":"YulFunctionCall","src":"256:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:32"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:32"},"nodeType":"YulFunctionCall","src":"288:13:32"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:32"},"nodeType":"YulFunctionCall","src":"284:22:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:32"},"nodeType":"YulFunctionCall","src":"278:29:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:32"},"nodeType":"YulFunctionCall","src":"249:59:32"},"nodeType":"YulExpressionStatement","src":"249:59:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:32"},"nodeType":"YulFunctionCall","src":"164:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:32","statements":[{"nodeType":"YulAssignment","src":"180:17:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:32"},"nodeType":"YulFunctionCall","src":"185:12:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:32","statements":[]},"src":"156:162:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:32"},"nodeType":"YulFunctionCall","src":"338:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:32"},"nodeType":"YulFunctionCall","src":"334:27:32"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:32"},"nodeType":"YulFunctionCall","src":"327:38:32"},"nodeType":"YulExpressionStatement","src":"327:38:32"},{"nodeType":"YulAssignment","src":"374:57:32","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:32"},"nodeType":"YulFunctionCall","src":"398:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"415:3:32"},"nodeType":"YulFunctionCall","src":"415:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:32"},"nodeType":"YulFunctionCall","src":"394:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:32"},"nodeType":"YulFunctionCall","src":"385:39:32"},{"kind":"number","nodeType":"YulLiteral","src":"426:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:32"},"nodeType":"YulFunctionCall","src":"381:50:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:32"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:32","type":""}],"src":"14:423:32"},{"body":{"nodeType":"YulBlock","src":"563:99:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"573:6:32"},"nodeType":"YulFunctionCall","src":"573:21:32"},"nodeType":"YulExpressionStatement","src":"573:21:32"},{"nodeType":"YulAssignment","src":"603:53:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"629:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:32"},"nodeType":"YulFunctionCall","src":"637:18:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"611:17:32"},"nodeType":"YulFunctionCall","src":"611:45:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"603:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:32","type":""}],"src":"442:220:32"},{"body":{"nodeType":"YulBlock","src":"716:124:32","statements":[{"nodeType":"YulAssignment","src":"726:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"748:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"735:12:32"},"nodeType":"YulFunctionCall","src":"735:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:32"}]},{"body":{"nodeType":"YulBlock","src":"818:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:32"},"nodeType":"YulFunctionCall","src":"820:12:32"},"nodeType":"YulExpressionStatement","src":"820:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"777:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"788:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"803:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"808:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"799:3:32"},"nodeType":"YulFunctionCall","src":"799:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"812:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"795:3:32"},"nodeType":"YulFunctionCall","src":"795:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"784:3:32"},"nodeType":"YulFunctionCall","src":"784:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"774:2:32"},"nodeType":"YulFunctionCall","src":"774:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"767:6:32"},"nodeType":"YulFunctionCall","src":"767:50:32"},"nodeType":"YulIf","src":"764:70:32"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"695:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"706:5:32","type":""}],"src":"667:173:32"},{"body":{"nodeType":"YulBlock","src":"932:167:32","statements":[{"body":{"nodeType":"YulBlock","src":"978:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"987:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"990:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"980:6:32"},"nodeType":"YulFunctionCall","src":"980:12:32"},"nodeType":"YulExpressionStatement","src":"980:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"953:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"962:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"949:3:32"},"nodeType":"YulFunctionCall","src":"949:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"974:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"945:3:32"},"nodeType":"YulFunctionCall","src":"945:32:32"},"nodeType":"YulIf","src":"942:52:32"},{"nodeType":"YulAssignment","src":"1003:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1013:18:32"},"nodeType":"YulFunctionCall","src":"1013:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1003:6:32"}]},{"nodeType":"YulAssignment","src":"1051:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1089:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1074:3:32"},"nodeType":"YulFunctionCall","src":"1074:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1061:12:32"},"nodeType":"YulFunctionCall","src":"1061:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1051:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"890:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"901:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"913:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"921:6:32","type":""}],"src":"845:254:32"},{"body":{"nodeType":"YulBlock","src":"1199:92:32","statements":[{"nodeType":"YulAssignment","src":"1209:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1221:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1232:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1217:3:32"},"nodeType":"YulFunctionCall","src":"1217:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1209:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1251:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1269:6:32"},"nodeType":"YulFunctionCall","src":"1269:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1262:6:32"},"nodeType":"YulFunctionCall","src":"1262:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1244:6:32"},"nodeType":"YulFunctionCall","src":"1244:41:32"},"nodeType":"YulExpressionStatement","src":"1244:41:32"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1179:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1190:4:32","type":""}],"src":"1104:187:32"},{"body":{"nodeType":"YulBlock","src":"1363:206:32","statements":[{"body":{"nodeType":"YulBlock","src":"1409:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1418:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1421:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1411:6:32"},"nodeType":"YulFunctionCall","src":"1411:12:32"},"nodeType":"YulExpressionStatement","src":"1411:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1384:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1393:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1380:3:32"},"nodeType":"YulFunctionCall","src":"1380:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1405:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1376:3:32"},"nodeType":"YulFunctionCall","src":"1376:32:32"},"nodeType":"YulIf","src":"1373:52:32"},{"nodeType":"YulVariableDeclaration","src":"1434:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1460:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1447:12:32"},"nodeType":"YulFunctionCall","src":"1447:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1438:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1523:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1532:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1535:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1525:6:32"},"nodeType":"YulFunctionCall","src":"1525:12:32"},"nodeType":"YulExpressionStatement","src":"1525:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1492:5:32"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1513:5:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1506:6:32"},"nodeType":"YulFunctionCall","src":"1506:13:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1499:6:32"},"nodeType":"YulFunctionCall","src":"1499:21:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1489:2:32"},"nodeType":"YulFunctionCall","src":"1489:32:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1482:6:32"},"nodeType":"YulFunctionCall","src":"1482:40:32"},"nodeType":"YulIf","src":"1479:60:32"},{"nodeType":"YulAssignment","src":"1548:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1558:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1548:6:32"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1329:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1340:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1352:6:32","type":""}],"src":"1296:273:32"},{"body":{"nodeType":"YulBlock","src":"1675:76:32","statements":[{"nodeType":"YulAssignment","src":"1685:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1697:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1708:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:32"},"nodeType":"YulFunctionCall","src":"1693:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1685:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1727:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1738:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:32"},"nodeType":"YulFunctionCall","src":"1720:25:32"},"nodeType":"YulExpressionStatement","src":"1720:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1644:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1655:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1666:4:32","type":""}],"src":"1574:177:32"},{"body":{"nodeType":"YulBlock","src":"1860:224:32","statements":[{"body":{"nodeType":"YulBlock","src":"1906:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1915:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1918:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1908:6:32"},"nodeType":"YulFunctionCall","src":"1908:12:32"},"nodeType":"YulExpressionStatement","src":"1908:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1881:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1890:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1877:3:32"},"nodeType":"YulFunctionCall","src":"1877:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1902:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1873:3:32"},"nodeType":"YulFunctionCall","src":"1873:32:32"},"nodeType":"YulIf","src":"1870:52:32"},{"nodeType":"YulAssignment","src":"1931:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1960:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1941:18:32"},"nodeType":"YulFunctionCall","src":"1941:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1931:6:32"}]},{"nodeType":"YulAssignment","src":"1979:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2012:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2023:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2008:3:32"},"nodeType":"YulFunctionCall","src":"2008:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1989:18:32"},"nodeType":"YulFunctionCall","src":"1989:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1979:6:32"}]},{"nodeType":"YulAssignment","src":"2036:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2063:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2074:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2059:3:32"},"nodeType":"YulFunctionCall","src":"2059:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2046:12:32"},"nodeType":"YulFunctionCall","src":"2046:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2036:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1810:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1821:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1833:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1841:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1849:6:32","type":""}],"src":"1756:328:32"},{"body":{"nodeType":"YulBlock","src":"2186:87:32","statements":[{"nodeType":"YulAssignment","src":"2196:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2219:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2204:3:32"},"nodeType":"YulFunctionCall","src":"2204:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2196:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2238:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2253:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2261:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2249:3:32"},"nodeType":"YulFunctionCall","src":"2249:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2231:6:32"},"nodeType":"YulFunctionCall","src":"2231:36:32"},"nodeType":"YulExpressionStatement","src":"2231:36:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2155:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2166:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2177:4:32","type":""}],"src":"2089:184:32"},{"body":{"nodeType":"YulBlock","src":"2379:76:32","statements":[{"nodeType":"YulAssignment","src":"2389:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2401:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2412:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2397:3:32"},"nodeType":"YulFunctionCall","src":"2397:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2389:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2431:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"2442:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2424:6:32"},"nodeType":"YulFunctionCall","src":"2424:25:32"},"nodeType":"YulExpressionStatement","src":"2424:25:32"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2348:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2359:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2370:4:32","type":""}],"src":"2278:177:32"},{"body":{"nodeType":"YulBlock","src":"2530:110:32","statements":[{"body":{"nodeType":"YulBlock","src":"2576:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2588:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2578:6:32"},"nodeType":"YulFunctionCall","src":"2578:12:32"},"nodeType":"YulExpressionStatement","src":"2578:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2551:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2560:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2547:3:32"},"nodeType":"YulFunctionCall","src":"2547:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2572:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2543:3:32"},"nodeType":"YulFunctionCall","src":"2543:32:32"},"nodeType":"YulIf","src":"2540:52:32"},{"nodeType":"YulAssignment","src":"2601:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2611:12:32"},"nodeType":"YulFunctionCall","src":"2611:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2601:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2496:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2507:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2519:6:32","type":""}],"src":"2460:180:32"},{"body":{"nodeType":"YulBlock","src":"2715:116:32","statements":[{"body":{"nodeType":"YulBlock","src":"2761:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2770:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2773:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2763:6:32"},"nodeType":"YulFunctionCall","src":"2763:12:32"},"nodeType":"YulExpressionStatement","src":"2763:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2736:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2745:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2732:3:32"},"nodeType":"YulFunctionCall","src":"2732:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2757:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2728:3:32"},"nodeType":"YulFunctionCall","src":"2728:32:32"},"nodeType":"YulIf","src":"2725:52:32"},{"nodeType":"YulAssignment","src":"2786:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2796:18:32"},"nodeType":"YulFunctionCall","src":"2796:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2786:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2681:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2692:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2704:6:32","type":""}],"src":"2645:186:32"},{"body":{"nodeType":"YulBlock","src":"2937:102:32","statements":[{"nodeType":"YulAssignment","src":"2947:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2959:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2970:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2955:3:32"},"nodeType":"YulFunctionCall","src":"2955:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2947:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2989:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3004:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3025:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3016:3:32"},"nodeType":"YulFunctionCall","src":"3016:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"3029:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3012:3:32"},"nodeType":"YulFunctionCall","src":"3012:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3000:3:32"},"nodeType":"YulFunctionCall","src":"3000:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2982:6:32"},"nodeType":"YulFunctionCall","src":"2982:51:32"},"nodeType":"YulExpressionStatement","src":"2982:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2906:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2917:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2928:4:32","type":""}],"src":"2836:203:32"},{"body":{"nodeType":"YulBlock","src":"3143:93:32","statements":[{"nodeType":"YulAssignment","src":"3153:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3165:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3176:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3161:3:32"},"nodeType":"YulFunctionCall","src":"3161:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3153:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3195:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3210:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"3218:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3206:3:32"},"nodeType":"YulFunctionCall","src":"3206:23:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3188:6:32"},"nodeType":"YulFunctionCall","src":"3188:42:32"},"nodeType":"YulExpressionStatement","src":"3188:42:32"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3112:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3123:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3134:4:32","type":""}],"src":"3044:192:32"},{"body":{"nodeType":"YulBlock","src":"3598:902:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3615:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3630:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3642:3:32","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"3647:3:32","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3638:3:32"},"nodeType":"YulFunctionCall","src":"3638:13:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3626:3:32"},"nodeType":"YulFunctionCall","src":"3626:26:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3608:6:32"},"nodeType":"YulFunctionCall","src":"3608:45:32"},"nodeType":"YulExpressionStatement","src":"3608:45:32"},{"nodeType":"YulVariableDeclaration","src":"3662:12:32","value":{"kind":"number","nodeType":"YulLiteral","src":"3672:2:32","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3666:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3694:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"3705:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3690:3:32"},"nodeType":"YulFunctionCall","src":"3690:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"3710:3:32","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3683:6:32"},"nodeType":"YulFunctionCall","src":"3683:31:32"},"nodeType":"YulExpressionStatement","src":"3683:31:32"},{"nodeType":"YulVariableDeclaration","src":"3723:60:32","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3755:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3767:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3778:3:32","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3763:3:32"},"nodeType":"YulFunctionCall","src":"3763:19:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3737:17:32"},"nodeType":"YulFunctionCall","src":"3737:46:32"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3727:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3803:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3814:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3799:3:32"},"nodeType":"YulFunctionCall","src":"3799:18:32"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3823:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3831:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3819:3:32"},"nodeType":"YulFunctionCall","src":"3819:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3792:6:32"},"nodeType":"YulFunctionCall","src":"3792:50:32"},"nodeType":"YulExpressionStatement","src":"3792:50:32"},{"nodeType":"YulVariableDeclaration","src":"3851:47:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3883:6:32"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3891:6:32"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3865:17:32"},"nodeType":"YulFunctionCall","src":"3865:33:32"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3855:6:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3918:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3929:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3914:3:32"},"nodeType":"YulFunctionCall","src":"3914:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"3934:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3907:6:32"},"nodeType":"YulFunctionCall","src":"3907:34:32"},"nodeType":"YulExpressionStatement","src":"3907:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3961:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3972:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3957:3:32"},"nodeType":"YulFunctionCall","src":"3957:19:32"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3982:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3998:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4003:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3994:3:32"},"nodeType":"YulFunctionCall","src":"3994:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"4007:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3990:3:32"},"nodeType":"YulFunctionCall","src":"3990:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3978:3:32"},"nodeType":"YulFunctionCall","src":"3978:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3950:6:32"},"nodeType":"YulFunctionCall","src":"3950:61:32"},"nodeType":"YulExpressionStatement","src":"3950:61:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4042:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:32"},"nodeType":"YulFunctionCall","src":"4027:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"4048:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4020:6:32"},"nodeType":"YulFunctionCall","src":"4020:35:32"},"nodeType":"YulExpressionStatement","src":"4020:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4075:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4086:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4071:3:32"},"nodeType":"YulFunctionCall","src":"4071:19:32"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4096:6:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"4104:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4092:3:32"},"nodeType":"YulFunctionCall","src":"4092:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4064:6:32"},"nodeType":"YulFunctionCall","src":"4064:51:32"},"nodeType":"YulExpressionStatement","src":"4064:51:32"},{"nodeType":"YulVariableDeclaration","src":"4124:17:32","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4135:6:32"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4128:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4150:27:32","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4170:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4164:5:32"},"nodeType":"YulFunctionCall","src":"4164:13:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4154:6:32","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4193:6:32"},{"name":"length","nodeType":"YulIdentifier","src":"4201:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4186:6:32"},"nodeType":"YulFunctionCall","src":"4186:22:32"},"nodeType":"YulExpressionStatement","src":"4186:22:32"},{"nodeType":"YulAssignment","src":"4217:22:32","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4228:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4236:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4224:3:32"},"nodeType":"YulFunctionCall","src":"4224:15:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4217:3:32"}]},{"nodeType":"YulVariableDeclaration","src":"4248:29:32","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4266:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4274:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4262:3:32"},"nodeType":"YulFunctionCall","src":"4262:15:32"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4252:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4286:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"4295:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4290:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4354:120:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4375:3:32"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4386:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4380:5:32"},"nodeType":"YulFunctionCall","src":"4380:13:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4368:6:32"},"nodeType":"YulFunctionCall","src":"4368:26:32"},"nodeType":"YulExpressionStatement","src":"4368:26:32"},{"nodeType":"YulAssignment","src":"4407:19:32","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4423:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4414:3:32"},"nodeType":"YulFunctionCall","src":"4414:12:32"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4407:3:32"}]},{"nodeType":"YulAssignment","src":"4439:25:32","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4453:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"4461:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4449:3:32"},"nodeType":"YulFunctionCall","src":"4449:15:32"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4439:6:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4316:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"4319:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4313:2:32"},"nodeType":"YulFunctionCall","src":"4313:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4327:18:32","statements":[{"nodeType":"YulAssignment","src":"4329:14:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4338:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"4341:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4334:3:32"},"nodeType":"YulFunctionCall","src":"4334:9:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4329:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"4309:3:32","statements":[]},"src":"4305:169:32"},{"nodeType":"YulAssignment","src":"4483:11:32","value":{"name":"pos","nodeType":"YulIdentifier","src":"4491:3:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4483:4:32"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3519:9:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3530:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3538:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3546:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3554:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3562:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3570:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3578:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3589:4:32","type":""}],"src":"3241:1259:32"},{"body":{"nodeType":"YulBlock","src":"4604:97:32","statements":[{"nodeType":"YulAssignment","src":"4614:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4626:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4637:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:32"},"nodeType":"YulFunctionCall","src":"4622:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4614:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4671:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"4679:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4667:3:32"},"nodeType":"YulFunctionCall","src":"4667:27:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4649:6:32"},"nodeType":"YulFunctionCall","src":"4649:46:32"},"nodeType":"YulExpressionStatement","src":"4649:46:32"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4573:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4584:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4595:4:32","type":""}],"src":"4505:196:32"},{"body":{"nodeType":"YulBlock","src":"4753:109:32","statements":[{"nodeType":"YulAssignment","src":"4763:29:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4785:6:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4772:12:32"},"nodeType":"YulFunctionCall","src":"4772:20:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4763:5:32"}]},{"body":{"nodeType":"YulBlock","src":"4840:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4849:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4852:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4842:6:32"},"nodeType":"YulFunctionCall","src":"4842:12:32"},"nodeType":"YulExpressionStatement","src":"4842:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4814:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4825:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"4832:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4821:3:32"},"nodeType":"YulFunctionCall","src":"4821:16:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4811:2:32"},"nodeType":"YulFunctionCall","src":"4811:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4804:6:32"},"nodeType":"YulFunctionCall","src":"4804:35:32"},"nodeType":"YulIf","src":"4801:55:32"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4732:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4743:5:32","type":""}],"src":"4706:156:32"},{"body":{"nodeType":"YulBlock","src":"5020:378:32","statements":[{"body":{"nodeType":"YulBlock","src":"5067:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5076:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5079:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5069:6:32"},"nodeType":"YulFunctionCall","src":"5069:12:32"},"nodeType":"YulExpressionStatement","src":"5069:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5041:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5050:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5037:3:32"},"nodeType":"YulFunctionCall","src":"5037:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"5062:3:32","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5033:3:32"},"nodeType":"YulFunctionCall","src":"5033:33:32"},"nodeType":"YulIf","src":"5030:53:32"},{"nodeType":"YulAssignment","src":"5092:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5102:18:32"},"nodeType":"YulFunctionCall","src":"5102:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5092:6:32"}]},{"nodeType":"YulAssignment","src":"5140:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5167:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5178:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5163:3:32"},"nodeType":"YulFunctionCall","src":"5163:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5150:12:32"},"nodeType":"YulFunctionCall","src":"5150:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5140:6:32"}]},{"nodeType":"YulAssignment","src":"5191:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5218:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5229:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5214:3:32"},"nodeType":"YulFunctionCall","src":"5214:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5201:12:32"},"nodeType":"YulFunctionCall","src":"5201:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5191:6:32"}]},{"nodeType":"YulAssignment","src":"5242:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5273:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5284:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5269:3:32"},"nodeType":"YulFunctionCall","src":"5269:18:32"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"5252:16:32"},"nodeType":"YulFunctionCall","src":"5252:36:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5242:6:32"}]},{"nodeType":"YulAssignment","src":"5297:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:32"},"nodeType":"YulFunctionCall","src":"5320:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5307:12:32"},"nodeType":"YulFunctionCall","src":"5307:33:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5297:6:32"}]},{"nodeType":"YulAssignment","src":"5349:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5387:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:32"},"nodeType":"YulFunctionCall","src":"5372:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5359:12:32"},"nodeType":"YulFunctionCall","src":"5359:33:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5349:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4946:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4957:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4969:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4977:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4985:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4993:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5001:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5009:6:32","type":""}],"src":"4867:531:32"},{"body":{"nodeType":"YulBlock","src":"5573:436:32","statements":[{"body":{"nodeType":"YulBlock","src":"5620:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5629:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5632:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5622:6:32"},"nodeType":"YulFunctionCall","src":"5622:12:32"},"nodeType":"YulExpressionStatement","src":"5622:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5594:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5603:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5590:3:32"},"nodeType":"YulFunctionCall","src":"5590:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"5615:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5586:3:32"},"nodeType":"YulFunctionCall","src":"5586:33:32"},"nodeType":"YulIf","src":"5583:53:32"},{"nodeType":"YulAssignment","src":"5645:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5674:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5655:18:32"},"nodeType":"YulFunctionCall","src":"5655:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5645:6:32"}]},{"nodeType":"YulAssignment","src":"5693:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5726:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5737:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5722:3:32"},"nodeType":"YulFunctionCall","src":"5722:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5703:18:32"},"nodeType":"YulFunctionCall","src":"5703:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5693:6:32"}]},{"nodeType":"YulAssignment","src":"5750:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5777:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5788:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5773:3:32"},"nodeType":"YulFunctionCall","src":"5773:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5760:12:32"},"nodeType":"YulFunctionCall","src":"5760:32:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5750:6:32"}]},{"nodeType":"YulAssignment","src":"5801:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5828:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5839:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5824:3:32"},"nodeType":"YulFunctionCall","src":"5824:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5811:12:32"},"nodeType":"YulFunctionCall","src":"5811:32:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5801:6:32"}]},{"nodeType":"YulAssignment","src":"5852:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5883:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5894:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5879:3:32"},"nodeType":"YulFunctionCall","src":"5879:19:32"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"5862:16:32"},"nodeType":"YulFunctionCall","src":"5862:37:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5852:6:32"}]},{"nodeType":"YulAssignment","src":"5908:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5935:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5946:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:32"},"nodeType":"YulFunctionCall","src":"5931:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5918:12:32"},"nodeType":"YulFunctionCall","src":"5918:33:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5908:6:32"}]},{"nodeType":"YulAssignment","src":"5960:43:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5987:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5998:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5983:3:32"},"nodeType":"YulFunctionCall","src":"5983:19:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5970:12:32"},"nodeType":"YulFunctionCall","src":"5970:33:32"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"5960:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5491:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5502:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5514:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5522:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5530:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5538:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5546:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5554:6:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5562:6:32","type":""}],"src":"5403:606:32"},{"body":{"nodeType":"YulBlock","src":"6101:173:32","statements":[{"body":{"nodeType":"YulBlock","src":"6147:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6156:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6159:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6149:6:32"},"nodeType":"YulFunctionCall","src":"6149:12:32"},"nodeType":"YulExpressionStatement","src":"6149:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6122:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6131:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6118:3:32"},"nodeType":"YulFunctionCall","src":"6118:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6143:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6114:3:32"},"nodeType":"YulFunctionCall","src":"6114:32:32"},"nodeType":"YulIf","src":"6111:52:32"},{"nodeType":"YulAssignment","src":"6172:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6201:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6182:18:32"},"nodeType":"YulFunctionCall","src":"6182:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6172:6:32"}]},{"nodeType":"YulAssignment","src":"6220:48:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6253:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6264:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6249:3:32"},"nodeType":"YulFunctionCall","src":"6249:18:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6230:18:32"},"nodeType":"YulFunctionCall","src":"6230:38:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6220:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6059:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6070:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6082:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6090:6:32","type":""}],"src":"6014:260:32"},{"body":{"nodeType":"YulBlock","src":"6311:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6328:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6335:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6340:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6331:3:32"},"nodeType":"YulFunctionCall","src":"6331:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6321:6:32"},"nodeType":"YulFunctionCall","src":"6321:31:32"},"nodeType":"YulExpressionStatement","src":"6321:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6368:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6371:4:32","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6361:6:32"},"nodeType":"YulFunctionCall","src":"6361:15:32"},"nodeType":"YulExpressionStatement","src":"6361:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6392:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6395:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6385:6:32"},"nodeType":"YulFunctionCall","src":"6385:15:32"},"nodeType":"YulExpressionStatement","src":"6385:15:32"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6279:127:32"},{"body":{"nodeType":"YulBlock","src":"6491:842:32","statements":[{"body":{"nodeType":"YulBlock","src":"6537:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6546:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6549:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6539:6:32"},"nodeType":"YulFunctionCall","src":"6539:12:32"},"nodeType":"YulExpressionStatement","src":"6539:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6512:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"6521:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6508:3:32"},"nodeType":"YulFunctionCall","src":"6508:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"6533:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6504:3:32"},"nodeType":"YulFunctionCall","src":"6504:32:32"},"nodeType":"YulIf","src":"6501:52:32"},{"nodeType":"YulVariableDeclaration","src":"6562:37:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6589:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6576:12:32"},"nodeType":"YulFunctionCall","src":"6576:23:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6566:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6608:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6618:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6612:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6663:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6672:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6675:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6665:6:32"},"nodeType":"YulFunctionCall","src":"6665:12:32"},"nodeType":"YulExpressionStatement","src":"6665:12:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6651:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6659:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6648:2:32"},"nodeType":"YulFunctionCall","src":"6648:14:32"},"nodeType":"YulIf","src":"6645:34:32"},{"nodeType":"YulVariableDeclaration","src":"6688:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6702:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"6713:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6698:3:32"},"nodeType":"YulFunctionCall","src":"6698:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"6692:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6768:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6777:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6780:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6770:6:32"},"nodeType":"YulFunctionCall","src":"6770:12:32"},"nodeType":"YulExpressionStatement","src":"6770:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6747:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:32"},"nodeType":"YulFunctionCall","src":"6743:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6758:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6739:3:32"},"nodeType":"YulFunctionCall","src":"6739:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6732:6:32"},"nodeType":"YulFunctionCall","src":"6732:35:32"},"nodeType":"YulIf","src":"6729:55:32"},{"nodeType":"YulVariableDeclaration","src":"6793:26:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"6816:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6803:12:32"},"nodeType":"YulFunctionCall","src":"6803:16:32"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"6797:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6842:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6844:16:32"},"nodeType":"YulFunctionCall","src":"6844:18:32"},"nodeType":"YulExpressionStatement","src":"6844:18:32"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6834:2:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6838:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6831:2:32"},"nodeType":"YulFunctionCall","src":"6831:10:32"},"nodeType":"YulIf","src":"6828:36:32"},{"nodeType":"YulVariableDeclaration","src":"6873:17:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6887:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6883:3:32"},"nodeType":"YulFunctionCall","src":"6883:7:32"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6877:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6899:23:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6919:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6913:5:32"},"nodeType":"YulFunctionCall","src":"6913:9:32"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6903:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6931:71:32","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6953:6:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"6977:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"6981:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:32"},"nodeType":"YulFunctionCall","src":"6973:13:32"},{"name":"_4","nodeType":"YulIdentifier","src":"6988:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6969:3:32"},"nodeType":"YulFunctionCall","src":"6969:22:32"},{"kind":"number","nodeType":"YulLiteral","src":"6993:2:32","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6965:3:32"},"nodeType":"YulFunctionCall","src":"6965:31:32"},{"name":"_4","nodeType":"YulIdentifier","src":"6998:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6961:3:32"},"nodeType":"YulFunctionCall","src":"6961:40:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:32"},"nodeType":"YulFunctionCall","src":"6949:53:32"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6935:10:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7061:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7063:16:32"},"nodeType":"YulFunctionCall","src":"7063:18:32"},"nodeType":"YulExpressionStatement","src":"7063:18:32"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7020:10:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7032:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7017:2:32"},"nodeType":"YulFunctionCall","src":"7017:18:32"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7040:10:32"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7052:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7037:2:32"},"nodeType":"YulFunctionCall","src":"7037:22:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7014:2:32"},"nodeType":"YulFunctionCall","src":"7014:46:32"},"nodeType":"YulIf","src":"7011:72:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7099:2:32","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7103:10:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7092:6:32"},"nodeType":"YulFunctionCall","src":"7092:22:32"},"nodeType":"YulExpressionStatement","src":"7092:22:32"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7130:6:32"},{"name":"_3","nodeType":"YulIdentifier","src":"7138:2:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7123:6:32"},"nodeType":"YulFunctionCall","src":"7123:18:32"},"nodeType":"YulExpressionStatement","src":"7123:18:32"},{"body":{"nodeType":"YulBlock","src":"7187:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7196:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7199:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7189:6:32"},"nodeType":"YulFunctionCall","src":"7189:12:32"},"nodeType":"YulExpressionStatement","src":"7189:12:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7164:2:32"},{"name":"_3","nodeType":"YulIdentifier","src":"7168:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7160:3:32"},"nodeType":"YulFunctionCall","src":"7160:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"7173:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7156:3:32"},"nodeType":"YulFunctionCall","src":"7156:20:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7178:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7153:2:32"},"nodeType":"YulFunctionCall","src":"7153:33:32"},"nodeType":"YulIf","src":"7150:53:32"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7229:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"7237:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7225:3:32"},"nodeType":"YulFunctionCall","src":"7225:15:32"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7246:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"7250:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7242:3:32"},"nodeType":"YulFunctionCall","src":"7242:11:32"},{"name":"_3","nodeType":"YulIdentifier","src":"7255:2:32"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7212:12:32"},"nodeType":"YulFunctionCall","src":"7212:46:32"},"nodeType":"YulExpressionStatement","src":"7212:46:32"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7282:6:32"},{"name":"_3","nodeType":"YulIdentifier","src":"7290:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7278:3:32"},"nodeType":"YulFunctionCall","src":"7278:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"7295:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7274:3:32"},"nodeType":"YulFunctionCall","src":"7274:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"7300:1:32","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7267:6:32"},"nodeType":"YulFunctionCall","src":"7267:35:32"},"nodeType":"YulExpressionStatement","src":"7267:35:32"},{"nodeType":"YulAssignment","src":"7311:16:32","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"7321:6:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7311:6:32"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6457:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6468:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6480:6:32","type":""}],"src":"6411:922:32"},{"body":{"nodeType":"YulBlock","src":"7424:264:32","statements":[{"body":{"nodeType":"YulBlock","src":"7470:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7479:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7482:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7472:6:32"},"nodeType":"YulFunctionCall","src":"7472:12:32"},"nodeType":"YulExpressionStatement","src":"7472:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7445:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"7454:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7441:3:32"},"nodeType":"YulFunctionCall","src":"7441:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"7466:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7437:3:32"},"nodeType":"YulFunctionCall","src":"7437:32:32"},"nodeType":"YulIf","src":"7434:52:32"},{"nodeType":"YulAssignment","src":"7495:39:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7524:9:32"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7505:18:32"},"nodeType":"YulFunctionCall","src":"7505:29:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7495:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"7543:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7584:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7569:3:32"},"nodeType":"YulFunctionCall","src":"7569:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7556:12:32"},"nodeType":"YulFunctionCall","src":"7556:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7547:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"7642:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7651:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7654:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7644:6:32"},"nodeType":"YulFunctionCall","src":"7644:12:32"},"nodeType":"YulExpressionStatement","src":"7644:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7610:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7621:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"7628:10:32","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7617:3:32"},"nodeType":"YulFunctionCall","src":"7617:22:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7607:2:32"},"nodeType":"YulFunctionCall","src":"7607:33:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7600:6:32"},"nodeType":"YulFunctionCall","src":"7600:41:32"},"nodeType":"YulIf","src":"7597:61:32"},{"nodeType":"YulAssignment","src":"7667:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"7677:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7667:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7382:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7393:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7405:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7413:6:32","type":""}],"src":"7338:350:32"},{"body":{"nodeType":"YulBlock","src":"7856:193:32","statements":[{"nodeType":"YulAssignment","src":"7866:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7878:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7889:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7874:3:32"},"nodeType":"YulFunctionCall","src":"7874:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7866:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7908:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7929:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7923:5:32"},"nodeType":"YulFunctionCall","src":"7923:13:32"},{"kind":"number","nodeType":"YulLiteral","src":"7938:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7919:3:32"},"nodeType":"YulFunctionCall","src":"7919:34:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7901:6:32"},"nodeType":"YulFunctionCall","src":"7901:53:32"},"nodeType":"YulExpressionStatement","src":"7901:53:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7974:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7985:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7970:3:32"},"nodeType":"YulFunctionCall","src":"7970:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8006:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8014:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8002:3:32"},"nodeType":"YulFunctionCall","src":"8002:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7996:5:32"},"nodeType":"YulFunctionCall","src":"7996:24:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8030:3:32","type":"","value":"208"},{"kind":"number","nodeType":"YulLiteral","src":"8035:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8026:3:32"},"nodeType":"YulFunctionCall","src":"8026:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"8039:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8022:3:32"},"nodeType":"YulFunctionCall","src":"8022:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7992:3:32"},"nodeType":"YulFunctionCall","src":"7992:50:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7963:6:32"},"nodeType":"YulFunctionCall","src":"7963:80:32"},"nodeType":"YulExpressionStatement","src":"7963:80:32"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$8496_memory_ptr__to_t_struct$_Checkpoint208_$8496_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7825:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7836:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7847:4:32","type":""}],"src":"7693:356:32"},{"body":{"nodeType":"YulBlock","src":"8109:325:32","statements":[{"nodeType":"YulAssignment","src":"8119:22:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8133:1:32","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8136:4:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8129:3:32"},"nodeType":"YulFunctionCall","src":"8129:12:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8119:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"8150:38:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8180:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"8186:1:32","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8176:3:32"},"nodeType":"YulFunctionCall","src":"8176:12:32"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8154:18:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"8227:31:32","statements":[{"nodeType":"YulAssignment","src":"8229:27:32","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8243:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8251:4:32","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8239:3:32"},"nodeType":"YulFunctionCall","src":"8239:17:32"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8229:6:32"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8207:18:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8200:6:32"},"nodeType":"YulFunctionCall","src":"8200:26:32"},"nodeType":"YulIf","src":"8197:61:32"},{"body":{"nodeType":"YulBlock","src":"8317:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8338:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8345:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8350:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8341:3:32"},"nodeType":"YulFunctionCall","src":"8341:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8331:6:32"},"nodeType":"YulFunctionCall","src":"8331:31:32"},"nodeType":"YulExpressionStatement","src":"8331:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8382:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8385:4:32","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8375:6:32"},"nodeType":"YulFunctionCall","src":"8375:15:32"},"nodeType":"YulExpressionStatement","src":"8375:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8410:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8413:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8403:6:32"},"nodeType":"YulFunctionCall","src":"8403:15:32"},"nodeType":"YulExpressionStatement","src":"8403:15:32"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8273:18:32"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8296:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"8304:2:32","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8293:2:32"},"nodeType":"YulFunctionCall","src":"8293:14:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8270:2:32"},"nodeType":"YulFunctionCall","src":"8270:38:32"},"nodeType":"YulIf","src":"8267:161:32"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8089:4:32","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8098:6:32","type":""}],"src":"8054:380:32"},{"body":{"nodeType":"YulBlock","src":"8556:151:32","statements":[{"nodeType":"YulAssignment","src":"8566:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8578:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8589:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8574:3:32"},"nodeType":"YulFunctionCall","src":"8574:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8566:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8608:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8633:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8626:6:32"},"nodeType":"YulFunctionCall","src":"8626:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8619:6:32"},"nodeType":"YulFunctionCall","src":"8619:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8601:6:32"},"nodeType":"YulFunctionCall","src":"8601:41:32"},"nodeType":"YulExpressionStatement","src":"8601:41:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8662:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8673:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8658:3:32"},"nodeType":"YulFunctionCall","src":"8658:18:32"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8692:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8685:6:32"},"nodeType":"YulFunctionCall","src":"8685:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8678:6:32"},"nodeType":"YulFunctionCall","src":"8678:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8651:6:32"},"nodeType":"YulFunctionCall","src":"8651:50:32"},"nodeType":"YulExpressionStatement","src":"8651:50:32"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8517:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8528:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8536:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8547:4:32","type":""}],"src":"8439:268:32"},{"body":{"nodeType":"YulBlock","src":"8744:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8761:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8768:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8773:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8764:3:32"},"nodeType":"YulFunctionCall","src":"8764:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8754:6:32"},"nodeType":"YulFunctionCall","src":"8754:31:32"},"nodeType":"YulExpressionStatement","src":"8754:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8801:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8804:4:32","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8794:6:32"},"nodeType":"YulFunctionCall","src":"8794:15:32"},"nodeType":"YulExpressionStatement","src":"8794:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8825:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8828:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8818:6:32"},"nodeType":"YulFunctionCall","src":"8818:15:32"},"nodeType":"YulExpressionStatement","src":"8818:15:32"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8712:127:32"},{"body":{"nodeType":"YulBlock","src":"8892:77:32","statements":[{"nodeType":"YulAssignment","src":"8902:16:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8913:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"8916:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:32"},"nodeType":"YulFunctionCall","src":"8909:9:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8902:3:32"}]},{"body":{"nodeType":"YulBlock","src":"8941:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8943:16:32"},"nodeType":"YulFunctionCall","src":"8943:18:32"},"nodeType":"YulExpressionStatement","src":"8943:18:32"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8933:1:32"},{"name":"sum","nodeType":"YulIdentifier","src":"8936:3:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8930:2:32"},"nodeType":"YulFunctionCall","src":"8930:10:32"},"nodeType":"YulIf","src":"8927:36:32"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8875:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"8878:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8884:3:32","type":""}],"src":"8844:125:32"},{"body":{"nodeType":"YulBlock","src":"9148:168:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9165:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9176:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9158:6:32"},"nodeType":"YulFunctionCall","src":"9158:21:32"},"nodeType":"YulExpressionStatement","src":"9158:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9199:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9210:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9195:3:32"},"nodeType":"YulFunctionCall","src":"9195:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"9215:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9188:6:32"},"nodeType":"YulFunctionCall","src":"9188:30:32"},"nodeType":"YulExpressionStatement","src":"9188:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9238:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9249:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9234:3:32"},"nodeType":"YulFunctionCall","src":"9234:18:32"},{"hexValue":"45786365656473206d617820737570706c79","kind":"string","nodeType":"YulLiteral","src":"9254:20:32","type":"","value":"Exceeds max supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9227:6:32"},"nodeType":"YulFunctionCall","src":"9227:48:32"},"nodeType":"YulExpressionStatement","src":"9227:48:32"},{"nodeType":"YulAssignment","src":"9284:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9296:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9307:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9292:3:32"},"nodeType":"YulFunctionCall","src":"9292:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9284:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9125:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9139:4:32","type":""}],"src":"8974:342:32"},{"body":{"nodeType":"YulBlock","src":"9495:224:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9512:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9523:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9505:6:32"},"nodeType":"YulFunctionCall","src":"9505:21:32"},"nodeType":"YulExpressionStatement","src":"9505:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9546:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9557:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9542:3:32"},"nodeType":"YulFunctionCall","src":"9542:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"9562:2:32","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9535:6:32"},"nodeType":"YulFunctionCall","src":"9535:30:32"},"nodeType":"YulExpressionStatement","src":"9535:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9585:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9596:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9581:3:32"},"nodeType":"YulFunctionCall","src":"9581:18:32"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"9601:34:32","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9574:6:32"},"nodeType":"YulFunctionCall","src":"9574:62:32"},"nodeType":"YulExpressionStatement","src":"9574:62:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9656:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9667:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9652:3:32"},"nodeType":"YulFunctionCall","src":"9652:18:32"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"9672:4:32","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:32"},"nodeType":"YulFunctionCall","src":"9645:32:32"},"nodeType":"YulExpressionStatement","src":"9645:32:32"},{"nodeType":"YulAssignment","src":"9686:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9698:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9709:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9694:3:32"},"nodeType":"YulFunctionCall","src":"9694:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9686:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9472:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9486:4:32","type":""}],"src":"9321:398:32"},{"body":{"nodeType":"YulBlock","src":"9773:79:32","statements":[{"nodeType":"YulAssignment","src":"9783:17:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9795:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"9798:1:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9791:3:32"},"nodeType":"YulFunctionCall","src":"9791:9:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9783:4:32"}]},{"body":{"nodeType":"YulBlock","src":"9824:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9826:16:32"},"nodeType":"YulFunctionCall","src":"9826:18:32"},"nodeType":"YulExpressionStatement","src":"9826:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9815:4:32"},{"name":"x","nodeType":"YulIdentifier","src":"9821:1:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9812:2:32"},"nodeType":"YulFunctionCall","src":"9812:11:32"},"nodeType":"YulIf","src":"9809:37:32"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9755:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"9758:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9764:4:32","type":""}],"src":"9724:128:32"},{"body":{"nodeType":"YulBlock","src":"10031:182:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10048:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10059:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10041:6:32"},"nodeType":"YulFunctionCall","src":"10041:21:32"},"nodeType":"YulExpressionStatement","src":"10041:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10093:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10078:3:32"},"nodeType":"YulFunctionCall","src":"10078:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"10098:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10071:6:32"},"nodeType":"YulFunctionCall","src":"10071:30:32"},"nodeType":"YulExpressionStatement","src":"10071:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10121:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10132:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10117:3:32"},"nodeType":"YulFunctionCall","src":"10117:18:32"},{"hexValue":"42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d","kind":"string","nodeType":"YulLiteral","src":"10137:34:32","type":"","value":"Balance would fall below minimum"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10110:6:32"},"nodeType":"YulFunctionCall","src":"10110:62:32"},"nodeType":"YulExpressionStatement","src":"10110:62:32"},{"nodeType":"YulAssignment","src":"10181:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10193:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10204:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10189:3:32"},"nodeType":"YulFunctionCall","src":"10189:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10181:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10008:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10022:4:32","type":""}],"src":"9857:356:32"},{"body":{"nodeType":"YulBlock","src":"10392:179:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10409:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10420:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10402:6:32"},"nodeType":"YulFunctionCall","src":"10402:21:32"},"nodeType":"YulExpressionStatement","src":"10402:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10443:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10454:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10439:3:32"},"nodeType":"YulFunctionCall","src":"10439:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"10459:2:32","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10432:6:32"},"nodeType":"YulFunctionCall","src":"10432:30:32"},"nodeType":"YulExpressionStatement","src":"10432:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10482:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10493:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10478:3:32"},"nodeType":"YulFunctionCall","src":"10478:18:32"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"10498:31:32","type":"","value":"Amount must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10471:6:32"},"nodeType":"YulFunctionCall","src":"10471:59:32"},"nodeType":"YulExpressionStatement","src":"10471:59:32"},{"nodeType":"YulAssignment","src":"10539:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10551:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10562:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:32"},"nodeType":"YulFunctionCall","src":"10547:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10539:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10369:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10383:4:32","type":""}],"src":"10218:353:32"},{"body":{"nodeType":"YulBlock","src":"10705:119:32","statements":[{"nodeType":"YulAssignment","src":"10715:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10727:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10738:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10723:3:32"},"nodeType":"YulFunctionCall","src":"10723:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10715:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10757:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"10768:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10750:6:32"},"nodeType":"YulFunctionCall","src":"10750:25:32"},"nodeType":"YulExpressionStatement","src":"10750:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10795:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10806:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10791:3:32"},"nodeType":"YulFunctionCall","src":"10791:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"10811:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10784:6:32"},"nodeType":"YulFunctionCall","src":"10784:34:32"},"nodeType":"YulExpressionStatement","src":"10784:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10666:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10677:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10685:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10696:4:32","type":""}],"src":"10576:248:32"},{"body":{"nodeType":"YulBlock","src":"11014:232:32","statements":[{"nodeType":"YulAssignment","src":"11024:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11036:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11047:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11032:3:32"},"nodeType":"YulFunctionCall","src":"11032:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11024:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11067:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"11078:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11060:6:32"},"nodeType":"YulFunctionCall","src":"11060:25:32"},"nodeType":"YulExpressionStatement","src":"11060:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11105:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11116:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11101:3:32"},"nodeType":"YulFunctionCall","src":"11101:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11125:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11141:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11146:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11137:3:32"},"nodeType":"YulFunctionCall","src":"11137:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"11150:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11133:3:32"},"nodeType":"YulFunctionCall","src":"11133:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11121:3:32"},"nodeType":"YulFunctionCall","src":"11121:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11094:6:32"},"nodeType":"YulFunctionCall","src":"11094:60:32"},"nodeType":"YulExpressionStatement","src":"11094:60:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11174:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11185:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11170:3:32"},"nodeType":"YulFunctionCall","src":"11170:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"11190:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11163:6:32"},"nodeType":"YulFunctionCall","src":"11163:34:32"},"nodeType":"YulExpressionStatement","src":"11163:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11217:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11228:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11213:3:32"},"nodeType":"YulFunctionCall","src":"11213:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"11233:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11206:6:32"},"nodeType":"YulFunctionCall","src":"11206:34:32"},"nodeType":"YulExpressionStatement","src":"11206:34:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10959:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10970:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10978:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10986:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10994:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11005:4:32","type":""}],"src":"10829:417:32"},{"body":{"nodeType":"YulBlock","src":"11492:350:32","statements":[{"nodeType":"YulAssignment","src":"11502:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11514:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11525:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11510:3:32"},"nodeType":"YulFunctionCall","src":"11510:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11502:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11545:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"11556:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11538:6:32"},"nodeType":"YulFunctionCall","src":"11538:25:32"},"nodeType":"YulExpressionStatement","src":"11538:25:32"},{"nodeType":"YulVariableDeclaration","src":"11572:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11590:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11586:3:32"},"nodeType":"YulFunctionCall","src":"11586:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"11599:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11582:3:32"},"nodeType":"YulFunctionCall","src":"11582:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11576:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11621:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11632:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11617:3:32"},"nodeType":"YulFunctionCall","src":"11617:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11641:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"11649:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11637:3:32"},"nodeType":"YulFunctionCall","src":"11637:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11610:6:32"},"nodeType":"YulFunctionCall","src":"11610:43:32"},"nodeType":"YulExpressionStatement","src":"11610:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11673:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11684:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11669:3:32"},"nodeType":"YulFunctionCall","src":"11669:18:32"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11693:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"11701:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11689:3:32"},"nodeType":"YulFunctionCall","src":"11689:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11662:6:32"},"nodeType":"YulFunctionCall","src":"11662:43:32"},"nodeType":"YulExpressionStatement","src":"11662:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11725:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11721:3:32"},"nodeType":"YulFunctionCall","src":"11721:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"11741:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11714:6:32"},"nodeType":"YulFunctionCall","src":"11714:34:32"},"nodeType":"YulExpressionStatement","src":"11714:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11768:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11779:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11764:3:32"},"nodeType":"YulFunctionCall","src":"11764:19:32"},{"name":"value4","nodeType":"YulIdentifier","src":"11785:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11757:6:32"},"nodeType":"YulFunctionCall","src":"11757:35:32"},"nodeType":"YulExpressionStatement","src":"11757:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11812:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11823:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11808:3:32"},"nodeType":"YulFunctionCall","src":"11808:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"11829:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11801:6:32"},"nodeType":"YulFunctionCall","src":"11801:35:32"},"nodeType":"YulExpressionStatement","src":"11801:35:32"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11421:9:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11432:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11440:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11448:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11456:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11464:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11472:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11483:4:32","type":""}],"src":"11251:591:32"},{"body":{"nodeType":"YulBlock","src":"11976:175:32","statements":[{"nodeType":"YulAssignment","src":"11986:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11998:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12009:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11994:3:32"},"nodeType":"YulFunctionCall","src":"11994:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11986:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"12021:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12039:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12044:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12035:3:32"},"nodeType":"YulFunctionCall","src":"12035:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"12048:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12031:3:32"},"nodeType":"YulFunctionCall","src":"12031:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12025:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12066:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12081:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"12089:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12077:3:32"},"nodeType":"YulFunctionCall","src":"12077:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12059:6:32"},"nodeType":"YulFunctionCall","src":"12059:34:32"},"nodeType":"YulExpressionStatement","src":"12059:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12113:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12124:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12109:3:32"},"nodeType":"YulFunctionCall","src":"12109:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12133:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"12141:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12129:3:32"},"nodeType":"YulFunctionCall","src":"12129:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12102:6:32"},"nodeType":"YulFunctionCall","src":"12102:43:32"},"nodeType":"YulExpressionStatement","src":"12102:43:32"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11937:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11948:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11956:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11967:4:32","type":""}],"src":"11847:304:32"},{"body":{"nodeType":"YulBlock","src":"12330:169:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12347:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12358:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12340:6:32"},"nodeType":"YulFunctionCall","src":"12340:21:32"},"nodeType":"YulExpressionStatement","src":"12340:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12381:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12392:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12377:3:32"},"nodeType":"YulFunctionCall","src":"12377:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"12397:2:32","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12370:6:32"},"nodeType":"YulFunctionCall","src":"12370:30:32"},"nodeType":"YulExpressionStatement","src":"12370:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12420:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12416:3:32"},"nodeType":"YulFunctionCall","src":"12416:18:32"},{"hexValue":"5552492063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"12436:21:32","type":"","value":"URI cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12409:6:32"},"nodeType":"YulFunctionCall","src":"12409:49:32"},"nodeType":"YulExpressionStatement","src":"12409:49:32"},{"nodeType":"YulAssignment","src":"12467:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12479:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12490:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12475:3:32"},"nodeType":"YulFunctionCall","src":"12475:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12467:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12307:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12321:4:32","type":""}],"src":"12156:343:32"},{"body":{"nodeType":"YulBlock","src":"12560:65:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12577:1:32","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12580:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12570:6:32"},"nodeType":"YulFunctionCall","src":"12570:14:32"},"nodeType":"YulExpressionStatement","src":"12570:14:32"},{"nodeType":"YulAssignment","src":"12593:26:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12611:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12614:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12601:9:32"},"nodeType":"YulFunctionCall","src":"12601:18:32"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12593:4:32"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12543:3:32","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12551:4:32","type":""}],"src":"12504:121:32"},{"body":{"nodeType":"YulBlock","src":"12711:464:32","statements":[{"body":{"nodeType":"YulBlock","src":"12744:425:32","statements":[{"nodeType":"YulVariableDeclaration","src":"12758:11:32","value":{"kind":"number","nodeType":"YulLiteral","src":"12768:1:32","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12762:2:32","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12789:2:32"},{"name":"array","nodeType":"YulIdentifier","src":"12793:5:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12782:6:32"},"nodeType":"YulFunctionCall","src":"12782:17:32"},"nodeType":"YulExpressionStatement","src":"12782:17:32"},{"nodeType":"YulVariableDeclaration","src":"12812:31:32","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12834:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"12838:4:32","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12824:9:32"},"nodeType":"YulFunctionCall","src":"12824:19:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"12816:4:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12856:57:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12879:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12889:1:32","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12896:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"12908:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12892:3:32"},"nodeType":"YulFunctionCall","src":"12892:19:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12885:3:32"},"nodeType":"YulFunctionCall","src":"12885:27:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12875:3:32"},"nodeType":"YulFunctionCall","src":"12875:38:32"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"12860:11:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"12950:23:32","statements":[{"nodeType":"YulAssignment","src":"12952:19:32","value":{"name":"data","nodeType":"YulIdentifier","src":"12967:4:32"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"12952:11:32"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"12932:10:32"},{"kind":"number","nodeType":"YulLiteral","src":"12944:4:32","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12929:2:32"},"nodeType":"YulFunctionCall","src":"12929:20:32"},"nodeType":"YulIf","src":"12926:47:32"},{"nodeType":"YulVariableDeclaration","src":"12986:41:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13000:4:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13010:1:32","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13017:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"13022:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13013:3:32"},"nodeType":"YulFunctionCall","src":"13013:12:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13006:3:32"},"nodeType":"YulFunctionCall","src":"13006:20:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12996:3:32"},"nodeType":"YulFunctionCall","src":"12996:31:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12990:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13040:24:32","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"13053:11:32"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"13044:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"13138:21:32","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13147:5:32"},{"name":"_1","nodeType":"YulIdentifier","src":"13154:2:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13140:6:32"},"nodeType":"YulFunctionCall","src":"13140:17:32"},"nodeType":"YulExpressionStatement","src":"13140:17:32"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13088:5:32"},{"name":"_2","nodeType":"YulIdentifier","src":"13095:2:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13085:2:32"},"nodeType":"YulFunctionCall","src":"13085:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13099:26:32","statements":[{"nodeType":"YulAssignment","src":"13101:22:32","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"13114:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"13121:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13110:3:32"},"nodeType":"YulFunctionCall","src":"13110:13:32"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"13101:5:32"}]}]},"pre":{"nodeType":"YulBlock","src":"13081:3:32","statements":[]},"src":"13077:82:32"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"12727:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"12732:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12724:2:32"},"nodeType":"YulFunctionCall","src":"12724:11:32"},"nodeType":"YulIf","src":"12721:448:32"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12683:5:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"12690:3:32","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"12695:10:32","type":""}],"src":"12630:545:32"},{"body":{"nodeType":"YulBlock","src":"13265:81:32","statements":[{"nodeType":"YulAssignment","src":"13275:65:32","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13290:4:32"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13308:1:32","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"13311:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13304:3:32"},"nodeType":"YulFunctionCall","src":"13304:11:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13321:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13317:3:32"},"nodeType":"YulFunctionCall","src":"13317:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13300:3:32"},"nodeType":"YulFunctionCall","src":"13300:24:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13296:3:32"},"nodeType":"YulFunctionCall","src":"13296:29:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13286:3:32"},"nodeType":"YulFunctionCall","src":"13286:40:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13332:1:32","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"13335:3:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13328:3:32"},"nodeType":"YulFunctionCall","src":"13328:11:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13283:2:32"},"nodeType":"YulFunctionCall","src":"13283:57:32"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"13275:4:32"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13242:4:32","type":""},{"name":"len","nodeType":"YulTypedName","src":"13248:3:32","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"13256:4:32","type":""}],"src":"13180:166:32"},{"body":{"nodeType":"YulBlock","src":"13447:1256:32","statements":[{"nodeType":"YulVariableDeclaration","src":"13457:24:32","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13477:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13471:5:32"},"nodeType":"YulFunctionCall","src":"13471:10:32"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"13461:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"13524:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13526:16:32"},"nodeType":"YulFunctionCall","src":"13526:18:32"},"nodeType":"YulExpressionStatement","src":"13526:18:32"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13496:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"13504:18:32","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13493:2:32"},"nodeType":"YulFunctionCall","src":"13493:30:32"},"nodeType":"YulIf","src":"13490:56:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13599:4:32"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13637:4:32"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"13631:5:32"},"nodeType":"YulFunctionCall","src":"13631:11:32"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"13605:25:32"},"nodeType":"YulFunctionCall","src":"13605:38:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"13645:6:32"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"13555:43:32"},"nodeType":"YulFunctionCall","src":"13555:97:32"},"nodeType":"YulExpressionStatement","src":"13555:97:32"},{"nodeType":"YulVariableDeclaration","src":"13661:18:32","value":{"kind":"number","nodeType":"YulLiteral","src":"13678:1:32","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"13665:9:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13688:23:32","value":{"kind":"number","nodeType":"YulLiteral","src":"13707:4:32","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"13692:11:32","type":""}]},{"nodeType":"YulAssignment","src":"13720:24:32","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13733:11:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"13720:9:32"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"13790:656:32","statements":[{"nodeType":"YulVariableDeclaration","src":"13804:35:32","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13823:6:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13835:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13831:3:32"},"nodeType":"YulFunctionCall","src":"13831:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13819:3:32"},"nodeType":"YulFunctionCall","src":"13819:20:32"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"13808:7:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13852:49:32","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13896:4:32"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"13866:29:32"},"nodeType":"YulFunctionCall","src":"13866:35:32"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"13856:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13914:10:32","value":{"kind":"number","nodeType":"YulLiteral","src":"13923:1:32","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13918:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"14001:172:32","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14026:6:32"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14044:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14049:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14040:3:32"},"nodeType":"YulFunctionCall","src":"14040:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14034:5:32"},"nodeType":"YulFunctionCall","src":"14034:26:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14019:6:32"},"nodeType":"YulFunctionCall","src":"14019:42:32"},"nodeType":"YulExpressionStatement","src":"14019:42:32"},{"nodeType":"YulAssignment","src":"14078:24:32","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14092:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"14100:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14088:3:32"},"nodeType":"YulFunctionCall","src":"14088:14:32"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14078:6:32"}]},{"nodeType":"YulAssignment","src":"14119:40:32","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14136:9:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14147:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14132:3:32"},"nodeType":"YulFunctionCall","src":"14132:27:32"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14119:9:32"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13948:1:32"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"13951:7:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13945:2:32"},"nodeType":"YulFunctionCall","src":"13945:14:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13960:28:32","statements":[{"nodeType":"YulAssignment","src":"13962:24:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13971:1:32"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"13974:11:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13967:3:32"},"nodeType":"YulFunctionCall","src":"13967:19:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13962:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"13941:3:32","statements":[]},"src":"13937:236:32"},{"body":{"nodeType":"YulBlock","src":"14221:166:32","statements":[{"nodeType":"YulVariableDeclaration","src":"14239:43:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14266:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14271:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14262:3:32"},"nodeType":"YulFunctionCall","src":"14262:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14256:5:32"},"nodeType":"YulFunctionCall","src":"14256:26:32"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"14243:9:32","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"14306:6:32"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"14318:9:32"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14345:1:32","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"14348:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14341:3:32"},"nodeType":"YulFunctionCall","src":"14341:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"14357:3:32","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14337:3:32"},"nodeType":"YulFunctionCall","src":"14337:24:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14367:1:32","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14363:3:32"},"nodeType":"YulFunctionCall","src":"14363:6:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14333:3:32"},"nodeType":"YulFunctionCall","src":"14333:37:32"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14329:3:32"},"nodeType":"YulFunctionCall","src":"14329:42:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14314:3:32"},"nodeType":"YulFunctionCall","src":"14314:58:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14299:6:32"},"nodeType":"YulFunctionCall","src":"14299:74:32"},"nodeType":"YulExpressionStatement","src":"14299:74:32"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"14192:7:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"14201:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14189:2:32"},"nodeType":"YulFunctionCall","src":"14189:19:32"},"nodeType":"YulIf","src":"14186:201:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14407:4:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14421:1:32","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"14424:6:32"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14417:3:32"},"nodeType":"YulFunctionCall","src":"14417:14:32"},{"kind":"number","nodeType":"YulLiteral","src":"14433:1:32","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14413:3:32"},"nodeType":"YulFunctionCall","src":"14413:22:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14400:6:32"},"nodeType":"YulFunctionCall","src":"14400:36:32"},"nodeType":"YulExpressionStatement","src":"14400:36:32"}]},"nodeType":"YulCase","src":"13783:663:32","value":{"kind":"number","nodeType":"YulLiteral","src":"13788:1:32","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"14463:234:32","statements":[{"nodeType":"YulVariableDeclaration","src":"14477:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"14490:1:32","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14481:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"14526:67:32","statements":[{"nodeType":"YulAssignment","src":"14544:35:32","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14563:3:32"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"14568:9:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14559:3:32"},"nodeType":"YulFunctionCall","src":"14559:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14553:5:32"},"nodeType":"YulFunctionCall","src":"14553:26:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14544:5:32"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"14507:6:32"},"nodeType":"YulIf","src":"14504:89:32"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14613:4:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14672:5:32"},{"name":"newLen","nodeType":"YulIdentifier","src":"14679:6:32"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"14619:52:32"},"nodeType":"YulFunctionCall","src":"14619:67:32"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14606:6:32"},"nodeType":"YulFunctionCall","src":"14606:81:32"},"nodeType":"YulExpressionStatement","src":"14606:81:32"}]},"nodeType":"YulCase","src":"14455:242:32","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"13763:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"13771:2:32","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13760:2:32"},"nodeType":"YulFunctionCall","src":"13760:14:32"},"nodeType":"YulSwitch","src":"13753:944:32"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"13432:4:32","type":""},{"name":"src","nodeType":"YulTypedName","src":"13438:3:32","type":""}],"src":"13351:1352:32"},{"body":{"nodeType":"YulBlock","src":"14865:188:32","statements":[{"nodeType":"YulAssignment","src":"14875:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14887:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14898:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14883:3:32"},"nodeType":"YulFunctionCall","src":"14883:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14875:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14932:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14948:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14953:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14944:3:32"},"nodeType":"YulFunctionCall","src":"14944:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"14957:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14940:3:32"},"nodeType":"YulFunctionCall","src":"14940:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14928:3:32"},"nodeType":"YulFunctionCall","src":"14928:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14910:6:32"},"nodeType":"YulFunctionCall","src":"14910:51:32"},"nodeType":"YulExpressionStatement","src":"14910:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14981:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14992:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14977:3:32"},"nodeType":"YulFunctionCall","src":"14977:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"14997:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14970:6:32"},"nodeType":"YulFunctionCall","src":"14970:34:32"},"nodeType":"YulExpressionStatement","src":"14970:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15024:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15035:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15020:3:32"},"nodeType":"YulFunctionCall","src":"15020:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"15040:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15013:6:32"},"nodeType":"YulFunctionCall","src":"15013:34:32"},"nodeType":"YulExpressionStatement","src":"15013:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14818:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14829:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14837:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14845:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14856:4:32","type":""}],"src":"14708:345:32"},{"body":{"nodeType":"YulBlock","src":"15185:140:32","statements":[{"nodeType":"YulAssignment","src":"15195:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15207:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15218:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15203:3:32"},"nodeType":"YulFunctionCall","src":"15203:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15195:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15237:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"15248:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15230:6:32"},"nodeType":"YulFunctionCall","src":"15230:25:32"},"nodeType":"YulExpressionStatement","src":"15230:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15275:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15286:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15271:3:32"},"nodeType":"YulFunctionCall","src":"15271:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15295:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15303:14:32","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15291:3:32"},"nodeType":"YulFunctionCall","src":"15291:27:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15264:6:32"},"nodeType":"YulFunctionCall","src":"15264:55:32"},"nodeType":"YulExpressionStatement","src":"15264:55:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15146:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15157:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15165:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15176:4:32","type":""}],"src":"15058:267:32"},{"body":{"nodeType":"YulBlock","src":"15459:145:32","statements":[{"nodeType":"YulAssignment","src":"15469:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15481:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15492:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15477:3:32"},"nodeType":"YulFunctionCall","src":"15477:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15469:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15511:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15526:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15542:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15547:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15538:3:32"},"nodeType":"YulFunctionCall","src":"15538:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"15551:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15534:3:32"},"nodeType":"YulFunctionCall","src":"15534:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15522:3:32"},"nodeType":"YulFunctionCall","src":"15522:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15504:6:32"},"nodeType":"YulFunctionCall","src":"15504:51:32"},"nodeType":"YulExpressionStatement","src":"15504:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15575:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15586:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15571:3:32"},"nodeType":"YulFunctionCall","src":"15571:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"15591:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15564:6:32"},"nodeType":"YulFunctionCall","src":"15564:34:32"},"nodeType":"YulExpressionStatement","src":"15564:34:32"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15420:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15431:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15439:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15450:4:32","type":""}],"src":"15330:274:32"},{"body":{"nodeType":"YulBlock","src":"15783:177:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15800:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15811:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15793:6:32"},"nodeType":"YulFunctionCall","src":"15793:21:32"},"nodeType":"YulExpressionStatement","src":"15793:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15834:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15845:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15830:3:32"},"nodeType":"YulFunctionCall","src":"15830:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"15850:2:32","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15823:6:32"},"nodeType":"YulFunctionCall","src":"15823:30:32"},"nodeType":"YulExpressionStatement","src":"15823:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15873:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15884:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15869:3:32"},"nodeType":"YulFunctionCall","src":"15869:18:32"},{"hexValue":"546f6b656e207472616e73666572207768696c6520706175736564","kind":"string","nodeType":"YulLiteral","src":"15889:29:32","type":"","value":"Token transfer while paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15862:6:32"},"nodeType":"YulFunctionCall","src":"15862:57:32"},"nodeType":"YulExpressionStatement","src":"15862:57:32"},{"nodeType":"YulAssignment","src":"15928:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15940:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15951:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15936:3:32"},"nodeType":"YulFunctionCall","src":"15936:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15928:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15760:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15774:4:32","type":""}],"src":"15609:351:32"},{"body":{"nodeType":"YulBlock","src":"16139:176:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16156:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16167:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16149:6:32"},"nodeType":"YulFunctionCall","src":"16149:21:32"},"nodeType":"YulExpressionStatement","src":"16149:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16190:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16201:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16186:3:32"},"nodeType":"YulFunctionCall","src":"16186:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"16206:2:32","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16179:6:32"},"nodeType":"YulFunctionCall","src":"16179:30:32"},"nodeType":"YulExpressionStatement","src":"16179:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16229:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16240:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16225:3:32"},"nodeType":"YulFunctionCall","src":"16225:18:32"},{"hexValue":"53656c66207472616e7366657273206e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"16245:28:32","type":"","value":"Self transfers not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16218:6:32"},"nodeType":"YulFunctionCall","src":"16218:56:32"},"nodeType":"YulExpressionStatement","src":"16218:56:32"},{"nodeType":"YulAssignment","src":"16283:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16295:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16306:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16291:3:32"},"nodeType":"YulFunctionCall","src":"16291:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16283:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_d76b7a151b722efa9e67380f3f9aa677ca7dd4339eb7f1adecb5f9fcf5582bfd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16116:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16130:4:32","type":""}],"src":"15965:350:32"},{"body":{"nodeType":"YulBlock","src":"16494:177:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16511:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16522:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16504:6:32"},"nodeType":"YulFunctionCall","src":"16504:21:32"},"nodeType":"YulExpressionStatement","src":"16504:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16545:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16556:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16541:3:32"},"nodeType":"YulFunctionCall","src":"16541:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"16561:2:32","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16534:6:32"},"nodeType":"YulFunctionCall","src":"16534:30:32"},"nodeType":"YulExpressionStatement","src":"16534:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16584:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16595:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16580:3:32"},"nodeType":"YulFunctionCall","src":"16580:18:32"},{"hexValue":"45786365656473206d6178207472616e7366657220616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"16600:29:32","type":"","value":"Exceeds max transfer amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16573:6:32"},"nodeType":"YulFunctionCall","src":"16573:57:32"},"nodeType":"YulExpressionStatement","src":"16573:57:32"},{"nodeType":"YulAssignment","src":"16639:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16651:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16662:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16647:3:32"},"nodeType":"YulFunctionCall","src":"16647:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16639:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_b7b0f9fc974ffc98f5808ea83c662bf1a37c88eb737f04ede53b5ef967abfe48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16471:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16485:4:32","type":""}],"src":"16320:351:32"},{"body":{"nodeType":"YulBlock","src":"16850:170:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16867:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16878:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16860:6:32"},"nodeType":"YulFunctionCall","src":"16860:21:32"},"nodeType":"YulExpressionStatement","src":"16860:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16901:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16912:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16897:3:32"},"nodeType":"YulFunctionCall","src":"16897:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"16917:2:32","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16890:6:32"},"nodeType":"YulFunctionCall","src":"16890:30:32"},"nodeType":"YulExpressionStatement","src":"16890:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16940:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16951:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16936:3:32"},"nodeType":"YulFunctionCall","src":"16936:18:32"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"16956:22:32","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16929:6:32"},"nodeType":"YulFunctionCall","src":"16929:50:32"},"nodeType":"YulExpressionStatement","src":"16929:50:32"},{"nodeType":"YulAssignment","src":"16988:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17000:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17011:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16996:3:32"},"nodeType":"YulFunctionCall","src":"16996:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16988:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16827:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16841:4:32","type":""}],"src":"16676:344:32"},{"body":{"nodeType":"YulBlock","src":"17199:175:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17216:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17227:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17209:6:32"},"nodeType":"YulFunctionCall","src":"17209:21:32"},"nodeType":"YulExpressionStatement","src":"17209:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17250:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17261:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17246:3:32"},"nodeType":"YulFunctionCall","src":"17246:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"17266:2:32","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17239:6:32"},"nodeType":"YulFunctionCall","src":"17239:30:32"},"nodeType":"YulExpressionStatement","src":"17239:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17289:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17300:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17285:3:32"},"nodeType":"YulFunctionCall","src":"17285:18:32"},{"hexValue":"526563697069656e742062616c616e636520746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"17305:27:32","type":"","value":"Recipient balance too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17278:6:32"},"nodeType":"YulFunctionCall","src":"17278:55:32"},"nodeType":"YulExpressionStatement","src":"17278:55:32"},{"nodeType":"YulAssignment","src":"17342:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17354:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17365:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17350:3:32"},"nodeType":"YulFunctionCall","src":"17350:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17342:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3dcb706470115d72d3ddb9880961be9c092a756fa5cced7fd4467d3947b3e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17176:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17190:4:32","type":""}],"src":"17025:349:32"},{"body":{"nodeType":"YulBlock","src":"17553:231:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17570:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17581:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17563:6:32"},"nodeType":"YulFunctionCall","src":"17563:21:32"},"nodeType":"YulExpressionStatement","src":"17563:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17604:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17615:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17600:3:32"},"nodeType":"YulFunctionCall","src":"17600:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"17620:2:32","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17593:6:32"},"nodeType":"YulFunctionCall","src":"17593:30:32"},"nodeType":"YulExpressionStatement","src":"17593:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17643:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17654:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17639:3:32"},"nodeType":"YulFunctionCall","src":"17639:18:32"},{"hexValue":"5472616e7366657220616d6f756e7420746f6f206c6f7720666f72206e657720","kind":"string","nodeType":"YulLiteral","src":"17659:34:32","type":"","value":"Transfer amount too low for new "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17632:6:32"},"nodeType":"YulFunctionCall","src":"17632:62:32"},"nodeType":"YulExpressionStatement","src":"17632:62:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17714:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17725:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17710:3:32"},"nodeType":"YulFunctionCall","src":"17710:18:32"},{"hexValue":"726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"17730:11:32","type":"","value":"recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17703:6:32"},"nodeType":"YulFunctionCall","src":"17703:39:32"},"nodeType":"YulExpressionStatement","src":"17703:39:32"},{"nodeType":"YulAssignment","src":"17751:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17763:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17774:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17759:3:32"},"nodeType":"YulFunctionCall","src":"17759:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17751:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_c289beb9856767723ca1e73e75edd7897935313ece134ee5027929d7aa7afb72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17530:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17544:4:32","type":""}],"src":"17379:405:32"},{"body":{"nodeType":"YulBlock","src":"18002:276:32","statements":[{"nodeType":"YulAssignment","src":"18012:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18024:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18035:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18020:3:32"},"nodeType":"YulFunctionCall","src":"18020:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18012:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18055:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"18066:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18048:6:32"},"nodeType":"YulFunctionCall","src":"18048:25:32"},"nodeType":"YulExpressionStatement","src":"18048:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18093:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18104:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18089:3:32"},"nodeType":"YulFunctionCall","src":"18089:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"18109:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18082:6:32"},"nodeType":"YulFunctionCall","src":"18082:34:32"},"nodeType":"YulExpressionStatement","src":"18082:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18136:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18147:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18132:3:32"},"nodeType":"YulFunctionCall","src":"18132:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"18152:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18125:6:32"},"nodeType":"YulFunctionCall","src":"18125:34:32"},"nodeType":"YulExpressionStatement","src":"18125:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18179:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18190:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18175:3:32"},"nodeType":"YulFunctionCall","src":"18175:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"18195:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18168:6:32"},"nodeType":"YulFunctionCall","src":"18168:34:32"},"nodeType":"YulExpressionStatement","src":"18168:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18222:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18233:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18218:3:32"},"nodeType":"YulFunctionCall","src":"18218:19:32"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18243:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18259:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18264:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18255:3:32"},"nodeType":"YulFunctionCall","src":"18255:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"18268:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18251:3:32"},"nodeType":"YulFunctionCall","src":"18251:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18239:3:32"},"nodeType":"YulFunctionCall","src":"18239:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18211:6:32"},"nodeType":"YulFunctionCall","src":"18211:61:32"},"nodeType":"YulExpressionStatement","src":"18211:61:32"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17939:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17950:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17958:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17966:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17974:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17982:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17993:4:32","type":""}],"src":"17789:489:32"},{"body":{"nodeType":"YulBlock","src":"18419:130:32","statements":[{"nodeType":"YulAssignment","src":"18429:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18441:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18452:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18437:3:32"},"nodeType":"YulFunctionCall","src":"18437:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18429:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18471:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18486:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18494:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18482:3:32"},"nodeType":"YulFunctionCall","src":"18482:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18464:6:32"},"nodeType":"YulFunctionCall","src":"18464:36:32"},"nodeType":"YulExpressionStatement","src":"18464:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18520:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18531:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18516:3:32"},"nodeType":"YulFunctionCall","src":"18516:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"18536:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18509:6:32"},"nodeType":"YulFunctionCall","src":"18509:34:32"},"nodeType":"YulExpressionStatement","src":"18509:34:32"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18380:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18391:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18399:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18410:4:32","type":""}],"src":"18283:266:32"},{"body":{"nodeType":"YulBlock","src":"18586:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18603:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18610:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"18615:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18606:3:32"},"nodeType":"YulFunctionCall","src":"18606:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18596:6:32"},"nodeType":"YulFunctionCall","src":"18596:31:32"},"nodeType":"YulExpressionStatement","src":"18596:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18643:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18646:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18636:6:32"},"nodeType":"YulFunctionCall","src":"18636:15:32"},"nodeType":"YulExpressionStatement","src":"18636:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18667:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18670:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18660:6:32"},"nodeType":"YulFunctionCall","src":"18660:15:32"},"nodeType":"YulExpressionStatement","src":"18660:15:32"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18554:127:32"},{"body":{"nodeType":"YulBlock","src":"18822:130:32","statements":[{"nodeType":"YulAssignment","src":"18832:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18844:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18855:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18840:3:32"},"nodeType":"YulFunctionCall","src":"18840:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18832:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18874:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18889:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18897:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18885:3:32"},"nodeType":"YulFunctionCall","src":"18885:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18867:6:32"},"nodeType":"YulFunctionCall","src":"18867:36:32"},"nodeType":"YulExpressionStatement","src":"18867:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18923:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18934:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18919:3:32"},"nodeType":"YulFunctionCall","src":"18919:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"18939:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18912:6:32"},"nodeType":"YulFunctionCall","src":"18912:34:32"},"nodeType":"YulExpressionStatement","src":"18912:34:32"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18783:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18794:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18802:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18813:4:32","type":""}],"src":"18686:266:32"},{"body":{"nodeType":"YulBlock","src":"19138:217:32","statements":[{"nodeType":"YulAssignment","src":"19148:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19160:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19171:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19156:3:32"},"nodeType":"YulFunctionCall","src":"19156:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19148:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19191:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"19202:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19184:6:32"},"nodeType":"YulFunctionCall","src":"19184:25:32"},"nodeType":"YulExpressionStatement","src":"19184:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19229:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19240:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19225:3:32"},"nodeType":"YulFunctionCall","src":"19225:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19249:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"19257:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19245:3:32"},"nodeType":"YulFunctionCall","src":"19245:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19218:6:32"},"nodeType":"YulFunctionCall","src":"19218:45:32"},"nodeType":"YulExpressionStatement","src":"19218:45:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19283:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19294:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19279:3:32"},"nodeType":"YulFunctionCall","src":"19279:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"19299:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19272:6:32"},"nodeType":"YulFunctionCall","src":"19272:34:32"},"nodeType":"YulExpressionStatement","src":"19272:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19326:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19337:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19322:3:32"},"nodeType":"YulFunctionCall","src":"19322:18:32"},{"name":"value3","nodeType":"YulIdentifier","src":"19342:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19315:6:32"},"nodeType":"YulFunctionCall","src":"19315:34:32"},"nodeType":"YulExpressionStatement","src":"19315:34:32"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19083:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19094:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19102:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19110:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19118:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19129:4:32","type":""}],"src":"18957:398:32"},{"body":{"nodeType":"YulBlock","src":"19392:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19409:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19416:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19421:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19412:3:32"},"nodeType":"YulFunctionCall","src":"19412:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19402:6:32"},"nodeType":"YulFunctionCall","src":"19402:31:32"},"nodeType":"YulExpressionStatement","src":"19402:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19449:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19452:4:32","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19442:6:32"},"nodeType":"YulFunctionCall","src":"19442:15:32"},"nodeType":"YulExpressionStatement","src":"19442:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19473:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19476:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19466:6:32"},"nodeType":"YulFunctionCall","src":"19466:15:32"},"nodeType":"YulExpressionStatement","src":"19466:15:32"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"19360:127:32"},{"body":{"nodeType":"YulBlock","src":"19524:95:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19541:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19548:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19553:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19544:3:32"},"nodeType":"YulFunctionCall","src":"19544:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19534:6:32"},"nodeType":"YulFunctionCall","src":"19534:31:32"},"nodeType":"YulExpressionStatement","src":"19534:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19581:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19584:4:32","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19574:6:32"},"nodeType":"YulFunctionCall","src":"19574:15:32"},"nodeType":"YulExpressionStatement","src":"19574:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19605:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19608:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19598:6:32"},"nodeType":"YulFunctionCall","src":"19598:15:32"},"nodeType":"YulExpressionStatement","src":"19598:15:32"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19492:127:32"},{"body":{"nodeType":"YulBlock","src":"19670:171:32","statements":[{"body":{"nodeType":"YulBlock","src":"19701:111:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19722:1:32","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19729:3:32","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19734:10:32","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19725:3:32"},"nodeType":"YulFunctionCall","src":"19725:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19715:6:32"},"nodeType":"YulFunctionCall","src":"19715:31:32"},"nodeType":"YulExpressionStatement","src":"19715:31:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19766:1:32","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19769:4:32","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19759:6:32"},"nodeType":"YulFunctionCall","src":"19759:15:32"},"nodeType":"YulExpressionStatement","src":"19759:15:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19794:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19797:4:32","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19787:6:32"},"nodeType":"YulFunctionCall","src":"19787:15:32"},"nodeType":"YulExpressionStatement","src":"19787:15:32"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19690:1:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19683:6:32"},"nodeType":"YulFunctionCall","src":"19683:9:32"},"nodeType":"YulIf","src":"19680:132:32"},{"nodeType":"YulAssignment","src":"19821:14:32","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19830:1:32"},{"name":"y","nodeType":"YulIdentifier","src":"19833:1:32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19826:3:32"},"nodeType":"YulFunctionCall","src":"19826:9:32"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"19821:1:32"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19655:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"19658:1:32","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"19664:1:32","type":""}],"src":"19624:217:32"},{"body":{"nodeType":"YulBlock","src":"19895:136:32","statements":[{"nodeType":"YulVariableDeclaration","src":"19905:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19923:3:32","type":"","value":"208"},{"kind":"number","nodeType":"YulLiteral","src":"19928:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19919:3:32"},"nodeType":"YulFunctionCall","src":"19919:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"19932:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19915:3:32"},"nodeType":"YulFunctionCall","src":"19915:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19909:2:32","type":""}]},{"nodeType":"YulAssignment","src":"19943:35:32","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19959:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"19962:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19955:3:32"},"nodeType":"YulFunctionCall","src":"19955:10:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19971:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"19974:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19967:3:32"},"nodeType":"YulFunctionCall","src":"19967:10:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19951:3:32"},"nodeType":"YulFunctionCall","src":"19951:27:32"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19943:4:32"}]},{"body":{"nodeType":"YulBlock","src":"20003:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20005:16:32"},"nodeType":"YulFunctionCall","src":"20005:18:32"},"nodeType":"YulExpressionStatement","src":"20005:18:32"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"19993:4:32"},{"name":"_1","nodeType":"YulIdentifier","src":"19999:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19990:2:32"},"nodeType":"YulFunctionCall","src":"19990:12:32"},"nodeType":"YulIf","src":"19987:38:32"}]},"name":"checked_sub_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19877:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"19880:1:32","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19886:4:32","type":""}],"src":"19846:185:32"},{"body":{"nodeType":"YulBlock","src":"20173:130:32","statements":[{"nodeType":"YulAssignment","src":"20183:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20195:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20206:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20191:3:32"},"nodeType":"YulFunctionCall","src":"20191:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20183:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20225:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20240:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"20248:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20236:3:32"},"nodeType":"YulFunctionCall","src":"20236:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20218:6:32"},"nodeType":"YulFunctionCall","src":"20218:36:32"},"nodeType":"YulExpressionStatement","src":"20218:36:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20274:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20285:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20270:3:32"},"nodeType":"YulFunctionCall","src":"20270:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"20290:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20263:6:32"},"nodeType":"YulFunctionCall","src":"20263:34:32"},"nodeType":"YulExpressionStatement","src":"20263:34:32"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20134:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20145:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20153:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20164:4:32","type":""}],"src":"20036:267:32"},{"body":{"nodeType":"YulBlock","src":"20356:134:32","statements":[{"nodeType":"YulVariableDeclaration","src":"20366:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20384:3:32","type":"","value":"208"},{"kind":"number","nodeType":"YulLiteral","src":"20389:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20380:3:32"},"nodeType":"YulFunctionCall","src":"20380:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"20393:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20376:3:32"},"nodeType":"YulFunctionCall","src":"20376:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"20370:2:32","type":""}]},{"nodeType":"YulAssignment","src":"20404:34:32","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20419:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20422:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20415:3:32"},"nodeType":"YulFunctionCall","src":"20415:10:32"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20431:1:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20434:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20427:3:32"},"nodeType":"YulFunctionCall","src":"20427:10:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20411:3:32"},"nodeType":"YulFunctionCall","src":"20411:27:32"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20404:3:32"}]},{"body":{"nodeType":"YulBlock","src":"20462:22:32","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20464:16:32"},"nodeType":"YulFunctionCall","src":"20464:18:32"},"nodeType":"YulExpressionStatement","src":"20464:18:32"}]},"condition":{"arguments":[{"name":"sum","nodeType":"YulIdentifier","src":"20453:3:32"},{"name":"_1","nodeType":"YulIdentifier","src":"20458:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20450:2:32"},"nodeType":"YulFunctionCall","src":"20450:11:32"},"nodeType":"YulIf","src":"20447:37:32"}]},"name":"checked_add_t_uint208","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20339:1:32","type":""},{"name":"y","nodeType":"YulTypedName","src":"20342:1:32","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"20348:3:32","type":""}],"src":"20308:182:32"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint208_$8496_memory_ptr__to_t_struct$_Checkpoint208_$8496_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(208, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Exceeds max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_27934733b278976eb6480c2473609872a4d11f74c0e5d4e1817e676f021b43e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Balance would fall below minimum\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_035d4514157dcf2506923e1232babe38012bd57de24345ac363305b5db6b8231__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"URI cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ba3c0c576b22deea110d73d1df7b0d6cd22186c70514acf9967fa3cbde967c65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Token transfer while paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d76b7a151b722efa9e67380f3f9aa677ca7dd4339eb7f1adecb5f9fcf5582bfd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Self transfers not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b7b0f9fc974ffc98f5808ea83c662bf1a37c88eb737f04ede53b5ef967abfe48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Exceeds max transfer amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3dcb706470115d72d3ddb9880961be9c092a756fa5cced7fd4467d3947b3e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Recipient balance too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c289beb9856767723ca1e73e75edd7897935313ece134ee5027929d7aa7afb72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount too low for new \")\n        mstore(add(headStart, 96), \"recipient\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint208(x, y) -> diff\n    {\n        let _1 := sub(shl(208, 1), 1)\n        diff := sub(and(x, _1), and(y, _1))\n        if gt(diff, _1) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint208(x, y) -> sum\n    {\n        let _1 := sub(shl(208, 1), 1)\n        sum := add(and(x, _1), and(y, _1))\n        if gt(sum, _1) { panic_error_0x11() }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4159":[{"length":32,"start":4010}],"4161":[{"length":32,"start":3968}],"4163":[{"length":32,"start":3926}],"4165":[{"length":32,"start":4091}],"4167":[{"length":32,"start":4131}],"4170":[{"length":32,"start":4976}],"4173":[{"length":32,"start":5021}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102485760003560e01c8063715018a61161013b57806395d89b41116100b8578063d505accf1161007c578063d505accf14610506578063dd62ed3e14610519578063e0df5b6f14610552578063f1127ed814610565578063f2fde38b146105a457600080fd5b806395d89b41146104bc5780639ab24eb0146104c4578063a9059cbb146104d7578063a9e75723146104ea578063c3cda520146104f357600080fd5b8063867378c5116100ff578063867378c5146104525780638bf55409146104615780638da5cb5b146104745780638e539e8c1461048a57806391ddadf41461049d57600080fd5b8063715018a61461040157806379cc6790146104095780637ecebe001461041c5780638456cb591461042f57806384b0196e1461043757600080fd5b80633f4ba83a116101c9578063587cde1e1161018d578063587cde1e1461034e5780635c19a95c146103925780635c975abb146103a55780636fcfff45146103b057806370a08231146103d857600080fd5b80633f4ba83a1461030b57806340c10f191461031357806342966c681461032657806348709a93146103395780634bf5d7e91461034657600080fd5b8063313ce56711610210578063313ce567146102c857806332cb6b0c146102d75780633644e515146102e85780633a46b1a8146102f05780633c130d901461030357600080fd5b806306fdde031461024d578063095ea7b31461026b5780630d659ec51461028e57806318160ddd146102a357806323b872dd146102b5575b600080fd5b6102556105b7565b6040516102629190612486565b60405180910390f35b61027e6102793660046124b5565b610649565b6040519015158152602001610262565b6102a161029c3660046124df565b610663565b005b6002545b604051908152602001610262565b61027e6102c3366004612501565b6106c2565b60405160128152602001610262565b6102a769d3c21bcecceda100000081565b6102a76106e6565b6102a76102fe3660046124b5565b6106f5565b610255610731565b6102a1610740565b6102a16103213660046124b5565b610752565b6102a161033436600461253d565b610812565b600e5461027e9060ff1681565b610255610919565b61037a61035c366004612556565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b039091168152602001610262565b6102a16103a0366004612556565b610991565b60055460ff1661027e565b6103c36103be366004612556565b6109a0565b60405163ffffffff9091168152602001610262565b6102a76103e6366004612556565b6001600160a01b031660009081526020819052604090205490565b6102a16109ab565b6102a16104173660046124b5565b6109bd565b6102a761042a366004612556565b6109d2565b6102a16109dd565b61043f6109ed565b6040516102629796959493929190612571565b6102a7670de0b6b3a764000081565b6102a161046f36600461253d565b610a33565b60055461010090046001600160a01b031661037a565b6102a761049836600461253d565b610ac9565b6104a5610aee565b60405165ffffffffffff9091168152602001610262565b610255610af8565b6102a76104d2366004612556565b610b07565b61027e6104e53660046124b5565b610b28565b6102a7600d5481565b6102a1610501366004612618565b610b36565b6102a1610514366004612670565b610bf3565b6102a76105273660046126da565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a1610560366004612723565b610d2d565b6105786105733660046127d4565b610dc3565b60408051825165ffffffffffff1681526020928301516001600160d01b03169281019290925201610262565b6102a16105b2366004612556565b610de8565b6060600380546105c690612814565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290612814565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b5050505050905090565b600033610657818585610e26565b60019150505b92915050565b61066b610e38565b600e805482151560ff19821681179092556040805160ff909216801515835260208301939093527f35b05563db5dd3045c31a9b46a385d3e34a1b6ad51cc00c23562eccb5619002a91015b60405180910390a15050565b6000336106d0858285610e6b565b6106db858585610eea565b506001949350505050565b60006106f0610f49565b905090565b600061072161070383611074565b6001600160a01b0385166000908152600a60205260409020906110c3565b6001600160d01b03169392505050565b6060600c80546105c690612814565b610748610e38565b610750611179565b565b61075a610e38565b69d3c21bcecceda10000008161076f60025490565b6107799190612864565b11156107c15760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b6107cb82826111cb565b816001600160a01b03167fb9144c96c86541f6fa89c9f2f02495cccf4b08cd6643e26d34ee00aa586558a88260405161080691815260200190565b60405180910390a25050565b336000908152602081905260409020548181101561087d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016107b8565b670de0b6b3a76400006108908383612877565b10156108de5760405162461bcd60e51b815260206004820181905260248201527f42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d60448201526064016107b8565b6108e7826111d5565b60405182815233907f1af5163f80e79b5e554f61e1d052084d3a3fe1166e42a265798c4e2ddce8ffa290602001610806565b60606109236111df565b65ffffffffffff16610933610aee565b65ffffffffffff1614610959576040516301bfc1c560e61b815260040160405180910390fd5b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b3361099c81836111ea565b5050565b600061065d8261125c565b6109b3610e38565b610750600061127e565b6109c8823383610e6b565b61099c82826112d8565b600061065d8261130e565b6109e5610e38565b61075061132c565b600060608060008060006060610a01611369565b610a09611396565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b610a3b610e38565b60008111610a8b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016107b8565b600d80549082905560408051828152602081018490527f1e7d225cb161c2f834852cd521d7ee05358af80025a0e937483c51e42bfc13de91016106b6565b6000610adf610ad783611074565b600b906110c3565b6001600160d01b031692915050565b60006106f06111df565b6060600480546105c690612814565b6001600160a01b0381166000908152600a60205260408120610adf906113c3565b600033610657818585610eea565b83421115610b5a57604051632341d78760e11b8152600481018590526024016107b8565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610bd490610bcc9060a001604051602081830303815290604052805190602001206113fc565b858585611429565b9050610be08187611457565b610bea81886111ea565b50505050505050565b83421115610c175760405163313c898160e11b8152600481018590526024016107b8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610c648c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610cbf826113fc565b90506000610ccf82878787611429565b9050896001600160a01b0316816001600160a01b031614610d16576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016107b8565b610d218a8a8a610e26565b50505050505050505050565b610d35610e38565b6000815111610d7c5760405162461bcd60e51b81526020600482015260136024820152725552492063616e6e6f7420626520656d70747960681b60448201526064016107b8565b600c610d8882826128d8565b507f5bb111c9b2ad41c6cc1754cdbee2cc303b7becb89d29d2d5f91165fcc0b0a49d81604051610db89190612486565b60405180910390a150565b6040805180820190915260008082526020820152610de183836114aa565b9392505050565b610df0610e38565b6001600160a01b038116610e1a57604051631e4fbdf760e01b8152600060048201526024016107b8565b610e238161127e565b50565b610e3383838360016114e0565b505050565b6005546001600160a01b036101009091041633146107505760405163118cdaa760e01b81523360048201526024016107b8565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610ee45781811015610ed557604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107b8565b610ee4848484840360006114e0565b50505050565b6001600160a01b038316610f1457604051634b637e8f60e11b8152600060048201526024016107b8565b6001600160a01b038216610f3e5760405163ec442f0560e01b8152600060048201526024016107b8565b610e338383836115b5565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fa257507f000000000000000000000000000000000000000000000000000000000000000046145b15610fcc57507f000000000000000000000000000000000000000000000000000000000000000090565b6106f0604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60008061107f610aee565b90508065ffffffffffff1683106110ba57604051637669fc0f60e11b81526004810184905265ffffffffffff821660248201526044016107b8565b610de1836118f0565b8154600090818160058111156111225760006110de84611927565b6110e89085612877565b60008881526020902090915081015465ffffffffffff908116908716101561111257809150611120565b61111d816001612864565b92505b505b600061113087878585611a80565b9050801561116b5761115587611147600184612877565b600091825260209091200190565b54600160301b90046001600160d01b031661116e565b60005b979650505050505050565b611181611ae2565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61099c8282611b05565b610e2333826112d8565b60006106f0436118f0565b6001600160a01b0382811660008181526009602052604080822080548686166001600160a01b0319821681179092559151919094169392849290917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e33818361125786611b3b565b611b59565b6001600160a01b0381166000908152600a602052604081205461065d90611cc5565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661130257604051634b637e8f60e11b8152600060048201526024016107b8565b61099c826000836115b5565b6001600160a01b03811660009081526008602052604081205461065d565b611334611cf6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111ae3390565b60606106f07f00000000000000000000000000000000000000000000000000000000000000006006611d1a565b60606106f07f00000000000000000000000000000000000000000000000000000000000000006007611d1a565b805460009080156113f3576113dd83611147600184612877565b54600160301b90046001600160d01b0316610de1565b60009392505050565b600061065d611409610f49565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061143b88888888611dc5565b92509250925061144b8282611e94565b50909695505050505050565b6001600160a01b0382166000908152600860205260409020805460018101909155818114610e33576040516301d4b62360e61b81526001600160a01b0384166004820152602481018290526044016107b8565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020610de19083611f4d565b6001600160a01b03841661150a5760405163e602df0560e01b8152600060048201526024016107b8565b6001600160a01b03831661153457604051634a1406b160e11b8152600060048201526024016107b8565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610ee457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115a791815260200190565b60405180910390a350505050565b60055460ff16156116085760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e207472616e73666572207768696c6520706175736564000000000060448201526064016107b8565b816001600160a01b0316836001600160a01b0316036116695760405162461bcd60e51b815260206004820152601a60248201527f53656c66207472616e7366657273206e6f7420616c6c6f77656400000000000060448201526064016107b8565b6001600160a01b0383161580159061168957506001600160a01b03821615155b156118e557600081116116de5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016107b8565b600e5460ff161561173b57600d5481111561173b5760405162461bcd60e51b815260206004820152601b60248201527f45786365656473206d6178207472616e7366657220616d6f756e74000000000060448201526064016107b8565b6001600160a01b0383166000908152602081905260409020548181101561179b5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107b8565b670de0b6b3a76400006117ae8383612877565b10156117fc5760405162461bcd60e51b815260206004820181905260248201527f42616c616e636520776f756c642066616c6c2062656c6f77206d696e696d756d60448201526064016107b8565b6001600160a01b038316600090815260208190526040902054801561187857670de0b6b3a76400008110156118735760405162461bcd60e51b815260206004820152601960248201527f526563697069656e742062616c616e636520746f6f206c6f770000000000000060448201526064016107b8565b6118e2565b670de0b6b3a76400008310156118e25760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e7420746f6f206c6f7720666f72206e6577206044820152681c9958da5c1a595b9d60ba1b60648201526084016107b8565b50505b610e33838383611fbd565b600065ffffffffffff821115611923576040516306dfcc6560e41b815260306004820152602481018390526044016107b8565b5090565b600060018211611935575090565b816001600160801b821061194e5760809190911c9060401b5b6801000000000000000082106119695760409190911c9060201b5b64010000000082106119805760209190911c9060101b5b6201000082106119955760109190911c9060081b5b61010082106119a95760089190911c9060041b5b601082106119bc5760049190911c9060021b5b600482106119c85760011b5b600302600190811c908185816119e0576119e0612998565b048201901c905060018185816119f8576119f8612998565b048201901c90506001818581611a1057611a10612998565b048201901c90506001818581611a2857611a28612998565b048201901c90506001818581611a4057611a40612998565b048201901c90506001818581611a5857611a58612998565b048201901c9050611a77818581611a7157611a71612998565b04821190565b90039392505050565b60005b81831015611ada576000611a978484612024565b60008781526020902090915065ffffffffffff86169082015465ffffffffffff161115611ac657809250611ad4565b611ad1816001612864565b93505b50611a83565b509392505050565b60055460ff1661075057604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b038216611b2f5760405163ec442f0560e01b8152600060048201526024016107b8565b61099c600083836115b5565b6001600160a01b03811660009081526020819052604081205461065d565b816001600160a01b0316836001600160a01b031614158015611b7b5750600081115b15610e33576001600160a01b03831615611c23576001600160a01b0383166000908152600a602052604081208190611bbe9061203f611bb98661204b565b61207f565b6001600160d01b031691506001600160d01b03169150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611c18929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610e33576001600160a01b0382166000908152600a602052604081208190611c5c906120b8611bb98661204b565b6001600160d01b031691506001600160d01b03169150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611cb6929190918252602082015260400190565b60405180910390a25050505050565b600063ffffffff821115611923576040516306dfcc6560e41b815260206004820152602481018390526044016107b8565b60055460ff16156107505760405163d93c066560e01b815260040160405180910390fd5b606060ff8314611d3457611d2d836120c4565b905061065d565b818054611d4090612814565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6c90612814565b8015611db95780601f10611d8e57610100808354040283529160200191611db9565b820191906000526020600020905b815481529060010190602001808311611d9c57829003601f168201915b5050505050905061065d565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611e005750600091506003905082611e8a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611e54573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e8057506000925060019150829050611e8a565b9250600091508190505b9450945094915050565b6000826003811115611ea857611ea86129ae565b03611eb1575050565b6001826003811115611ec557611ec56129ae565b03611ee35760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ef757611ef76129ae565b03611f185760405163fce698f760e01b8152600481018290526024016107b8565b6003826003811115611f2c57611f2c6129ae565b0361099c576040516335e2f38360e21b8152600481018290526024016107b8565b6040805180820190915260008082526020820152826000018263ffffffff1681548110611f7c57611f7c6129c4565b60009182526020918290206040805180820190915291015465ffffffffffff81168252600160301b90046001600160d01b0316918101919091529392505050565b611fc8838383612103565b6001600160a01b038316612019576000611fe160025490565b90506001600160d01b038082111561201657604051630e58ae9360e11b815260048101839052602481018290526044016107b8565b50505b610e33838383612116565b600061203360028484186129da565b610de190848416612864565b6000610de182846129fc565b60006001600160d01b03821115611923576040516306dfcc6560e41b815260d06004820152602481018390526044016107b8565b6000806120ab61208d610aee565b6120a3612099886113c3565b868863ffffffff16565b87919061218c565b915091505b935093915050565b6000610de18284612a23565b606060006120d18361219a565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b61210b611cf6565b610e338383836121c2565b6001600160a01b03831661213857612135600b6120b8611bb98461204b565b50505b6001600160a01b03821661215a57612157600b61203f611bb98461204b565b50505b6001600160a01b03838116600090815260096020526040808220548584168352912054610e3392918216911683611b59565b6000806120ab8585856122ec565b600060ff8216601f81111561065d57604051632cd44ac360e21b815260040160405180910390fd5b6001600160a01b0383166121ed5780600260008282546121e29190612864565b9091555061225f9050565b6001600160a01b038316600090815260208190526040902054818110156122405760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107b8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661227b5760028054829003905561229a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122df91815260200190565b60405180910390a3505050565b8254600090819080156123e557600061230a87611147600185612877565b805490915065ffffffffffff80821691600160301b90046001600160d01b031690881682111561234d57604051632520601d60e01b815260040160405180910390fd5b8765ffffffffffff168265ffffffffffff160361238657825465ffffffffffff16600160301b6001600160d01b038916021783556123d7565b6040805180820190915265ffffffffffff808a1682526001600160d01b03808a1660208085019182528d54600181018f5560008f81529190912094519151909216600160301b029216919091179101555b94508593506120b092505050565b50506040805180820190915265ffffffffffff80851682526001600160d01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160301b0291909316179201919091559050816120b0565b6000815180845260005b818110156124665760208185018101518683018201520161244a565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610de16020830184612440565b80356001600160a01b03811681146124b057600080fd5b919050565b600080604083850312156124c857600080fd5b6124d183612499565b946020939093013593505050565b6000602082840312156124f157600080fd5b81358015158114610de157600080fd5b60008060006060848603121561251657600080fd5b61251f84612499565b925061252d60208501612499565b9150604084013590509250925092565b60006020828403121561254f57600080fd5b5035919050565b60006020828403121561256857600080fd5b610de182612499565b60ff60f81b881681526000602060e08184015261259160e084018a612440565b83810360408501526125a3818a612440565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156125f5578351835292840192918401916001016125d9565b50909c9b505050505050505050505050565b803560ff811681146124b057600080fd5b60008060008060008060c0878903121561263157600080fd5b61263a87612499565b9550602087013594506040870135935061265660608801612607565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561268b57600080fd5b61269488612499565b96506126a260208901612499565b955060408801359450606088013593506126be60808901612607565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156126ed57600080fd5b6126f683612499565b915061270460208401612499565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561273557600080fd5b813567ffffffffffffffff8082111561274d57600080fd5b818401915084601f83011261276157600080fd5b8135818111156127735761277361270d565b604051601f8201601f19908116603f0116810190838211818310171561279b5761279b61270d565b816040528281528760208487010111156127b457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156127e757600080fd5b6127f083612499565b9150602083013563ffffffff8116811461280957600080fd5b809150509250929050565b600181811c9082168061282857607f821691505b60208210810361284857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561065d5761065d61284e565b8181038181111561065d5761065d61284e565b601f821115610e3357600081815260208120601f850160051c810160208610156128b15750805b601f850160051c820191505b818110156128d0578281556001016128bd565b505050505050565b815167ffffffffffffffff8111156128f2576128f261270d565b612906816129008454612814565b8461288a565b602080601f83116001811461293b57600084156129235750858301515b600019600386901b1c1916600185901b1785556128d0565b600085815260208120601f198616915b8281101561296a5788860151825594840194600190910190840161294b565b50858210156129885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000826129f757634e487b7160e01b600052601260045260246000fd5b500490565b6001600160d01b03828116828216039080821115612a1c57612a1c61284e565b5092915050565b6001600160d01b03818116838216019080821115612a1c57612a1c61284e56fea264697066735822122005bbca7fb1da3b0d11549a657b8ef1e241f943afba40caf508adb37bb364f83664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x248 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xA9E75723 EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x867378C5 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x867378C5 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8BF55409 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x48709A93 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3C130D90 EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xD659EC5 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2501 JUMP JUMPDEST PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A7 PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x27E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x37A PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x27E JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x43F PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0x2A7 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37A JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x253D JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x4A5 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x255 PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x2A7 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x2670 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x26DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x560 CALLDATASIZE PUSH1 0x4 PUSH2 0x2723 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x578 PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x262 JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2556 JUMP JUMPDEST PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F2 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x614 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x622 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x66B PUSH2 0xE38 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP1 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0x35B05563DB5DD3045C31A9B46A385D3E34A1B6AD51CC00C23562ECCB5619002A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6D0 DUP6 DUP3 DUP6 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x6DB DUP6 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 PUSH2 0xF49 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 PUSH2 0x703 DUP4 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH2 0x748 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x1179 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x75A PUSH2 0xE38 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH2 0x76F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x779 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST GT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x45786365656473206D617820737570706C79 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP3 DUP3 PUSH2 0x11CB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB9144C96C86541F6FA89C9F2F02495CCCF4B08CD6643E26D34EE00AA586558A8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x806 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x890 DUP4 DUP4 PUSH2 0x2877 JUMP JUMPDEST LT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E636520776F756C642066616C6C2062656C6F77206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x8E7 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1AF5163F80E79B5E554F61E1D052084D3A3FE1166E42A265798C4E2DDCE8FFA2 SWAP1 PUSH1 0x20 ADD PUSH2 0x806 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x923 PUSH2 0x11DF JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x933 PUSH2 0xAEE JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BFC1C5 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH2 0x99C DUP2 DUP4 PUSH2 0x11EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH1 0x0 PUSH2 0x127E JUMP JUMPDEST PUSH2 0x9C8 DUP3 CALLER DUP4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D DUP3 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x9E5 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x750 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xA01 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1E7D225CB161C2F834852CD521D7EE05358AF80025A0E937483C51E42BFC13DE SWAP2 ADD PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADF PUSH2 0xAD7 DUP4 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0xB SWAP1 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C6 SWAP1 PUSH2 0x2814 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xADF SWAP1 PUSH2 0x13C3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x657 DUP2 DUP6 DUP6 PUSH2 0xEEA JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2341D787 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBD4 SWAP1 PUSH2 0xBCC SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13FC JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP PUSH2 0xBE0 DUP2 DUP8 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0xBEA DUP2 DUP9 PUSH2 0x11EA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xC64 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCBF DUP3 PUSH2 0x13FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCCF DUP3 DUP8 DUP8 DUP8 PUSH2 0x1429 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xD21 DUP11 DUP11 DUP11 PUSH2 0xE26 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5552492063616E6E6F7420626520656D707479 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xC PUSH2 0xD88 DUP3 DUP3 PUSH2 0x28D8 JUMP JUMPDEST POP PUSH32 0x5BB111C9B2AD41C6CC1754CDBEE2CC303B7BECB89D29D2D5F91165FCC0B0A49D DUP2 PUSH1 0x40 MLOAD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xDE1 DUP4 DUP4 PUSH2 0x14AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDF0 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xE23 DUP2 PUSH2 0x127E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0xEE4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xEE4 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x14E0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF14 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xFA2 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xFCC JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x6F0 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x107F PUSH2 0xAEE JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7669FC0F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH6 0xFFFFFFFFFFFF DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0xDE1 DUP4 PUSH2 0x18F0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 PUSH2 0x10DE DUP5 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x10E8 SWAP1 DUP6 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP8 AND LT ISZERO PUSH2 0x1112 JUMPI DUP1 SWAP2 POP PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x111D DUP2 PUSH1 0x1 PUSH2 0x2864 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1130 DUP8 DUP8 DUP6 DUP6 PUSH2 0x1A80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x116B JUMPI PUSH2 0x1155 DUP8 PUSH2 0x1147 PUSH1 0x1 DUP5 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1181 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x99C DUP3 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0xE23 CALLER DUP3 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F0 NUMBER PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP5 AND SWAP4 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xE33 DUP2 DUP4 PUSH2 0x1257 DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1302 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x99C DUP3 PUSH1 0x0 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1334 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x11AE CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6F0 PUSH32 0x0 PUSH1 0x6 PUSH2 0x1D1A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6F0 PUSH32 0x0 PUSH1 0x7 PUSH2 0x1D1A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP1 ISZERO PUSH2 0x13F3 JUMPI PUSH2 0x13DD DUP4 PUSH2 0x1147 PUSH1 0x1 DUP5 PUSH2 0x2877 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65D PUSH2 0x1409 PUSH2 0xF49 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x143B DUP9 DUP9 DUP9 DUP9 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x144B DUP3 DUP3 PUSH2 0x1E94 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE DUP2 DUP2 EQ PUSH2 0xE33 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D4B623 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xDE1 SWAP1 DUP4 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEE4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x15A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572207768696C65207061757365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C66207472616E7366657273206E6F7420616C6C6F776564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP2 GT PUSH2 0x16DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x173B JUMPI PUSH1 0xD SLOAD DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206D6178207472616E7366657220616D6F756E740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x179B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x17AE DUP4 DUP4 PUSH2 0x2877 JUMP JUMPDEST LT ISZERO PUSH2 0x17FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C616E636520776F756C642066616C6C2062656C6F77206D696E696D756D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1878 JUMPI PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E742062616C616E636520746F6F206C6F7700000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x18E2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 LT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E7420746F6F206C6F7720666F72206E657720 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1C9958DA5C1A595B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7B8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x1FBD JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x30 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x1935 JUMPI POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x194E JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 SHL JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1969 JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 SHL JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1980 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 SHL JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1995 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 SHL JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x19A9 JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 SHL JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x19BC JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SHL JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x19C8 JUMPI PUSH1 0x1 SHL JUMPDEST PUSH1 0x3 MUL PUSH1 0x1 SWAP1 DUP2 SHR SWAP1 DUP2 DUP6 DUP2 PUSH2 0x19E0 JUMPI PUSH2 0x19E0 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x19F8 JUMPI PUSH2 0x19F8 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A28 JUMPI PUSH2 0x1A28 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A40 JUMPI PUSH2 0x1A40 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1A58 JUMPI PUSH2 0x1A58 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1A77 DUP2 DUP6 DUP2 PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x2998 JUMP JUMPDEST DIV DUP3 GT SWAP1 JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 PUSH2 0x1A97 DUP5 DUP5 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP7 AND SWAP1 DUP3 ADD SLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1AC6 JUMPI DUP1 SWAP3 POP PUSH2 0x1AD4 JUMP JUMPDEST PUSH2 0x1AD1 DUP2 PUSH1 0x1 PUSH2 0x2864 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1A83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B2F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x99C PUSH1 0x0 DUP4 DUP4 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x65D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0xE33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1C23 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1BBE SWAP1 PUSH2 0x203F PUSH2 0x1BB9 DUP7 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x207F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C18 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE33 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1C5C SWAP1 PUSH2 0x20B8 PUSH2 0x1BB9 DUP7 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CB6 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1D34 JUMPI PUSH2 0x1D2D DUP4 PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x65D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1D40 SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6C SWAP1 PUSH2 0x2814 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DB9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DB9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x65D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1E00 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1E8A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E80 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1E8A JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EA8 JUMPI PUSH2 0x1EA8 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1EB1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC5 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1EE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF7 PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x1F18 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1F2C JUMPI PUSH2 0x1F2C PUSH2 0x29AE JUMP JUMPDEST SUB PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1F7C JUMPI PUSH2 0x1F7C PUSH2 0x29C4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1FC8 DUP4 DUP4 DUP4 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2019 JUMPI PUSH1 0x0 PUSH2 0x1FE1 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2016 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE58AE93 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2033 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x29DA JUMP JUMPDEST PUSH2 0xDE1 SWAP1 DUP5 DUP5 AND PUSH2 0x2864 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 DUP5 PUSH2 0x29FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 GT ISZERO PUSH2 0x1923 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6DFCC65 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0xD0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20AB PUSH2 0x208D PUSH2 0xAEE JUMP JUMPDEST PUSH2 0x20A3 PUSH2 0x2099 DUP9 PUSH2 0x13C3 JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 SWAP2 SWAP1 PUSH2 0x218C JUMP JUMPDEST SWAP2 POP SWAP2 POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 DUP5 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x20D1 DUP4 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x210B PUSH2 0x1CF6 JUMP JUMPDEST PUSH2 0xE33 DUP4 DUP4 DUP4 PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2138 JUMPI PUSH2 0x2135 PUSH1 0xB PUSH2 0x20B8 PUSH2 0x1BB9 DUP5 PUSH2 0x204B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x215A JUMPI PUSH2 0x2157 PUSH1 0xB PUSH2 0x203F PUSH2 0x1BB9 DUP5 PUSH2 0x204B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xE33 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20AB DUP6 DUP6 DUP6 PUSH2 0x22EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x21ED JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x21E2 SWAP2 SWAP1 PUSH2 0x2864 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x225F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x227B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x229A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x22DF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x23E5 JUMPI PUSH1 0x0 PUSH2 0x230A DUP8 PUSH2 0x1147 PUSH1 0x1 DUP6 PUSH2 0x2877 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH6 0xFFFFFFFFFFFF DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x30 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB AND SWAP1 DUP9 AND DUP3 GT ISZERO PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2520601D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP3 PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2386 JUMPI DUP3 SLOAD PUSH6 0xFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x30 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP10 AND MUL OR DUP4 SSTORE PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP11 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP11 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP14 SLOAD PUSH1 0x1 DUP2 ADD DUP16 SSTORE PUSH1 0x0 DUP16 DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 MLOAD SWAP2 MLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x30 SHL MUL SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 ADD SSTORE JUMPDEST SWAP5 POP DUP6 SWAP4 POP PUSH2 0x20B0 SWAP3 POP POP POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH6 0xFFFFFFFFFFFF DUP1 DUP6 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP1 DUP6 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP9 SLOAD PUSH1 0x1 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP2 DUP3 KECCAK256 SWAP6 MLOAD SWAP3 MLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x30 SHL MUL SWAP2 SWAP1 SWAP4 AND OR SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 POP DUP2 PUSH2 0x20B0 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2466 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x244A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xDE1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2440 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D1 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x251F DUP5 PUSH2 0x2499 JUMP JUMPDEST SWAP3 POP PUSH2 0x252D PUSH1 0x20 DUP6 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE1 DUP3 PUSH2 0x2499 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x2591 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x2440 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x25A3 DUP2 DUP11 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25F5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x25D9 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2631 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x263A DUP8 PUSH2 0x2499 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2656 PUSH1 0x60 DUP9 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x268B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2694 DUP9 PUSH2 0x2499 JUMP JUMPDEST SWAP7 POP PUSH2 0x26A2 PUSH1 0x20 DUP10 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x26BE PUSH1 0x80 DUP10 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F6 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH2 0x2704 PUSH1 0x20 DUP5 ADD PUSH2 0x2499 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x274D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2773 JUMPI PUSH2 0x2773 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x279B JUMPI PUSH2 0x279B PUSH2 0x270D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F0 DUP4 PUSH2 0x2499 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2828 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2848 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x65D JUMPI PUSH2 0x65D PUSH2 0x284E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x65D JUMPI PUSH2 0x65D PUSH2 0x284E JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x28B1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28D0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28BD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28F2 JUMPI PUSH2 0x28F2 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x2906 DUP2 PUSH2 0x2900 DUP5 SLOAD PUSH2 0x2814 JUMP JUMPDEST DUP5 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x293B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2923 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x28D0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x296A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x294B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2988 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2A1C JUMPI PUSH2 0x2A1C PUSH2 0x284E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2A1C JUMPI PUSH2 0x2A1C PUSH2 0x284E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xBB 0xCA PUSH32 0xB1DA3B0D11549A657B8EF1E241F943AFBA40CAF508ADB37BB364F83664736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"445:5140:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:32;;1262:22;1244:41;;1232:2;1217:18;3998:186:7;1104:187:32;2928:224:31;;;;;;:::i;:::-;;:::i;:::-;;2849:97:7;2927:12;;2849:97;;;1720:25:32;;;1708:2;1693:18;2849:97:7;1574:177:32;4776:244:7;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;2231:36:32;;2219:2;2204:18;2707:82:7;2089:184:32;612:53:31;;649:16;612:53;;2659:112:11;;;:::i;4298:198:2:-;;;;;;:::i;:::-;;:::i;3756:99:31:-;;;:::i;3636:65::-;;;:::i;1715:226::-;;;;;;:::i;:::-;;:::i;2028:388::-;;;;;;:::i;:::-;;:::i;834:30::-;;;;;;;;;3040:272:2;;;:::i;5583:117::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5674:19:2;;;5648:7;5674:19;;;:10;:19;;;;;;;;5583:117;;;;-1:-1:-1;;;;;3000:32:32;;;2982:51;;2970:2;2955:18;5583:117:2;2836:203:32;5782:138:2;;;;;;:::i;:::-;;:::i;1850:84:18:-;1920:7;;;;1850:84;;3237:126:12;;;;;;:::i;:::-;;:::i;:::-;;;3218:10:32;3206:23;;;3188:42;;3176:2;3161:18;3237:126:12;3044:192:32;3004:116:7;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:7;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;1021:158:9:-;;;;;;:::i;:::-;;:::i;5405:177:31:-;;;;;;:::i;:::-;;:::i;3523:61::-;;;:::i;5144:557:23:-;;;:::i;:::-;;;;;;;;;;;;;:::i;691:48:31:-;;729:10;691:48;;2530:290;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:0;1638:85;;5132:175:2;;;;;;:::i;:::-;;:::i;2789:96::-;;;:::i;:::-;;;4679:14:32;4667:27;;;4649:46;;4637:2;4622:18;2789:96:2;4505:196:32;1981:93:7;;;:::i;3778:135:2:-;;;;;;:::i;:::-;;:::i;3315:178:7:-;;;;;;:::i;:::-;;:::i;795:32:31:-;;;;;;5998:554:2;;;;;;:::i;:::-;;:::i;1683:672:11:-;;;;;;:::i;:::-;;:::i;3551:140:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:7;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;3244:227:31;;;;;;:::i;:::-;;:::i;3440:163:12:-;;;;;;:::i;:::-;;:::i;:::-;;;;7923:13:32;;7938:14;7919:34;7901:53;;8014:4;8002:17;;;7996:24;-1:-1:-1;;;;;7992:50:32;7970:20;;;7963:80;;;;7874:18;3440:163:12;7693:356:32;2543:215:0;;;;;;:::i;:::-;;:::i;1779:89:7:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:15;4125:31:7;735:10:15;4141:7:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;2928:224:31:-;1531:13:0;:11;:13::i;:::-;3021:18:31::1;::::0;;3050:30;::::1;;-1:-1:-1::0;;3050:30:31;::::1;::::0;::::1;::::0;;;3096:48:::1;::::0;;3021:18:::1;::::0;;::::1;8626:14:32::0;;8619:22;8601:41;;8673:2;8658:18;;8651:50;;;;3096:48:31::1;::::0;8574:18:32;3096:48:31::1;;;;;;;;2993:159;2928:224:::0;:::o;4776:244:7:-;4863:4;735:10:15;4919:37:7;4935:4;735:10:15;4950:5:7;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:7;;4776:244;-1:-1:-1;;;;4776:244:7:o;2659:112:11:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;4298:198:2:-;4385:7;4411:78;4459:29;4478:9;4459:18;:29::i;:::-;-1:-1:-1;;;;;4411:29:2;;;;;;:20;:29;;;;;;:47;:78::i;:::-;-1:-1:-1;;;;;4404:85:2;;4298:198;-1:-1:-1;;;4298:198:2:o;3756:99:31:-;3797:13;3830:17;3823:24;;;;;:::i;3636:65::-;1531:13:0;:11;:13::i;:::-;3683:10:31::1;:8;:10::i;:::-;3636:65::o:0;1715:226::-;1531:13:0;:11;:13::i;:::-;649:16:31::1;1818:6;1802:13;2927:12:7::0;;;2849:97;1802:13:31::1;:22;;;;:::i;:::-;:36;;1794:67;;;::::0;-1:-1:-1;;;1794:67:31;;9176:2:32;1794:67:31::1;::::0;::::1;9158:21:32::0;9215:2;9195:18;;;9188:30;-1:-1:-1;;;9234:18:32;;;9227:48;9292:18;;1794:67:31::1;;;;;;;;;1872:22;1883:2;1887:6;1872:10;:22::i;:::-;1922:2;-1:-1:-1::0;;;;;1910:23:31::1;;1926:6;1910:23;;;;1720:25:32::0;;1708:2;1693:18;;1574:177;1910:23:31::1;;;;;;;;1715:226:::0;;:::o;2028:388::-;2147:10;2113:21;3095:18:7;;;;;;;;;;;2177:23:31;;;;2169:70;;;;-1:-1:-1;;;2169:70:31;;9523:2:32;2169:70:31;;;9505:21:32;9562:2;9542:18;;;9535:30;9601:34;9581:18;;;9574:62;-1:-1:-1;;;9652:18:32;;;9645:32;9694:19;;2169:70:31;9321:398:32;2169:70:31;729:10;2258:22;2274:6;2258:13;:22;:::i;:::-;:37;;2250:82;;;;-1:-1:-1;;;2250:82:31;;10059:2:32;2250:82:31;;;10041:21:32;;;10078:18;;;10071:30;10137:34;10117:18;;;10110:62;10189:18;;2250:82:31;9857:356:32;2250:82:31;2343:18;2354:6;2343:10;:18::i;:::-;2377:31;;1720:25:32;;;2389:10:31;;2377:31;;1708:2:32;1693:18;2377:31:31;1574:177:32;3040:272:2;3091:13;3180:18;:16;:18::i;:::-;3169:29;;:7;:5;:7::i;:::-;:29;;;3165:93;;3221:26;;-1:-1:-1;;;3221:26:2;;;;;;;;;;;3165:93;-1:-1:-1;3267:38:2;;;;;;;;;;;;;;;;;;3040:272::o;5782:138::-;735:10:15;5884:29:2;735:10:15;5903:9:2;5884;:29::i;:::-;5834:86;5782:138;:::o;3237:126:12:-;3307:6;3332:24;3348:7;3332:15;:24::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:9:-:0;1096:45;1112:7;735:10:15;1135:5:9;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;5405:177:31:-;5523:7;5555:19;5568:5;5555:12;:19::i;3523:61::-;1531:13:0;:11;:13::i;:::-;3568:8:31::1;:6;:8::i;5144:557:23:-:0;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:23;;;-1:-1:-1;5482:212:23;;-1:-1:-1;5590:13:23;;-1:-1:-1;5625:4:23;;-1:-1:-1;5652:1:23;-1:-1:-1;5668:16:23;-1:-1:-1;5482:212:23;-1:-1:-1;5144:557:23:o;2530:290:31:-;1531:13:0;:11;:13::i;:::-;2627:1:31::1;2615:9;:13;2607:55;;;::::0;-1:-1:-1;;;2607:55:31;;10420:2:32;2607:55:31::1;::::0;::::1;10402:21:32::0;10459:2;10439:18;;;10432:30;10498:31;10478:18;;;10471:59;10547:18;;2607:55:31::1;10218:353:32::0;2607:55:31::1;2693:17;::::0;;2721:29;;;;2766:46:::1;::::0;;10750:25:32;;;10806:2;10791:18;;10784:34;;;2766:46:31::1;::::0;10723:18:32;2766:46:31::1;10576:248:32::0;5132:175:2;5208:7;5234:66;5270:29;5289:9;5270:18;:29::i;:::-;5234:17;;:35;:66::i;:::-;-1:-1:-1;;;;;5227:73:2;;5132:175;-1:-1:-1;;5132:175:2:o;2789:96::-;2835:6;2860:18;:16;:18::i;1981:93:7:-;2028:13;2060:7;2053:14;;;;;:::i;3778:135:2:-;-1:-1:-1;;;;;3868:29:2;;3842:7;3868:29;;;:20;:29;;;;;:38;;:36;:38::i;3315:178:7:-;3384:4;735:10:15;3438:27:7;735:10:15;3455:2:7;3459:5;3438:9;:27::i;5998:554:2:-;6203:6;6185:15;:24;6181:91;;;6232:29;;-1:-1:-1;;;6232:29:2;;;;;1720:25:32;;;1693:18;;6232:29:2;1574:177:32;6181:91:2;6352:57;;;2063:71;6352:57;;;11060:25:32;-1:-1:-1;;;;;11121:32:32;;11101:18;;;11094:60;;;;11170:18;;;11163:34;;;11213:18;;;11206:34;;;6281:14:2;;6298:168;;6325:86;;11032:19:32;;6352:57:2;;;;;;;;;;;;6342:68;;;;;;6325:16;:86::i;:::-;6425:1;6440;6455;6298:13;:168::i;:::-;6281:185;;6476:31;6493:6;6501:5;6476:16;:31::i;:::-;6517:28;6527:6;6535:9;6517;:28::i;:::-;6171:381;5998:554;;;;;;:::o;1683:672:11:-;1904:8;1886:15;:26;1882:97;;;1935:33;;-1:-1:-1;;;1935:33:11;;;;;1720:25:32;;;1693:18;;1935:33:11;1574:177:32;1882:97:11;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;-1:-1:-1;;;;;1121:14:16;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2071:16:11;2020:78;;;;;;11538:25:32;;;;-1:-1:-1;;;;;11637:15:32;;;11617:18;;;11610:43;11689:15;;;;11669:18;;;11662:43;11721:18;;;11714:34;11764:19;;;11757:35;11808:19;;;11801:35;;;11510:19;;2020:78:11;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;-1:-1:-1;;;;;2223:15:11;:6;-1:-1:-1;;;;;2223:15:11;;2219:88;;2261:35;;-1:-1:-1;;;2261:35:11;;-1:-1:-1;;;;;12077:15:32;;;2261:35:11;;;12059:34:32;12129:15;;12109:18;;;12102:43;11994:18;;2261:35:11;11847:304:32;2219:88:11;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;3244:227:31:-;1531:13:0;:11;:13::i;:::-;3356:1:31::1;3334:11;3328:25;:29;3320:61;;;::::0;-1:-1:-1;;;3320:61:31;;12358:2:32;3320:61:31::1;::::0;::::1;12340:21:32::0;12397:2;12377:18;;;12370:30;-1:-1:-1;;;12416:18:32;;;12409:49;12475:18;;3320:61:31::1;12156:343:32::0;3320:61:31::1;3392:17;:31;3412:11:::0;3392:17;:31:::1;:::i;:::-;;3439:24;3451:11;3439:24;;;;;;:::i;:::-;;;;;;;;3244:227:::0;:::o;3440:163:12:-;-1:-1:-1;;;;;;;;;;;;;;;;;3570:26:12;3583:7;3592:3;3570:12;:26::i;:::-;3563:33;3440:163;-1:-1:-1;;;3440:163:12:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2982:51:32::0;2955:18;;2672:31:0::1;2836:203:32::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:7:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;;;;;735:10:15;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:15;1901:40:0;;;2982:51:32;2955:18;;1901:40:0;2836:203:32;10415:476:7;-1:-1:-1;;;;;3657:18:7;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:7;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:7;;-1:-1:-1;;;;;14928:32:32;;10687:60:7;;;14910:51:32;14977:18;;;14970:34;;;15020:18;;;15013:34;;;14883:18;;10687:60:7;14708:345:32;10632:130:7;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:7;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:7;;5544:1;5517:30;;;2982:51:32;2955:18;;5517:30:7;2836:203:32;5472:86:7;-1:-1:-1;;;;;5571:16:7;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:7;;5639:1;5610:32;;;2982:51:32;2955:18;;5610:32:7;2836:203:32;5567:86:7;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3845:262:23:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:23;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:23;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;18048:25:32;4226:11:23;18089:18:32;;;18082:34;;;;4239:14:23;18132:18:32;;;18125:34;4255:13:23;18175:18:32;;;18168:34;4278:4:23;18218:19:32;;;18211:61;4168:7:23;;18020:19:32;;4204:80:23;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3415:273:2;3485:6;3503:23;3529:7;:5;:7::i;:::-;3503:33;;3563:16;3550:29;;:9;:29;3546:90;;3588:48;;-1:-1:-1;;;3588:48:2;;;;;15230:25:32;;;15303:14;15291:27;;15271:18;;;15264:55;15203:18;;3588:48:2;15058:267:32;3546:90:2;3653:28;3671:9;3653:17;:28::i;9584:606:28:-;9702:24;;9669:7;;;9702:24;9801:1;9795:7;;9791:234;;;9818:11;9838:14;9848:3;9838:9;:14::i;:::-;9832:20;;:3;:20;:::i;:::-;14399:28;14462:20;;;14527:4;14514:18;;9818:34;;-1:-1:-1;14510:28:28;;9876:42;;;;;9870:48;;;;9866:149;;;9945:3;9938:10;;9866:149;;;9993:7;:3;9999:1;9993:7;:::i;:::-;9987:13;;9866:149;9804:221;9791:234;10035:11;10049:53;10068:4;10087:3;10092;10097:4;10049:18;:53::i;:::-;10035:67;-1:-1:-1;10120:8:28;;:63;;10135:41;10149:4;10168:7;10174:1;10168:3;:7;:::i;:::-;14399:28;14462:20;;;14527:4;14514:18;;;14510:28;;14289:265;10135:41;:48;-1:-1:-1;;;10135:48:28;;-1:-1:-1;;;;;10135:48:28;10120:63;;;10131:1;10120:63;10113:70;9584:606;-1:-1:-1;;;;;;;9584:606:28:o;2710:117:18:-;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:18::1;::::0;;2798:22:::1;735:10:15::0;2807:12:18::1;2798:22;::::0;-1:-1:-1;;;;;3000:32:32;;;2982:51;;2970:2;2955:18;2798:22:18::1;;;;;;;2710:117::o:0;241:93:30:-;309:17;315:2;319:6;309:5;:17::i;618:87:9:-;672:26;735:10:15;692:5:9;672;:26::i;931:109:29:-;977:6;1002:31;1020:12;1002:17;:31::i;6730:312:2:-;-1:-1:-1;;;;;5674:19:2;;;6812;5674;;;:10;:19;;;;;;;;6862:31;;;-1:-1:-1;;;;;;6862:31:2;;;;;;;6909:48;;5674:19;;;;;6862:31;5674:19;;;;6909:48;;6812:19;6909:48;6967:68;6986:11;6999:9;7010:24;7026:7;7010:15;:24::i;:::-;6967:18;:68::i;8625:162::-;-1:-1:-1;;;;;8741:29:2;;8698:6;8741:29;;;:20;:29;;;;;11240:24:28;8723:57:2;;:17;:57::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7984:206:7:-;-1:-1:-1;;;;;8054:21:7;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:7;;8125:1;8098:30;;;2982:51:32;2955:18;;8098:30:7;2836:203:32;8050:89:7;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;2409:143:11:-;-1:-1:-1;;;;;624:14:16;;2500:7:11;624:14:16;;;:7;:14;;;;;;2526:19:11;538:107:16;2463:115:18;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:18::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:15::0;;656:96;6021:126:23;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;10310:206:28:-;10405:24;;10372:7;;10446:8;;:63;;10461:41;10475:4;10494:7;10500:1;10494:3;:7;:::i;10461:41::-;:48;-1:-1:-1;;;10461:48:28;;-1:-1:-1;;;;;10461:48:28;10446:63;;;10457:1;10439:70;10310:206;-1:-1:-1;;;10310:206:28:o;4917:176:23:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3501:4:24;3495:11;-1:-1:-1;;;3519:23:24;;3571:4;3562:14;;3555:39;;;;3623:4;3614:14;;3607:34;3679:4;3664:20;;;3326:374;6887:260:22;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:22;;6887:260;-1:-1:-1;;;;;;6887:260:22:o;1265:222:16:-;-1:-1:-1;;;;;1121:14:16;;1348:15;1121:14;;;:7;:14;;;;;:16;;;;;;;;1396;;;1392:89;;1435:35;;-1:-1:-1;;;1435:35:16;;-1:-1:-1;;;;;15522:32:32;;1435:35:16;;;15504:51:32;15571:18;;;15564:34;;;15477:18;;1435:35:16;15330:274:32;8864:199:2;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;9019:29:2;;;;;;:20;:29;;;;;:37;;9052:3;9019:32;:37::i;9701:432:7:-;-1:-1:-1;;;;;9813:19:7;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:7;;9884:1;9855:32;;;2982:51:32;2955:18;;9855:32:7;2836:203:32;9809:89:7;-1:-1:-1;;;;;9911:21:7;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:7;;9983:1;9955:31;;;2982:51:32;2955:18;;9955:31:7;2836:203:32;9907:90:7;-1:-1:-1;;;;;10006:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:7;10094:5;-1:-1:-1;;;;;10085:31:7;;10110:5;10085:31;;;;1720:25:32;;1708:2;1693:18;;1574:177;10085:31:7;;;;;;;;9701:432;;;;:::o;3933:1464:31:-;1920:7:18;;;;4104:9:31;4096:49;;;;-1:-1:-1;;;4096:49:31;;15811:2:32;4096:49:31;;;15793:21:32;15850:2;15830:18;;;15823:30;15889:29;15869:18;;;15862:57;15936:18;;4096:49:31;15609:351:32;4096:49:31;4172:2;-1:-1:-1;;;;;4164:10:31;:4;-1:-1:-1;;;;;4164:10:31;;4156:49;;;;-1:-1:-1;;;4156:49:31;;16167:2:32;4156:49:31;;;16149:21:32;16206:2;16186:18;;;16179:30;16245:28;16225:18;;;16218:56;16291:18;;4156:49:31;15965:350:32;4156:49:31;-1:-1:-1;;;;;4230:18:31;;;;;;:38;;-1:-1:-1;;;;;;4252:16:31;;;;4230:38;4226:1113;;;4359:1;4351:5;:9;4343:51;;;;-1:-1:-1;;;4343:51:31;;10420:2:32;4343:51:31;;;10402:21:32;10459:2;10439:18;;;10432:30;10498:31;10478:18;;;10471:59;10547:18;;4343:51:31;10218:353:32;4343:51:31;4427:18;;;;4423:125;;;4483:17;;4474:5;:26;;4466:66;;;;-1:-1:-1;;;4466:66:31;;16522:2:32;4466:66:31;;;16504:21:32;16561:2;16541:18;;;16534:30;16600:29;16580:18;;;16573:57;16647:18;;4466:66:31;16320:351:32;4466:66:31;-1:-1:-1;;;;;3095:18:7;;4614:19:31;3095:18:7;;;;;;;;;;;4674:20:31;;;;4666:53;;;;-1:-1:-1;;;4666:53:31;;16878:2:32;4666:53:31;;;16860:21:32;16917:2;16897:18;;;16890:30;-1:-1:-1;;;16936:18:32;;;16929:50;16996:18;;4666:53:31;16676:344:32;4666:53:31;729:10;4742:19;4756:5;4742:11;:19;:::i;:::-;:34;;4734:79;;;;-1:-1:-1;;;4734:79:31;;10059:2:32;4734:79:31;;;10041:21:32;;;10078:18;;;10071:30;10137:34;10117:18;;;10110:62;10189:18;;4734:79:31;9857:356:32;4734:79:31;-1:-1:-1;;;;;3095:18:7;;4842:17:31;3095:18:7;;;;;;;;;;;4894:13:31;;4890:438;;729:10;5044:9;:24;;5036:62;;;;-1:-1:-1;;;5036:62:31;;17227:2:32;5036:62:31;;;17209:21:32;17266:2;17246:18;;;17239:30;17305:27;17285:18;;;17278:55;17350:18;;5036:62:31;17025:349:32;5036:62:31;4890:438;;;729:10;5246:5;:20;;5238:74;;;;-1:-1:-1;;;5238:74:31;;17581:2:32;5238:74:31;;;17563:21:32;17620:2;17600:18;;;17593:30;17659:34;17639:18;;;17632:62;-1:-1:-1;;;17710:18:32;;;17703:39;17759:19;;5238:74:31;17379:405:32;5238:74:31;4270:1069;;4226:1113;5359:30;5373:4;5379:2;5383:5;5359:13;:30::i;14296:213:26:-;14352:6;14382:16;14374:24;;14370:103;;;14421:41;;-1:-1:-1;;;14421:41:26;;14452:2;14421:41;;;18464:36:32;18516:18;;;18509:34;;;18437:18;;14421:41:26;18283:266:32;14370:103:26;-1:-1:-1;14496:5:26;14296:213::o;18080:5181:25:-;18128:7;18246:1;18241;:6;18237:53;;-1:-1:-1;18274:1:25;18080:5181::o;18237:53::-;19230:1;19258;-1:-1:-1;;;19278:16:25;;19274:92;;19321:3;19314:10;;;;;19349:2;19342:9;19274:92;19390:7;19383:2;:15;19379:90;;19425:2;19418:9;;;;;19452:2;19445:9;19379:90;19493:7;19486:2;:15;19482:90;;19528:2;19521:9;;;;;19555:2;19548:9;19482:90;19596:7;19589:2;:15;19585:89;;19631:2;19624:9;;;;;19658:1;19651:8;19585:89;19698:6;19691:2;:14;19687:87;;19732:1;19725:8;;;;;19758:1;19751:8;19687:87;19798:6;19791:2;:14;19787:87;;19832:1;19825:8;;;;;19858:1;19851:8;19787:87;19898:6;19891:2;:14;19887:61;;19932:1;19925:8;19887:61;20374:1;:6;20385:1;20373:13;;;;;22284:1;20373:13;22284:6;;;;:::i;:::-;;22279:2;:11;22278:18;;22273:23;;22404:1;22397:2;22393:1;:6;;;;;:::i;:::-;;22388:2;:11;22387:18;;22382:23;;22515:1;22508:2;22504:1;:6;;;;;:::i;:::-;;22499:2;:11;22498:18;;22493:23;;22624:1;22617:2;22613:1;:6;;;;;:::i;:::-;;22608:2;:11;22607:18;;22602:23;;22734:1;22727:2;22723:1;:6;;;;;:::i;:::-;;22718:2;:11;22717:18;;22712:23;;22844:1;22837:2;22833:1;:6;;;;;:::i;:::-;;22828:2;:11;22827:18;;22822:23;;23216:28;23241:2;23237:1;:6;;;;;:::i;:::-;;23232:11;;;34795:145:26;23216:28:25;23211:33;;;18080:5181;-1:-1:-1;;;18080:5181:25:o;12929:433:28:-;13086:7;13105:230;13118:4;13112:3;:10;13105:230;;;13138:11;13152:23;13165:3;13170:4;13152:12;:23::i;:::-;14399:28;14462:20;;;14527:4;14514:18;;13138:37;;-1:-1:-1;13193:35:28;;;;14510:28;;13193:29;;;:35;13189:136;;;13255:3;13248:10;;13189:136;;;13303:7;:3;13309:1;13303:7;:::i;:::-;13297:13;;13189:136;13124:211;13105:230;;;-1:-1:-1;13351:4:28;12929:433;-1:-1:-1;;;12929:433:28:o;2202:126:18:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:18;;;;;;;;;;;7458:208:7;-1:-1:-1;;;;;7528:21:7;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:7;;7601:1;7572:32;;;2982:51:32;2955:18;;7572:32:7;2836:203:32;7524:91:7;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;3029:133:12:-;-1:-1:-1;;;;;3095:18:7;;3111:7:12;3095:18:7;;;;;;;;;;;3137::12;3004:116:7;7761:789:2;7870:2;-1:-1:-1;;;;;7862:10:2;:4;-1:-1:-1;;;;;7862:10:2;;;:24;;;;;7885:1;7876:6;:10;7862:24;7858:686;;;-1:-1:-1;;;;;7906:18:2;;;7902:315;;-1:-1:-1;;;;;8010:26:2;;7945:16;8010:26;;;:20;:26;;;;;7945:16;;7983:150;;8058:9;8089:26;8108:6;8089:18;:26::i;:::-;7983:5;:150::i;:::-;-1:-1:-1;;;;;7944:189:2;;;-1:-1:-1;;;;;7944:189:2;;;8177:4;-1:-1:-1;;;;;8156:46:2;;8183:8;8193;8156:46;;;;;;10750:25:32;;;10806:2;10791:18;;10784:34;10738:2;10723:18;;10576:248;8156:46:2;;;;;;;;7926:291;;7902:315;-1:-1:-1;;;;;8234:16:2;;;8230:304;;-1:-1:-1;;;;;8336:24:2;;8271:16;8336:24;;;:20;:24;;;;;8271:16;;8309:143;;8382:4;8408:26;8427:6;8408:18;:26::i;8309:143::-;-1:-1:-1;;;;;8270:182:2;;;-1:-1:-1;;;;;8270:182:2;;;8496:2;-1:-1:-1;;;;;8475:44:2;;8500:8;8510;8475:44;;;;;;10750:25:32;;;10806:2;10791:18;;10784:34;10738:2;10723:18;;10576:248;8475:44:2;;;;;;;;8252:282;;7761:789;;;:::o;15296:213:26:-;15352:6;15382:16;15374:24;;15370:103;;;15421:41;;-1:-1:-1;;;15421:41:26;;15452:2;15421:41;;;18464:36:32;18516:18;;;18509:34;;;18437:18;;15421:41:26;18283:266:32;2002:128:18;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:18;;;;;;;;;;;3358:267:19;3452:13;1390:66;3481:46;;3477:142;;3550:15;3559:5;3550:8;:15::i;:::-;3543:22;;;;3477:142;3603:5;3596:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5203:1551:22;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:22;;-1:-1:-1;6385:30:22;;-1:-1:-1;6417:1:22;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;19184:25:32;;;19257:4;19245:17;;19225:18;;;19218:45;;;;19279:18;;;19272:34;;;19322:18;;;19315:34;;;6541:24:22;;19156:19:32;;6541:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:22;;-1:-1:-1;;6541:24:22;;;-1:-1:-1;;;;;;;6579:20:22;;6575:113;;-1:-1:-1;6631:1:22;;-1:-1:-1;6635:29:22;;-1:-1:-1;6631:1:22;;-1:-1:-1;6615:62:22;;6575:113;6706:6;-1:-1:-1;6714:20:22;;-1:-1:-1;6714:20:22;;-1:-1:-1;5203:1551:22;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:22;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:22;;;;;1720:25:32;;;1693:18;;7634:46:22;1574:177:32;7563:243:22;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:22;;;;;1720:25:32;;;1693:18;;7763:32:22;1574:177:32;11343:138:28;-1:-1:-1;;;;;;;;;;;;;;;;;11452:4:28;:17;;11470:3;11452:22;;;;;;;;;;:::i;:::-;;;;;;;;;;11445:29;;;;;;;;;11452:22;;11445:29;;;;;;-1:-1:-1;;;11445:29:28;;-1:-1:-1;;;;;11445:29:28;;;;;;;;;11343:138;-1:-1:-1;;;11343:138:28:o;2356:413:12:-;2450:30;2464:4;2470:2;2474:5;2450:13;:30::i;:::-;-1:-1:-1;;;;;2494:18:12;;2490:226;;2528:14;2545:13;2927:12:7;;;2849:97;2545:13:12;2528:30;-1:-1:-1;;;;;;2616:12:12;;;2612:94;;;2655:36;;-1:-1:-1;;;2655:36:12;;;;;10750:25:32;;;10791:18;;;10784:34;;;10723:18;;2655:36:12;10576:248:32;2612:94:12;2514:202;;2490:226;2725:37;2746:4;2752:2;2756:5;2725:20;:37::i;3595:153:25:-;3657:7;3730:11;3740:1;3731:5;;;3730:11;:::i;:::-;3720:21;;3721:5;;;3720:21;:::i;9450:101:2:-;9513:7;9539:5;9543:1;9539;:5;:::i;4174:218:26:-;4231:7;-1:-1:-1;;;;;4254:25:26;;4250:105;;;4302:42;;-1:-1:-1;;;4302:42:26;;4333:3;4302:42;;;18464:36:32;18516:18;;;18509:34;;;18437:18;;4302:42:26;18283:266:32;9069:273:2;9236:16;9254;9289:46;9300:7;:5;:7::i;:::-;9309:25;9312:14;:5;:12;:14::i;:::-;9328:5;9309:2;:25;;:::i;:::-;9289:5;;:46;:10;:46::i;:::-;9282:53;;;;9069:273;;;;;;;:::o;9348:96::-;9406:7;9432:5;9436:1;9432;:5;:::i;2078:378:19:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:19;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:19;;;-1:-1:-1;2408:4:19;2399:14;;2392:28;;;;-1:-1:-1;2363:16:19;2078:378::o;1113:145:10:-;1474:19:18;:17;:19::i;:::-;1221:30:10::1;1235:4;1241:2;1245:5;1221:13;:30::i;7276:399:2:-:0;-1:-1:-1;;;;;7379:18:2;;7375:107;;7413:58;7419:17;7438:4;7444:26;7463:6;7444:18;:26::i;7413:58::-;;;7375:107;-1:-1:-1;;;;;7495:16:2;;7491:110;;7527:63;7533:17;7552:9;7563:26;7582:6;7563:18;:26::i;7527:63::-;;;7491:110;-1:-1:-1;;;;;5674:19:2;;;5648:7;5674:19;;;:10;:19;;;;;;;;;;;;;;;7610:58;;5674:19;;;;;7661:6;7610:18;:58::i;8145:210:28:-;8257:16;;8310:38;8318:4;8337:3;8342:5;8310:7;:38::i;2528:245:19:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:19;;;;;;;;;;;6008:1107:7;-1:-1:-1;;;;;6097:18:7;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:7;;-1:-1:-1;6093:540:7;;-1:-1:-1;;;;;6307:15:7;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:7;;-1:-1:-1;;;;;14928:32:32;;6386:50:7;;;14910:51:32;14977:18;;;14970:34;;;15020:18;;;15013:34;;;14883:18;;6386:50:7;14708:345:32;6336:115:7;-1:-1:-1;;;;;6571:15:7;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:7;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:7;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:7;7092:4;-1:-1:-1;;;;;7083:25:7;;7102:5;7083:25;;;;1720::32;;1708:2;1693:18;;1574:177;7083:25:7;;;;;;;;6008:1107;;;:::o;11657:922:28:-;11838:11;;11778:16;;;;11864:7;;11860:713;;11887:26;11916:28;11930:4;11936:7;11942:1;11936:3;:7;:::i;11916:28::-;11975:9;;;;-1:-1:-1;11975:9:28;;;;;-1:-1:-1;;;12018:11:28;;-1:-1:-1;;;;;12018:11:28;;12103:13;;;;12099:89;;;12143:30;;-1:-1:-1;;;12143:30:28;;;;;;;;;;;12099:89;12262:3;12251:14;;:7;:14;;;12247:163;;12285:19;;;;-1:-1:-1;;;;;;;;12285:19:28;;;;;;12247:163;;;12353:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;12353:41:28;;;;;;;;;;12343:52;;;;;;;-1:-1:-1;12343:52:28;;;;;;;;;;;;;;-1:-1:-1;;;12343:52:28;;;;;;;;;;12247:163;12431:9;-1:-1:-1;12442:5:28;;-1:-1:-1;12423:25:28;;-1:-1:-1;;;12423:25:28;11860:713;-1:-1:-1;;12489:41:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;12489:41:28;;;;;;;;;;12479:52;;;;;;;-1:-1:-1;12479:52:28;;;;;;;;;;;;;-1:-1:-1;;;12479:52:28;;;;;;;;;;;;-1:-1:-1;;12523:5:28;12545:17;;14:423:32;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:173::-;735:20;;-1:-1:-1;;;;;784:31:32;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:32:o;1296:273::-;1352:6;1405:2;1393:9;1384:7;1380:23;1376:32;1373:52;;;1421:1;1418;1411:12;1373:52;1460:9;1447:23;1513:5;1506:13;1499:21;1492:5;1489:32;1479:60;;1535:1;1532;1525:12;1756:328;1833:6;1841;1849;1902:2;1890:9;1881:7;1877:23;1873:32;1870:52;;;1918:1;1915;1908:12;1870:52;1941:29;1960:9;1941:29;:::i;:::-;1931:39;;1989:38;2023:2;2012:9;2008:18;1989:38;:::i;:::-;1979:48;;2074:2;2063:9;2059:18;2046:32;2036:42;;1756:328;;;;;:::o;2460:180::-;2519:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;-1:-1:-1;2611:23:32;;2460:180;-1:-1:-1;2460:180:32:o;2645:186::-;2704:6;2757:2;2745:9;2736:7;2732:23;2728:32;2725:52;;;2773:1;2770;2763:12;2725:52;2796:29;2815:9;2796:29;:::i;3241:1259::-;3647:3;3642;3638:13;3630:6;3626:26;3615:9;3608:45;3589:4;3672:2;3710:3;3705:2;3694:9;3690:18;3683:31;3737:46;3778:3;3767:9;3763:19;3755:6;3737:46;:::i;:::-;3831:9;3823:6;3819:22;3814:2;3803:9;3799:18;3792:50;3865:33;3891:6;3883;3865:33;:::i;:::-;3929:2;3914:18;;3907:34;;;-1:-1:-1;;;;;3978:32:32;;3972:3;3957:19;;3950:61;3998:3;4027:19;;4020:35;;;4092:22;;;4086:3;4071:19;;4064:51;4164:13;;4186:22;;;4262:15;;;;-1:-1:-1;4224:15:32;;;;-1:-1:-1;4305:169:32;4319:6;4316:1;4313:13;4305:169;;;4380:13;;4368:26;;4449:15;;;;4414:12;;;;4341:1;4334:9;4305:169;;;-1:-1:-1;4491:3:32;;3241:1259;-1:-1:-1;;;;;;;;;;;;3241:1259:32:o;4706:156::-;4772:20;;4832:4;4821:16;;4811:27;;4801:55;;4852:1;4849;4842:12;4867:531;4969:6;4977;4985;4993;5001;5009;5062:3;5050:9;5041:7;5037:23;5033:33;5030:53;;;5079:1;5076;5069:12;5030:53;5102:29;5121:9;5102:29;:::i;:::-;5092:39;;5178:2;5167:9;5163:18;5150:32;5140:42;;5229:2;5218:9;5214:18;5201:32;5191:42;;5252:36;5284:2;5273:9;5269:18;5252:36;:::i;:::-;5242:46;;5335:3;5324:9;5320:19;5307:33;5297:43;;5387:3;5376:9;5372:19;5359:33;5349:43;;4867:531;;;;;;;;:::o;5403:606::-;5514:6;5522;5530;5538;5546;5554;5562;5615:3;5603:9;5594:7;5590:23;5586:33;5583:53;;;5632:1;5629;5622:12;5583:53;5655:29;5674:9;5655:29;:::i;:::-;5645:39;;5703:38;5737:2;5726:9;5722:18;5703:38;:::i;:::-;5693:48;;5788:2;5777:9;5773:18;5760:32;5750:42;;5839:2;5828:9;5824:18;5811:32;5801:42;;5862:37;5894:3;5883:9;5879:19;5862:37;:::i;:::-;5852:47;;5946:3;5935:9;5931:19;5918:33;5908:43;;5998:3;5987:9;5983:19;5970:33;5960:43;;5403:606;;;;;;;;;;:::o;6014:260::-;6082:6;6090;6143:2;6131:9;6122:7;6118:23;6114:32;6111:52;;;6159:1;6156;6149:12;6111:52;6182:29;6201:9;6182:29;:::i;:::-;6172:39;;6230:38;6264:2;6253:9;6249:18;6230:38;:::i;:::-;6220:48;;6014:260;;;;;:::o;6279:127::-;6340:10;6335:3;6331:20;6328:1;6321:31;6371:4;6368:1;6361:15;6395:4;6392:1;6385:15;6411:922;6480:6;6533:2;6521:9;6512:7;6508:23;6504:32;6501:52;;;6549:1;6546;6539:12;6501:52;6589:9;6576:23;6618:18;6659:2;6651:6;6648:14;6645:34;;;6675:1;6672;6665:12;6645:34;6713:6;6702:9;6698:22;6688:32;;6758:7;6751:4;6747:2;6743:13;6739:27;6729:55;;6780:1;6777;6770:12;6729:55;6816:2;6803:16;6838:2;6834;6831:10;6828:36;;;6844:18;;:::i;:::-;6919:2;6913:9;6887:2;6973:13;;-1:-1:-1;;6969:22:32;;;6993:2;6965:31;6961:40;6949:53;;;7017:18;;;7037:22;;;7014:46;7011:72;;;7063:18;;:::i;:::-;7103:10;7099:2;7092:22;7138:2;7130:6;7123:18;7178:7;7173:2;7168;7164;7160:11;7156:20;7153:33;7150:53;;;7199:1;7196;7189:12;7150:53;7255:2;7250;7246;7242:11;7237:2;7229:6;7225:15;7212:46;7300:1;7278:15;;;7295:2;7274:24;7267:35;;;;-1:-1:-1;7282:6:32;6411:922;-1:-1:-1;;;;;6411:922:32:o;7338:350::-;7405:6;7413;7466:2;7454:9;7445:7;7441:23;7437:32;7434:52;;;7482:1;7479;7472:12;7434:52;7505:29;7524:9;7505:29;:::i;:::-;7495:39;;7584:2;7573:9;7569:18;7556:32;7628:10;7621:5;7617:22;7610:5;7607:33;7597:61;;7654:1;7651;7644:12;7597:61;7677:5;7667:15;;;7338:350;;;;;:::o;8054:380::-;8133:1;8129:12;;;;8176;;;8197:61;;8251:4;8243:6;8239:17;8229:27;;8197:61;8304:2;8296:6;8293:14;8273:18;8270:38;8267:161;;8350:10;8345:3;8341:20;8338:1;8331:31;8385:4;8382:1;8375:15;8413:4;8410:1;8403:15;8267:161;;8054:380;;;:::o;8712:127::-;8773:10;8768:3;8764:20;8761:1;8754:31;8804:4;8801:1;8794:15;8828:4;8825:1;8818:15;8844:125;8909:9;;;8930:10;;;8927:36;;;8943:18;;:::i;9724:128::-;9791:9;;;9812:11;;;9809:37;;;9826:18;;:::i;12630:545::-;12732:2;12727:3;12724:11;12721:448;;;12768:1;12793:5;12789:2;12782:17;12838:4;12834:2;12824:19;12908:2;12896:10;12892:19;12889:1;12885:27;12879:4;12875:38;12944:4;12932:10;12929:20;12926:47;;;-1:-1:-1;12967:4:32;12926:47;13022:2;13017:3;13013:12;13010:1;13006:20;13000:4;12996:31;12986:41;;13077:82;13095:2;13088:5;13085:13;13077:82;;;13140:17;;;13121:1;13110:13;13077:82;;;13081:3;;;12630:545;;;:::o;13351:1352::-;13477:3;13471:10;13504:18;13496:6;13493:30;13490:56;;;13526:18;;:::i;:::-;13555:97;13645:6;13605:38;13637:4;13631:11;13605:38;:::i;:::-;13599:4;13555:97;:::i;:::-;13707:4;;13771:2;13760:14;;13788:1;13783:663;;;;14490:1;14507:6;14504:89;;;-1:-1:-1;14559:19:32;;;14553:26;14504:89;-1:-1:-1;;13308:1:32;13304:11;;;13300:24;13296:29;13286:40;13332:1;13328:11;;;13283:57;14606:81;;13753:944;;13783:663;12577:1;12570:14;;;12614:4;12601:18;;-1:-1:-1;;13819:20:32;;;13937:236;13951:7;13948:1;13945:14;13937:236;;;14040:19;;;14034:26;14019:42;;14132:27;;;;14100:1;14088:14;;;;13967:19;;13937:236;;;13941:3;14201:6;14192:7;14189:19;14186:201;;;14262:19;;;14256:26;-1:-1:-1;;14345:1:32;14341:14;;;14357:3;14337:24;14333:37;14329:42;14314:58;14299:74;;14186:201;-1:-1:-1;;;;;14433:1:32;14417:14;;;14413:22;14400:36;;-1:-1:-1;13351:1352:32:o;18554:127::-;18615:10;18610:3;18606:20;18603:1;18596:31;18646:4;18643:1;18636:15;18670:4;18667:1;18660:15;19360:127;19421:10;19416:3;19412:20;19409:1;19402:31;19452:4;19449:1;19442:15;19476:4;19473:1;19466:15;19492:127;19553:10;19548:3;19544:20;19541:1;19534:31;19584:4;19581:1;19574:15;19608:4;19605:1;19598:15;19624:217;19664:1;19690;19680:132;;19734:10;19729:3;19725:20;19722:1;19715:31;19769:4;19766:1;19759:15;19797:4;19794:1;19787:15;19680:132;-1:-1:-1;19826:9:32;;19624:217::o;19846:185::-;-1:-1:-1;;;;;19967:10:32;;;19955;;;19951:27;;19990:12;;;19987:38;;;20005:18;;:::i;:::-;19987:38;19846:185;;;;:::o;20308:182::-;-1:-1:-1;;;;;20415:10:32;;;20427;;;20411:27;;20450:11;;;20447:37;;;20464:18;;:::i"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","MAX_SUPPLY()":"32cb6b0c","MIN_BALANCE()":"867378c5","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","maxTransferAmount()":"a9e75723","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","setMaxTransferAmount(uint256)":"8bf55409","setTokenURI(string)":"e0df5b6f","setTransferRestriction(bool)":"0d659ec5","symbol()":"95d89b41","tokenURI()":"3c130d90","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transferRestricted()":"48709a93","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTransferAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newTokenURI\",\"type\":\"string\"}],\"name\":\"TokenURISet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"TransferRestrictionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransferAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTransferAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newTokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"setTransferRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in ERC-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"\\u9500\\u6bc1\\u4ee3\\u5e01\",\"params\":{\"amount\":\"\\u9500\\u6bc1\\u6570\\u91cf\"}},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"mint(address,uint256)\":{\"details\":\"\\u94f8\\u9020\\u4ee3\\u5e01\",\"params\":{\"amount\":\"\\u94f8\\u9020\\u6570\\u91cf\",\"to\":\"\\u63a5\\u6536\\u5730\\u5740\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"\\u6682\\u505c\\u5408\\u7ea6\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMaxTransferAmount(uint256)\":{\"details\":\"\\u8bbe\\u7f6e\\u6700\\u5927\\u8f6c\\u8d26\\u91d1\\u989d\",\"params\":{\"newAmount\":\"\\u65b0\\u7684\\u6700\\u5927\\u8f6c\\u8d26\\u91d1\\u989d\"}},\"setTokenURI(string)\":{\"details\":\"\\u8bbe\\u7f6e\\u4ee3\\u5e01URI\",\"params\":{\"newTokenURI\":\"\\u65b0\\u7684URI\"}},\"setTransferRestriction(bool)\":{\"details\":\"\\u66f4\\u65b0\\u8f6c\\u8d26\\u9650\\u5236\\u72b6\\u6001\",\"params\":{\"newStatus\":\"\\u65b0\\u7684\\u9650\\u5236\\u72b6\\u6001\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenURI()\":{\"details\":\"\\u83b7\\u53d6\\u4ee3\\u5e01URI\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"\\u6062\\u590d\\u5408\\u7ea6\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NewToken.sol\":\"NewToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0x3f91c79d6f55db9e4fc36e1cfe6a483a7b0f5be60fecbd979555071673746d47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1e3c64cbeb2757a2a1a45c69f7f3984a93b0eadd1016341b64f9d94f89d7c4\",\"dweb:/ipfs/QmP1Mj14U4vMTFa2rv2nodMbWSCov2ac9Md8W2aUcgYdKX\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x62dc9346044aabf22d78541bd495aa6ca05a7f5100aed26196ba35d40b59fcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5221df4501c74cd4493fee1a0f0788e02c4dc78c3c601e9f557f557c5a53ea92\",\"dweb:/ipfs/QmZpzyYY9dKLrgvYhXSHT93jwqb1UGvtGNMQk5dpECY5pa\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0x66364cd3247ea71cdb58f080f5d5ed6732433a8001413139661841535494692f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f87914c6645b58eaf75f00a156037a7da91129f3a56aec44aebfc715b19ea44\",\"dweb:/ipfs/QmNX7NLSMXyWuogvf8wfCwjUGwLhLBZrGktWPSdoHtERGp\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0x36776530f012618bc7526ceb28e77b85e582cb12d9b9466a71d4bd6bf952e4cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f867d046908497287d8a67643dd5d7e38c4027af4ab0a74ffbe1d6790c383c6\",\"dweb:/ipfs/QmQ7s9gMP1nkwThFmoDifnGgpUMsMe5q5ZrAxGDsNnRGza\"]},\"contracts/CustomERC20.sol\":{\"keccak256\":\"0xaf7fa858aef71661986fb4f58080e4f1d50d2a876b2acc8b56c506057b0e9a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b941f5427e8a2214cd40fe228839e30b32ef748901800a42b6fda4c1dd9f5d6\",\"dweb:/ipfs/QmU7QDLFRKXhVaXUSDtiov9ynvfKSGBjJT1zDjBLR5U4ub\"]},\"contracts/NewToken.sol\":{\"keccak256\":\"0x187b2ee44fac7c7a9487560e91d513dbfd5119763bc9f0cca748ffc555fde530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0fabab631ecd176643d6561e6c6be2579dff0c95eee68e73cdcc05f9f564a8b\",\"dweb:/ipfs/QmbjgvUCoc38DbaDMzSfBXo5AgTSDHtwnuRrkn1yFoYdRz\"]}},\"version\":1}"}}}}}